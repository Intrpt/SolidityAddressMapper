{"contracts":{"Rubixi.sol":{"Rubixi":{"evm":{"deployedBytecode":{"object":"6080604052600436106100ec5760003560e01c80638a5fb3ca1161008a578063b402295011610059578063b4022950146102ba578063ced92670146102e3578063d11f13df1461030c578063fae1419214610337576100ed565b80638a5fb3ca146101fc5780639dbc4f9b14610228578063a26dbf2614610266578063a6f9dae114610291576100ed565b806357d4021b116100c657806357d4021b1461017757806367f809e9146101a2578063686f2c90146101b95780636fbaaa1e146101d0576100ed565b806309dfdc71146100f7578063253459e3146101235780634229616d1461014e576100ed565b5b6100f5610360565b005b34801561010357600080fd5b5061010c6103c2565b60405161011a929190610d47565b60405180910390f35b34801561012f57600080fd5b506101386103fe565b6040516101459190610d77565b60405180910390f35b34801561015a57600080fd5b5061017560048036038101906101709190610dc3565b61041b565b005b34801561018357600080fd5b5061018c61051f565b6040516101999190610d77565b60405180910390f35b3480156101ae57600080fd5b506101b7610561565b005b3480156101c557600080fd5b506101ce6105a4565b005b3480156101dc57600080fd5b506101e561066d565b6040516101f3929190610d47565b60405180910390f35b34801561020857600080fd5b50610211610698565b60405161021f929190610d47565b60405180910390f35b34801561023457600080fd5b5061024f600480360381019061024a9190610dc3565b6106c0565b60405161025d929190610e31565b60405180910390f35b34801561027257600080fd5b5061027b610758565b6040516102889190610d77565b60405180910390f35b34801561029d57600080fd5b506102b860048036038101906102b39190610e98565b610765565b005b3480156102c657600080fd5b506102e160048036038101906102dc9190610dc3565b6107ff565b005b3480156102ef57600080fd5b5061030a60048036038101906103059190610dc3565b610901565b005b34801561031857600080fd5b5061032161097b565b60405161032e9190610d77565b60405180910390f35b34801561034357600080fd5b5061035e60048036038101906103599190610dc3565b610995565b005b670de0b6b3a764000034101561038e5734600160008282546103829190610ef4565b925050819055506103c0565b600060025490506802b5e3af16b188000034106103b5576002816103b29190610f57565b90505b6103be81610a03565b505b565b60006060670de0b6b3a76400006000546103dc9190610f57565b915060405180610100016040528060ca81526020016110b260ca913990509091565b6000670de0b6b3a76400006001546104169190610f57565b905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361051c57600060015414806104815750606481115b1561048b57600080fd5b600081606460015461049d9190610f57565b6104a79190610f88565b9050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050505080600160008282546105139190610fca565b92505081905550505b50565b6000670de0b6b3a76400006006600454815481106105405761053f610ffe565b5b90600052602060002090600202016001015461055c9190610f57565b905090565b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361066b5760006001540361060857600080fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f193505050505060006001819055505b565b60006060600354915060405180610140016040528061011f815260200161117c61011f913990509091565b6000606060025491506040518060c001604052806084815260200161102e6084913990509091565b600080600680549050831161075357600683815481106106e3576106e2610ffe565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150670de0b6b3a76400006006848154811061073457610733610ffe565b5b9060005260206000209060020201600101546107509190610f57565b90505b915091565b6000600680549050905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036107fc5780600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036108fe57670de0b6b3a7640000816108689190610f88565b905060015481111561087d5761087c6105a4565b5b60006001540361088c57600080fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050505080600160008282546108f69190610fca565b925050819055505b50565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036109785761012c8111806109665750607881105b1561097057600080fd5b806003819055505b50565b60006004546006805490506109909190610fca565b905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610a0057600a8111156109f857600080fd5b806002819055505b50565b600660405180604001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001606460035434610a3c9190610f88565b610a469190610f57565b815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101555050600a60068054905003610adf5760c8600381905550610af6565b601960068054905003610af55760966003819055505b5b6064816064610b059190610fca565b34610b109190610f88565b610b1a9190610f57565b600080828254610b2a9190610ef4565b9250508190555060648134610b3f9190610f88565b610b499190610f57565b60016000828254610b5a9190610ef4565b925050819055505b600660045481548110610b7857610b77610ffe565b5b9060005260206000209060020201600101546000541115610c9b576000600660045481548110610bab57610baa610ffe565b5b9060005260206000209060020201600101549050600660045481548110610bd557610bd4610ffe565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505050600660045481548110610c5257610c51610ffe565b5b906000526020600020906002020160010154600080828254610c749190610fca565b92505081905550600160046000828254610c8e9190610ef4565b9250508190555050610b62565b50565b6000819050919050565b610cb181610c9e565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610cf1578082015181840152602081019050610cd6565b60008484015250505050565b6000601f19601f8301169050919050565b6000610d1982610cb7565b610d238185610cc2565b9350610d33818560208601610cd3565b610d3c81610cfd565b840191505092915050565b6000604082019050610d5c6000830185610ca8565b8181036020830152610d6e8184610d0e565b90509392505050565b6000602082019050610d8c6000830184610ca8565b92915050565b600080fd5b610da081610c9e565b8114610dab57600080fd5b50565b600081359050610dbd81610d97565b92915050565b600060208284031215610dd957610dd8610d92565b5b6000610de784828501610dae565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e1b82610df0565b9050919050565b610e2b81610e10565b82525050565b6000604082019050610e466000830185610e22565b610e536020830184610ca8565b9392505050565b6000610e6582610df0565b9050919050565b610e7581610e5a565b8114610e8057600080fd5b50565b600081359050610e9281610e6c565b92915050565b600060208284031215610eae57610ead610d92565b5b6000610ebc84828501610e83565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610eff82610c9e565b9150610f0a83610c9e565b9250828201905080821115610f2257610f21610ec5565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f6282610c9e565b9150610f6d83610c9e565b925082610f7d57610f7c610f28565b5b828204905092915050565b6000610f9382610c9e565b9150610f9e83610c9e565b9250828202610fac81610c9e565b91508282048414831517610fc357610fc2610ec5565b5b5092915050565b6000610fd582610c9e565b9150610fe083610c9e565b9250828203905081811115610ff857610ff7610ec5565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfe53686f776e20696e202520666f726d2e204665652069732068616c766564283530252920666f7220616d6f756e747320657175616c206f722067726561746572207468616e203530206574686572732e2028466565206d6179206368616e67652c206275742069732063617070656420746f2061206d6178696d756d206f662031302529416c6c2062616c616e63652076616c75657320617265206d6561737572656420696e204574686572732c206e6f746520746861742064756520746f206e6f20646563696d616c20706c6163696e672c2074686573652076616c7565732073686f7720757020617320696e746567657273206f6e6c792c2077697468696e2074686520636f6e747261637420697473656c6620796f752077696c6c206765742074686520657861637420646563696d616c2076616c756520796f752061726520737570706f73656420746f54686973206d756c7469706c696572206170706c69657320746f20796f7520617320736f6f6e206173207472616e73616374696f6e2069732072656365697665642c206d6179206265206c6f776572656420746f2068617374656e207061796f757473206f7220696e63726561736564206966207061796f75747320617265206661737420656e6f7567682e2044756520746f206e6f20666c6f6174206f7220646563696d616c732c206d756c7469706c696572206973207831303020666f722061206672616374696f6e616c206d756c7469706c69657220652e672e203235302069732061637475616c6c79206120322e3578206d756c7469706c6965722e20436170706564206174203378206d617820616e6420312e3278206d696e2ea2646970667358221220d1e3243b58988ef70c8807fc839ed963ffdb4533af16925c710d043b1e9df85064736f6c634300081a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A5FB3CA GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB4022950 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xB4022950 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xCED92670 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xD11F13DF EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0xFAE14192 EQ PUSH2 0x337 JUMPI PUSH2 0xED JUMP JUMPDEST DUP1 PUSH4 0x8A5FB3CA EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x9DBC4F9B EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0xA26DBF26 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0x291 JUMPI PUSH2 0xED JUMP JUMPDEST DUP1 PUSH4 0x57D4021B GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x57D4021B EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x67F809E9 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x686F2C90 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x6FBAAA1E EQ PUSH2 0x1D0 JUMPI PUSH2 0xED JUMP JUMPDEST DUP1 PUSH4 0x9DFDC71 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x253459E3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x4229616D EQ PUSH2 0x14E JUMPI PUSH2 0xED JUMP JUMPDEST JUMPDEST PUSH2 0xF5 PUSH2 0x360 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP3 SWAP2 SWAP1 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH2 0x41B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x51F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH2 0x561 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x5A4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E5 PUSH2 0x66D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP3 SWAP2 SWAP1 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x698 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP3 SWAP2 SWAP1 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP3 SWAP2 SWAP1 PUSH2 0xE31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x758 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0xE98 JUMP JUMPDEST PUSH2 0x765 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH2 0x901 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x321 PUSH2 0x97B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32E SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x359 SWAP2 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH2 0x995 JUMP JUMPDEST STOP JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE LT ISZERO PUSH2 0x38E JUMPI CALLVALUE PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0xEF4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH9 0x2B5E3AF16B1880000 CALLVALUE LT PUSH2 0x3B5 JUMPI PUSH1 0x2 DUP2 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0xF57 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x3BE DUP2 PUSH2 0xA03 JUMP JUMPDEST POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 SLOAD PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0xF57 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xCA DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10B2 PUSH1 0xCA SWAP2 CODECOPY SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 SLOAD PUSH2 0x416 SWAP2 SWAP1 PUSH2 0xF57 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x51C JUMPI PUSH1 0x0 PUSH1 0x1 SLOAD EQ DUP1 PUSH2 0x481 JUMPI POP PUSH1 0x64 DUP2 GT JUMPDEST ISZERO PUSH2 0x48B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x64 PUSH1 0x1 SLOAD PUSH2 0x49D SWAP2 SWAP1 PUSH2 0xF57 JUMP JUMPDEST PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0xF88 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x513 SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x6 PUSH1 0x4 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x540 JUMPI PUSH2 0x53F PUSH2 0xFFE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x55C SWAP2 SWAP1 PUSH2 0xF57 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x66B JUMPI PUSH1 0x0 PUSH1 0x1 SLOAD SUB PUSH2 0x608 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x1 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP POP PUSH1 0x0 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x3 SLOAD SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x11F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x117C PUSH2 0x11F SWAP2 CODECOPY SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x2 SLOAD SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x84 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x102E PUSH1 0x84 SWAP2 CODECOPY SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP4 GT PUSH2 0x753 JUMPI PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x6E3 JUMPI PUSH2 0x6E2 PUSH2 0xFFE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x734 JUMPI PUSH2 0x733 PUSH2 0xFFE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x750 SWAP2 SWAP1 PUSH2 0xF57 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7FC JUMPI DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8FE JUMPI PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x868 SWAP2 SWAP1 PUSH2 0xF88 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0x87D JUMPI PUSH2 0x87C PUSH2 0x5A4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SUB PUSH2 0x88C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8F6 SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x978 JUMPI PUSH2 0x12C DUP2 GT DUP1 PUSH2 0x966 JUMPI POP PUSH1 0x78 DUP2 LT JUMPDEST ISZERO PUSH2 0x970 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD PUSH1 0x6 DUP1 SLOAD SWAP1 POP PUSH2 0x990 SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA00 JUMPI PUSH1 0xA DUP2 GT ISZERO PUSH2 0x9F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 PUSH1 0x3 SLOAD CALLVALUE PUSH2 0xA3C SWAP2 SWAP1 PUSH2 0xF88 JUMP JUMPDEST PUSH2 0xA46 SWAP2 SWAP1 PUSH2 0xF57 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0xA PUSH1 0x6 DUP1 SLOAD SWAP1 POP SUB PUSH2 0xADF JUMPI PUSH1 0xC8 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0xAF6 JUMP JUMPDEST PUSH1 0x19 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SUB PUSH2 0xAF5 JUMPI PUSH1 0x96 PUSH1 0x3 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH1 0x64 DUP2 PUSH1 0x64 PUSH2 0xB05 SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST CALLVALUE PUSH2 0xB10 SWAP2 SWAP1 PUSH2 0xF88 JUMP JUMPDEST PUSH2 0xB1A SWAP2 SWAP1 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0xB2A SWAP2 SWAP1 PUSH2 0xEF4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x64 DUP2 CALLVALUE PUSH2 0xB3F SWAP2 SWAP1 PUSH2 0xF88 JUMP JUMPDEST PUSH2 0xB49 SWAP2 SWAP1 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB5A SWAP2 SWAP1 PUSH2 0xEF4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x6 PUSH1 0x4 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xB78 JUMPI PUSH2 0xB77 PUSH2 0xFFE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x0 SLOAD GT ISZERO PUSH2 0xC9B JUMPI PUSH1 0x0 PUSH1 0x6 PUSH1 0x4 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xBAB JUMPI PUSH2 0xBAA PUSH2 0xFFE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x6 PUSH1 0x4 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xBD5 JUMPI PUSH2 0xBD4 PUSH2 0xFFE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP POP PUSH1 0x6 PUSH1 0x4 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xC52 JUMPI PUSH2 0xC51 PUSH2 0xFFE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0xC74 SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC8E SWAP2 SWAP1 PUSH2 0xEF4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP PUSH2 0xB62 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCB1 DUP2 PUSH2 0xC9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCF1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD19 DUP3 PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0xD23 DUP2 DUP6 PUSH2 0xCC2 JUMP JUMPDEST SWAP4 POP PUSH2 0xD33 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xCD3 JUMP JUMPDEST PUSH2 0xD3C DUP2 PUSH2 0xCFD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD5C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xCA8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xD6E DUP2 DUP5 PUSH2 0xD0E JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD8C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA0 DUP2 PUSH2 0xC9E JUMP JUMPDEST DUP2 EQ PUSH2 0xDAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDBD DUP2 PUSH2 0xD97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD9 JUMPI PUSH2 0xDD8 PUSH2 0xD92 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDE7 DUP5 DUP3 DUP6 ADD PUSH2 0xDAE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1B DUP3 PUSH2 0xDF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE2B DUP2 PUSH2 0xE10 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE46 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE22 JUMP JUMPDEST PUSH2 0xE53 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCA8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE65 DUP3 PUSH2 0xDF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE75 DUP2 PUSH2 0xE5A JUMP JUMPDEST DUP2 EQ PUSH2 0xE80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE92 DUP2 PUSH2 0xE6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEAE JUMPI PUSH2 0xEAD PUSH2 0xD92 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEBC DUP5 DUP3 DUP6 ADD PUSH2 0xE83 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEFF DUP3 PUSH2 0xC9E JUMP JUMPDEST SWAP2 POP PUSH2 0xF0A DUP4 PUSH2 0xC9E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF22 JUMPI PUSH2 0xF21 PUSH2 0xEC5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF62 DUP3 PUSH2 0xC9E JUMP JUMPDEST SWAP2 POP PUSH2 0xF6D DUP4 PUSH2 0xC9E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF7D JUMPI PUSH2 0xF7C PUSH2 0xF28 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF93 DUP3 PUSH2 0xC9E JUMP JUMPDEST SWAP2 POP PUSH2 0xF9E DUP4 PUSH2 0xC9E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xFAC DUP2 PUSH2 0xC9E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xFC3 JUMPI PUSH2 0xFC2 PUSH2 0xEC5 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD5 DUP3 PUSH2 0xC9E JUMP JUMPDEST SWAP2 POP PUSH2 0xFE0 DUP4 PUSH2 0xC9E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xFF8 JUMPI PUSH2 0xFF7 PUSH2 0xEC5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID MSTORE8 PUSH9 0x6F776E20696E202520 PUSH7 0x6F726D2E204665 PUSH6 0x206973206861 PUSH13 0x766564283530252920666F7220 PUSH2 0x6D6F PUSH22 0x6E747320657175616C206F7220677265617465722074 PUSH9 0x616E20353020657468 PUSH6 0x72732E202846 PUSH6 0x65206D617920 PUSH4 0x68616E67 PUSH6 0x2C2062757420 PUSH10 0x73206361707065642074 PUSH16 0x2061206D6178696D756D206F66203130 0x25 0x29 COINBASE PUSH13 0x6C2062616C616E63652076616C PUSH22 0x657320617265206D6561737572656420696E20457468 PUSH6 0x72732C206E6F PUSH21 0x6520746861742064756520746F206E6F2064656369 PUSH14 0x616C20706C6163696E672C207468 PUSH6 0x73652076616C PUSH22 0x65732073686F7720757020617320696E746567657273 KECCAK256 PUSH16 0x6E6C792C2077697468696E2074686520 PUSH4 0x6F6E7472 PUSH2 0x6374 KECCAK256 PUSH10 0x7473656C6620796F7520 PUSH24 0x696C6C206765742074686520657861637420646563696D61 PUSH13 0x2076616C756520796F75206172 PUSH6 0x20737570706F PUSH20 0x656420746F54686973206D756C7469706C696572 KECCAK256 PUSH2 0x7070 PUSH13 0x69657320746F20796F75206173 KECCAK256 PUSH20 0x6F6F6E206173207472616E73616374696F6E2069 PUSH20 0x2072656365697665642C206D6179206265206C6F PUSH24 0x6572656420746F2068617374656E207061796F757473206F PUSH19 0x20696E63726561736564206966207061796F75 PUSH21 0x7320617265206661737420656E6F7567682E204475 PUSH6 0x20746F206E6F KECCAK256 PUSH7 0x6C6F6174206F72 KECCAK256 PUSH5 0x6563696D61 PUSH13 0x732C206D756C7469706C696572 KECCAK256 PUSH10 0x73207831303020666F72 KECCAK256 PUSH2 0x2066 PUSH19 0x616374696F6E616C206D756C7469706C696572 KECCAK256 PUSH6 0x2E672E203235 ADDRESS KECCAK256 PUSH10 0x732061637475616C6C79 KECCAK256 PUSH2 0x2032 0x2E CALLDATALOAD PUSH25 0x206D756C7469706C6965722E20436170706564206174203378 KECCAK256 PUSH14 0x617820616E6420312E3278206D69 PUSH15 0x2EA2646970667358221220D1E3243B PC SWAP9 DUP15 0xF7 0xC DUP9 SMOD 0xFC DUP4 SWAP15 0xD9 PUSH4 0xFFDB4533 0xAF AND SWAP3 TLOAD PUSH18 0xD043B1E9DF85064736F6C634300081A0033 ","sourceMap":"386:6439:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1283:6;:4;:6::i;:::-;386:6439;5388:405;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;6009:142;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3639:309;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5806:190;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;800:118;;;;;;;;;;;;;:::i;:::-;;3118:194;;;;;;;;;;;;;:::i;:::-;;4605:465;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;5083:292;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;6465:356;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;6164:121;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4030:111;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3325:301;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4154:175;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6298:154;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4342:152;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1357:502;1521:7;1509:9;:19;1505:134;;;1575:9;1558:13;;:26;;;;;;;:::i;:::-;;;;;;;;1612:7;;1505:134;1660:9;1672:10;;1660:22;;1790:8;1777:9;:21;1773:36;;1808:1;1800:9;;;;;:::i;:::-;;;1773:36;1831:15;1841:4;1831:9;:15::i;:::-;1381:478;1357:502;:::o;5388:405::-;5454:19;5475:18;5542:7;5532;;:17;;;;:::i;:::-;5515:34;;5569:211;;;;;;;;;;;;;;;;;;;5388:405;;:::o;6009:142::-;6077:9;6131:7;6115:13;;:23;;;;:::i;:::-;6108:30;;6009:142;:::o;3639:309::-;997:7;;;;;;;;;;;974:30;;982:10;974:30;;;970:37;;3740:1:::1;3723:13;;:18;:34;;;;3754:3;3745:6;:12;3723:34;3719:48;;;3759:8;::::0;::::1;3719:48;3789:18;3832:6;3826:3;3810:13;;:19;;;;:::i;:::-;:28;;;;:::i;:::-;3789:49;;3858:7;;;;;;;;;;;:12;;:27;3871:13;3858:27;;;;;;;;;;;;;;;;;;;;;;;;3922:13;3905;;:30;;;;;;;:::i;:::-;;;;;;;;3699:249;970:37:::0;3639:309;:::o;5806:190::-;5885:18;5976:7;5941:12;5954:11;;5941:25;;;;;;;;:::i;:::-;;;;;;;;;;;;:32;;;:42;;;;:::i;:::-;5925:58;;5806:190;:::o;800:118::-;871:10;853:7;;:29;;;;;;;;;;;;;;;;;;800:118::o;3118:194::-;997:7;;;;;;;;;;;974:30;;982:10;974:30;;;970:37;;3202:1:::1;3185:13;;:18:::0;3181:32:::1;;3205:8;::::0;::::1;3181:32;3235:7;;;;;;;;;;;:12;;:27;3248:13;;3235:27;;;;;;;;;;;;;;;;;;;;;;;;3298:1;3282:13;:17;;;;970:37:::0;3118:194::o;4605:465::-;4654:15;4671:18;4724:17;;4711:30;;4761:296;;;;;;;;;;;;;;;;;;;4605:465;;:::o;5083:292::-;5135:8;5145:18;5191:10;;5185:16;;5221:141;;;;;;;;;;;;;;;;;;;5083:292;;:::o;6465:356::-;6534:15;6551:11;6606:12;:19;;;;6588:14;:37;6584:225;;6665:12;6678:14;6665:28;;;;;;;;:::i;:::-;;;;;;;;;;;;:41;;;;;;;;;;;;6655:51;;6781:7;6743:12;6756:14;6743:28;;;;;;;;:::i;:::-;;;;;;;;;;;;:35;;;:45;;;;:::i;:::-;6734:54;;6584:225;6465:356;;;:::o;6164:121::-;6213:10;6253:12;:19;;;;6245:27;;6164:121;:::o;4030:111::-;997:7;;;;;;;;;;;974:30;;982:10;974:30;;;970:37;;4122:6:::1;4112:7;;:16;;;;;;;;;;;;;;;;;;970:37:::0;4030:111;:::o;3325:301::-;997:7;;;;;;;;;;;974:30;;982:10;974:30;;;970:37;;3409:7:::1;3401:15;;;;;:::i;:::-;;;3447:13;;3440:4;:20;3436:42;;;3462:16;:14;:16::i;:::-;3436:42;3521:1;3504:13;;:18:::0;3500:32:::1;;3524:8;::::0;::::1;3500:32;3554:7;;;;;;;;;;;:12;;:18;3567:4;3554:18;;;;;;;;;;;;;;;;;;;;;;;;3609:4;3592:13;;:21;;;;;;;:::i;:::-;;;;;;;;970:37:::0;3325:301;:::o;4154:175::-;997:7;;;;;;;;;;;974:30;;982:10;974:30;;;970:37;;4241:3:::1;4233:5;:11;:26;;;;4256:3;4248:5;:11;4233:26;4229:40;;;4261:8;::::0;::::1;4229:40;4311:5;4291:17;:25;;;;970:37:::0;4154:175;:::o;6298:154::-;6366:10;6428:11;;6406:12;:19;;;;:33;;;;:::i;:::-;6398:41;;6298:154;:::o;4342:152::-;997:7;;;;;;;;;;;974:30;;982:10;974:30;;;970:37;;4430:2:::1;4423:4;:9;4419:23;;;4434:8;::::0;::::1;4419:23;4477:4;4464:10;:17;;;;970:37:::0;4342:152;:::o;1929:1138::-;2045:12;2063:71;;;;;;;;2083:10;2063:71;;;;;;2130:3;2109:17;;2097:9;:29;;;;:::i;:::-;2096:37;;;;:::i;:::-;2063:71;;;2045:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2316:2;2293:12;:19;;;;:25;2289:133;;2340:3;2320:17;:23;;;;2289:133;;;2395:2;2372:12;:19;;;;:25;2368:54;;2419:3;2399:17;:23;;;;2368:54;2289:133;2546:3;2537:4;2531:3;:10;;;;:::i;:::-;2518:9;:24;;;;:::i;:::-;2517:32;;;;:::i;:::-;2506:7;;:43;;;;;;;:::i;:::-;;;;;;;;2607:3;2599:4;2587:9;:16;;;;:::i;:::-;2586:24;;;;:::i;:::-;2569:13;;:41;;;;;;;:::i;:::-;;;;;;;;2701:354;2718:12;2731:11;;2718:25;;;;;;;;:::i;:::-;;;;;;;;;;;;:32;;;2708:7;;:42;2701:354;;;2780:17;2800:12;2813:11;;2800:25;;;;;;;;:::i;:::-;;;;;;;;;;;;:32;;;2780:52;;2860:12;2873:11;;2860:25;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;;;;;;;;;:43;;:57;2904:12;2860:57;;;;;;;;;;;;;;;;;;;;;;;;2958:12;2971:11;;2958:25;;;;;;;;:::i;:::-;;;;;;;;;;;;:32;;;2947:7;;:43;;;;;;;:::i;:::-;;;;;;;;3033:1;3018:11;;:16;;;;;;;:::i;:::-;;;;;;;;2752:303;2701:354;;;1929:1138;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:99::-;266:6;300:5;294:12;284:22;;214:99;;;:::o;319:169::-;403:11;437:6;432:3;425:19;477:4;472:3;468:14;453:29;;319:169;;;;:::o;494:248::-;576:1;586:113;600:6;597:1;594:13;586:113;;;685:1;680:3;676:11;670:18;666:1;661:3;657:11;650:39;622:2;619:1;615:10;610:15;;586:113;;;733:1;724:6;719:3;715:16;708:27;556:186;494:248;;;:::o;748:102::-;789:6;840:2;836:7;831:2;824:5;820:14;816:28;806:38;;748:102;;;:::o;856:377::-;944:3;972:39;1005:5;972:39;:::i;:::-;1027:71;1091:6;1086:3;1027:71;:::i;:::-;1020:78;;1107:65;1165:6;1160:3;1153:4;1146:5;1142:16;1107:65;:::i;:::-;1197:29;1219:6;1197:29;:::i;:::-;1192:3;1188:39;1181:46;;948:285;856:377;;;;:::o;1239:423::-;1380:4;1418:2;1407:9;1403:18;1395:26;;1431:71;1499:1;1488:9;1484:17;1475:6;1431:71;:::i;:::-;1549:9;1543:4;1539:20;1534:2;1523:9;1519:18;1512:48;1577:78;1650:4;1641:6;1577:78;:::i;:::-;1569:86;;1239:423;;;;;:::o;1668:222::-;1761:4;1799:2;1788:9;1784:18;1776:26;;1812:71;1880:1;1869:9;1865:17;1856:6;1812:71;:::i;:::-;1668:222;;;;:::o;1977:117::-;2086:1;2083;2076:12;2223:122;2296:24;2314:5;2296:24;:::i;:::-;2289:5;2286:35;2276:63;;2335:1;2332;2325:12;2276:63;2223:122;:::o;2351:139::-;2397:5;2435:6;2422:20;2413:29;;2451:33;2478:5;2451:33;:::i;:::-;2351:139;;;;:::o;2496:329::-;2555:6;2604:2;2592:9;2583:7;2579:23;2575:32;2572:119;;;2610:79;;:::i;:::-;2572:119;2730:1;2755:53;2800:7;2791:6;2780:9;2776:22;2755:53;:::i;:::-;2745:63;;2701:117;2496:329;;;;:::o;2831:126::-;2868:7;2908:42;2901:5;2897:54;2886:65;;2831:126;;;:::o;2963:96::-;3000:7;3029:24;3047:5;3029:24;:::i;:::-;3018:35;;2963:96;;;:::o;3065:118::-;3152:24;3170:5;3152:24;:::i;:::-;3147:3;3140:37;3065:118;;:::o;3189:332::-;3310:4;3348:2;3337:9;3333:18;3325:26;;3361:71;3429:1;3418:9;3414:17;3405:6;3361:71;:::i;:::-;3442:72;3510:2;3499:9;3495:18;3486:6;3442:72;:::i;:::-;3189:332;;;;;:::o;3527:104::-;3572:7;3601:24;3619:5;3601:24;:::i;:::-;3590:35;;3527:104;;;:::o;3637:138::-;3718:32;3744:5;3718:32;:::i;:::-;3711:5;3708:43;3698:71;;3765:1;3762;3755:12;3698:71;3637:138;:::o;3781:155::-;3835:5;3873:6;3860:20;3851:29;;3889:41;3924:5;3889:41;:::i;:::-;3781:155;;;;:::o;3942:345::-;4009:6;4058:2;4046:9;4037:7;4033:23;4029:32;4026:119;;;4064:79;;:::i;:::-;4026:119;4184:1;4209:61;4262:7;4253:6;4242:9;4238:22;4209:61;:::i;:::-;4199:71;;4155:125;3942:345;;;;:::o;4293:180::-;4341:77;4338:1;4331:88;4438:4;4435:1;4428:15;4462:4;4459:1;4452:15;4479:191;4519:3;4538:20;4556:1;4538:20;:::i;:::-;4533:25;;4572:20;4590:1;4572:20;:::i;:::-;4567:25;;4615:1;4612;4608:9;4601:16;;4636:3;4633:1;4630:10;4627:36;;;4643:18;;:::i;:::-;4627:36;4479:191;;;;:::o;4676:180::-;4724:77;4721:1;4714:88;4821:4;4818:1;4811:15;4845:4;4842:1;4835:15;4862:185;4902:1;4919:20;4937:1;4919:20;:::i;:::-;4914:25;;4953:20;4971:1;4953:20;:::i;:::-;4948:25;;4992:1;4982:35;;4997:18;;:::i;:::-;4982:35;5039:1;5036;5032:9;5027:14;;4862:185;;;;:::o;5053:410::-;5093:7;5116:20;5134:1;5116:20;:::i;:::-;5111:25;;5150:20;5168:1;5150:20;:::i;:::-;5145:25;;5205:1;5202;5198:9;5227:30;5245:11;5227:30;:::i;:::-;5216:41;;5406:1;5397:7;5393:15;5390:1;5387:22;5367:1;5360:9;5340:83;5317:139;;5436:18;;:::i;:::-;5317:139;5101:362;5053:410;;;;:::o;5469:194::-;5509:4;5529:20;5547:1;5529:20;:::i;:::-;5524:25;;5563:20;5581:1;5563:20;:::i;:::-;5558:25;;5607:1;5604;5600:9;5592:17;;5631:1;5625:4;5622:11;5619:37;;;5636:18;;:::i;:::-;5619:37;5469:194;;;;:::o;5669:180::-;5717:77;5714:1;5707:88;5814:4;5811:1;5804:15;5838:4;5835:1;5828:15"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"DynamicPyramid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"changeFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_mult\",\"type\":\"uint256\"}],\"name\":\"changeMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectAllFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amt\",\"type\":\"uint256\"}],\"name\":\"collectFeesInEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pcent\",\"type\":\"uint256\"}],\"name\":\"collectPercentOfFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"info\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"info\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentPyramidBalanceApproximately\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pyramidBalance\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"info\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesSeperateFromBalanceApproximately\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextPayoutWhenPyramidBalanceTotalsApproximately\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balancePayout\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfParticipantsWaitingForPayout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderInPyramid\",\"type\":\"uint256\"}],\"name\":\"participantDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"Address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"Payout\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalParticipants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Rubixi.sol\":\"Rubixi\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Rubixi.sol\":{\"content\":\"/*\\r\\n * @source: https://github.com/trailofbits/not-so-smart-contracts/blob/master/wrong_constructor_name/Rubixi_source_code/Rubixi.sol\\r\\n * Upgraded from Solidity 0.4 to 0.8, vulnerability may no longer exist\\r\\n * @author: -\\r\\n * @vulnerable_at_lines: 25,26\\r\\n */\\r\\n\\r\\n // 0xe82719202e5965Cf5D9B6673B7503a3b92DE20be#code\\r\\n // SPDX-License-Identifier: UNLICENSED\\r\\n pragma solidity ^0.8.0;\\r\\n\\r\\n contract Rubixi {\\r\\n\\r\\n         //Declare variables for storage critical to contract\\r\\n         uint private balance = 0;\\r\\n         uint private collectedFees = 0;\\r\\n         uint private feePercent = 10;\\r\\n         uint private pyramidMultiplier = 300;\\r\\n         uint private payoutOrder = 0;\\r\\n\\r\\n         address payable private creator;\\r\\n\\r\\n         //Sets creator\\r\\n         // <yes> <report> ACCESS_CONTROL\\r\\n         function DynamicPyramid() public {\\r\\n                 creator = payable(msg.sender); //anyone can call this\\r\\n         }\\r\\n\\r\\n         modifier onlyowner {\\r\\n                 if (payable(msg.sender) == creator) _;\\r\\n         }\\r\\n\\r\\n         struct Participant {\\r\\n                 address payable etherAddress;\\r\\n                 uint payout;\\r\\n         }\\r\\n\\r\\n         Participant[] private participants;\\r\\n\\r\\n         //Fallback function\\r\\n         fallback() external payable {\\r\\n                 init();\\r\\n         }\\r\\n\\r\\n         //init function run on fallback\\r\\n         function init() private {\\r\\n                 //Ensures only tx with value of 1 ether or greater are processed and added to pyramid\\r\\n                 if (msg.value < 1 ether) {\\r\\n                         collectedFees += msg.value;\\r\\n                         return;\\r\\n                 }\\r\\n\\r\\n                 uint _fee = feePercent;\\r\\n                 //50% fee rebate on any ether value of 50 or greater\\r\\n                 if (msg.value >= 50 ether) _fee /= 2;\\r\\n\\r\\n                 addPayout(_fee);\\r\\n         }\\r\\n\\r\\n         //Function called for valid tx to the contract\\r\\n         function addPayout(uint _fee) private {\\r\\n                 //Adds new address to participant array\\r\\n                 participants.push(Participant(payable(msg.sender), (msg.value * pyramidMultiplier) / 100));\\r\\n\\r\\n                 //These statements ensure a quicker payout system to later pyramid entrants, so the pyramid has a longer lifespan\\r\\n                 if (participants.length == 10) pyramidMultiplier = 200;\\r\\n                 else if (participants.length == 25) pyramidMultiplier = 150;\\r\\n\\r\\n                 // collect fees and update contract balance\\r\\n                 balance += (msg.value * (100 - _fee)) / 100;\\r\\n                 collectedFees += (msg.value * _fee) / 100;\\r\\n\\r\\n                 //Pays earlier participiants if balance sufficient\\r\\n                 while (balance > participants[payoutOrder].payout) {\\r\\n                         uint payoutToSend = participants[payoutOrder].payout;\\r\\n                         participants[payoutOrder].etherAddress.send(payoutToSend);\\r\\n\\r\\n                         balance -= participants[payoutOrder].payout;\\r\\n                         payoutOrder += 1;\\r\\n                 }\\r\\n         }\\r\\n\\r\\n         //Fee functions for creator\\r\\n         function collectAllFees() public onlyowner {\\r\\n                 if (collectedFees == 0) revert();\\r\\n\\r\\n                 creator.send(collectedFees);\\r\\n                 collectedFees = 0;\\r\\n         }\\r\\n\\r\\n         function collectFeesInEther(uint _amt) public onlyowner {\\r\\n                 _amt *= 1 ether;\\r\\n                 if (_amt > collectedFees) collectAllFees();\\r\\n\\r\\n                 if (collectedFees == 0) revert();\\r\\n\\r\\n                 creator.send(_amt);\\r\\n                 collectedFees -= _amt;\\r\\n         }\\r\\n\\r\\n         function collectPercentOfFees(uint _pcent) public onlyowner {\\r\\n                 if (collectedFees == 0 || _pcent > 100) revert();\\r\\n\\r\\n                 uint feesToCollect = collectedFees / 100 * _pcent;\\r\\n                 creator.send(feesToCollect);\\r\\n                 collectedFees -= feesToCollect;\\r\\n         }\\r\\n\\r\\n         //Functions for changing variables related to the contract\\r\\n         function changeOwner(address payable _owner) public onlyowner {\\r\\n                 creator = _owner;\\r\\n         }\\r\\n\\r\\n         function changeMultiplier(uint _mult) public onlyowner {\\r\\n                 if (_mult > 300 || _mult < 120) revert();\\r\\n\\r\\n                 pyramidMultiplier = _mult;\\r\\n         }\\r\\n\\r\\n         function changeFeePercentage(uint _fee) public onlyowner {\\r\\n                 if (_fee > 10) revert();\\r\\n\\r\\n                 feePercent = _fee;\\r\\n         }\\r\\n\\r\\n         //Functions to provide information to end-user using JSON interface or other interfaces\\r\\n         function currentMultiplier() public view returns(uint multiplier, string memory info) {\\r\\n                 multiplier = pyramidMultiplier;\\r\\n                 info = 'This multiplier applies to you as soon as transaction is received, may be lowered to hasten payouts or increased if payouts are fast enough. Due to no float or decimals, multiplier is x100 for a fractional multiplier e.g. 250 is actually a 2.5x multiplier. Capped at 3x max and 1.2x min.';\\r\\n         }\\r\\n\\r\\n         function currentFeePercentage() public view returns(uint fee, string memory info) {\\r\\n                 fee = feePercent;\\r\\n                 info = 'Shown in % form. Fee is halved(50%) for amounts equal or greater than 50 ethers. (Fee may change, but is capped to a maximum of 10%)';\\r\\n         }\\r\\n\\r\\n         function currentPyramidBalanceApproximately() public view returns(uint pyramidBalance, string memory info) {\\r\\n                 pyramidBalance = balance / 1 ether;\\r\\n                 info = 'All balance values are measured in Ethers, note that due to no decimal placing, these values show up as integers only, within the contract itself you will get the exact decimal value you are supposed to';\\r\\n         }\\r\\n\\r\\n         function nextPayoutWhenPyramidBalanceTotalsApproximately() public view returns(uint balancePayout) {\\r\\n                 balancePayout = participants[payoutOrder].payout / 1 ether;\\r\\n         }\\r\\n\\r\\n         function feesSeperateFromBalanceApproximately() public view returns(uint fees) {\\r\\n                 fees = collectedFees / 1 ether;\\r\\n         }\\r\\n\\r\\n         function totalParticipants() public view returns(uint count) {\\r\\n                 count = participants.length;\\r\\n         }\\r\\n\\r\\n         function numberOfParticipantsWaitingForPayout() public view returns(uint count) {\\r\\n                 count = participants.length - payoutOrder;\\r\\n         }\\r\\n\\r\\n         function participantDetails(uint orderInPyramid) public view returns(address Address, uint Payout) {\\r\\n                 if (orderInPyramid <= participants.length) {\\r\\n                         Address = participants[orderInPyramid].etherAddress;\\r\\n                         Payout = participants[orderInPyramid].payout / 1 ether;\\r\\n                 }\\r\\n         }\\r\\n }\\r\\n\",\"keccak256\":\"0x63326d863d8edc55db30fad3a67f2155543e687d06b40e3101afe39c49b31357\",\"license\":\"UNLICENSED\"}},\"version\":1}"}}},"errors":[{"component":"general","errorCode":"3628","formattedMessage":"Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n  --> Rubixi.sol:12:2:\n   |\n12 |  contract Rubixi {\n   |  ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n  --> Rubixi.sol:41:10:\n   |\n41 |          fallback() external payable {\n   |          ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.","secondarySourceLocations":[{"end":1302,"file":"Rubixi.sol","message":"The payable fallback function is defined here.","start":1235}],"severity":"warning","sourceLocation":{"end":6825,"file":"Rubixi.sol","start":386},"type":"Warning"},{"component":"general","errorCode":"5878","formattedMessage":"Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.\n  --> Rubixi.sol:76:26:\n   |\n76 |                          participants[payoutOrder].etherAddress.send(payoutToSend);\n   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Failure condition of 'send' ignored. Consider using 'transfer' instead.","severity":"warning","sourceLocation":{"end":2917,"file":"Rubixi.sol","start":2860},"type":"Warning"},{"component":"general","errorCode":"5878","formattedMessage":"Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.\n  --> Rubixi.sol:87:18:\n   |\n87 |                  creator.send(collectedFees);\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Failure condition of 'send' ignored. Consider using 'transfer' instead.","severity":"warning","sourceLocation":{"end":3262,"file":"Rubixi.sol","start":3235},"type":"Warning"},{"component":"general","errorCode":"5878","formattedMessage":"Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.\n  --> Rubixi.sol:97:18:\n   |\n97 |                  creator.send(_amt);\n   |                  ^^^^^^^^^^^^^^^^^^\n\n","message":"Failure condition of 'send' ignored. Consider using 'transfer' instead.","severity":"warning","sourceLocation":{"end":3572,"file":"Rubixi.sol","start":3554},"type":"Warning"},{"component":"general","errorCode":"5878","formattedMessage":"Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.\n   --> Rubixi.sol:105:18:\n    |\n105 |                  creator.send(feesToCollect);\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Failure condition of 'send' ignored. Consider using 'transfer' instead.","severity":"warning","sourceLocation":{"end":3885,"file":"Rubixi.sol","start":3858},"type":"Warning"}],"sources":{"Rubixi.sol":{"id":0}}}

{"contracts":{"OpenAddressLottery.sol":{"OpenAddressLottery":{"evm":{"deployedBytecode":{"object":"608060405260043610610042575f3560e01c806337354a68146100b657806341c0e1b5146100f257806380ca7aec14610108578063d11711a21461011e57610043565b5b67016345785d8a000034101580156100a657505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b156100b4576100b3610128565b5b005b3480156100c1575f80fd5b506100dc60048036038101906100d79190610544565b6102b1565b6040516100e99190610587565b60405180910390f35b3480156100fd575f80fd5b50610106610322565b005b348015610113575f80fd5b5061011c610391565b005b610126610128565b005b67016345785d8a000034106102af575f151560045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615151461018f575f80fd5b60035461019b336102b1565b0361025757600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505f60073461020391906105cd565b905047811115610211574790505b3373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610254573d5f803e3d5ffd5b50505b6103e860025443610268919061060e565b11156102ae576102ad60405180608001604052804173ffffffffffffffffffffffffffffffffffffffff16815260200144815260200145815260200142815250610474565b5b5b565b5f60088273ffffffffffffffffffffffffffffffffffffffff166001546040516020016102df929190610661565b604051602081830303815290604052805190602001205f602081106103075761030661068c565b5b1a60f81b60f81c60ff1661031b91906106e6565b9050919050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610378575f80fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103e7575f80fd5b6103ef6104c2565b3373ffffffffffffffffffffffffffffffffffffffff16815f01818152505060014361041b919061060e565b405f1c8160200181815250504173ffffffffffffffffffffffffffffffffffffffff164461044991906105cd565b81604001818152505060073a61045f91906105cd565b81606001818152505061047181610474565b50565b805f015181602001518260400151836060015160405160200161049a9493929190610716565b604051602081830303815290604052805190602001205f1c6001819055504360028190555050565b60405180608001604052805f81526020015f81526020015f81526020015f81525090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610513826104ea565b9050919050565b61052381610509565b811461052d575f80fd5b50565b5f8135905061053e8161051a565b92915050565b5f60208284031215610559576105586104e6565b5b5f61056684828501610530565b91505092915050565b5f819050919050565b6105818161056f565b82525050565b5f60208201905061059a5f830184610578565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6105d78261056f565b91506105e28361056f565b92508282026105f08161056f565b91508282048414831517610607576106066105a0565b5b5092915050565b5f6106188261056f565b91506106238361056f565b925082820390508181111561063b5761063a6105a0565b5b92915050565b5f819050919050565b61065b6106568261056f565b610641565b82525050565b5f61066c828561064a565b60208201915061067c828461064a565b6020820191508190509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6106f08261056f565b91506106fb8361056f565b92508261070b5761070a6106b9565b5b828206905092915050565b5f610721828761064a565b602082019150610731828661064a565b602082019150610741828561064a565b602082019150610751828461064a565b6020820191508190509594505050505056fea26469706673582212202d5b3c2edf0575f4af9ebcfe0c6e5a9b75022ca9e5882e8f21b36e50690c7d8264736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x42 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x37354A68 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x80CA7AEC EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0xD11711A2 EQ PUSH2 0x11E JUMPI PUSH2 0x43 JUMP JUMPDEST JUMPDEST PUSH8 0x16345785D8A0000 CALLVALUE LT ISZERO DUP1 ISZERO PUSH2 0xA6 JUMPI POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xB4 JUMPI PUSH2 0xB3 PUSH2 0x128 JUMP JUMPDEST JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD7 SWAP2 SWAP1 PUSH2 0x544 JUMP JUMPDEST PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x587 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x322 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x113 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11C PUSH2 0x391 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x126 PUSH2 0x128 JUMP JUMPDEST STOP JUMPDEST PUSH8 0x16345785D8A0000 CALLVALUE LT PUSH2 0x2AF JUMPI PUSH0 ISZERO ISZERO PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x18F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x19B CALLER PUSH2 0x2B1 JUMP JUMPDEST SUB PUSH2 0x257 JUMPI PUSH1 0x1 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x7 CALLVALUE PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x5CD JUMP JUMPDEST SWAP1 POP SELFBALANCE DUP2 GT ISZERO PUSH2 0x211 JUMPI SELFBALANCE SWAP1 POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x254 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMPDEST PUSH2 0x3E8 PUSH1 0x2 SLOAD NUMBER PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x60E JUMP JUMPDEST GT ISZERO PUSH2 0x2AE JUMPI PUSH2 0x2AD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 COINBASE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PREVRANDAO DUP2 MSTORE PUSH1 0x20 ADD GASLIMIT DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH2 0x474 JUMP JUMPDEST JUMPDEST JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2DF SWAP3 SWAP2 SWAP1 PUSH2 0x661 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 PUSH1 0x20 DUP2 LT PUSH2 0x307 JUMPI PUSH2 0x306 PUSH2 0x68C JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x6E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x378 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3EF PUSH2 0x4C2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 NUMBER PUSH2 0x41B SWAP2 SWAP1 PUSH2 0x60E JUMP JUMPDEST BLOCKHASH PUSH0 SHR DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP COINBASE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PREVRANDAO PUSH2 0x449 SWAP2 SWAP1 PUSH2 0x5CD JUMP JUMPDEST DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x7 GASPRICE PUSH2 0x45F SWAP2 SWAP1 PUSH2 0x5CD JUMP JUMPDEST DUP2 PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x471 DUP2 PUSH2 0x474 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x49A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 SHR PUSH1 0x1 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x513 DUP3 PUSH2 0x4EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x523 DUP2 PUSH2 0x509 JUMP JUMPDEST DUP2 EQ PUSH2 0x52D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x53E DUP2 PUSH2 0x51A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x559 JUMPI PUSH2 0x558 PUSH2 0x4E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x566 DUP5 DUP3 DUP6 ADD PUSH2 0x530 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x581 DUP2 PUSH2 0x56F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x59A PUSH0 DUP4 ADD DUP5 PUSH2 0x578 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x5D7 DUP3 PUSH2 0x56F JUMP JUMPDEST SWAP2 POP PUSH2 0x5E2 DUP4 PUSH2 0x56F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x5F0 DUP2 PUSH2 0x56F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x607 JUMPI PUSH2 0x606 PUSH2 0x5A0 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x618 DUP3 PUSH2 0x56F JUMP JUMPDEST SWAP2 POP PUSH2 0x623 DUP4 PUSH2 0x56F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x63B JUMPI PUSH2 0x63A PUSH2 0x5A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65B PUSH2 0x656 DUP3 PUSH2 0x56F JUMP JUMPDEST PUSH2 0x641 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x66C DUP3 DUP6 PUSH2 0x64A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x67C DUP3 DUP5 PUSH2 0x64A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x6F0 DUP3 PUSH2 0x56F JUMP JUMPDEST SWAP2 POP PUSH2 0x6FB DUP4 PUSH2 0x56F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x70B JUMPI PUSH2 0x70A PUSH2 0x6B9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x721 DUP3 DUP8 PUSH2 0x64A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x731 DUP3 DUP7 PUSH2 0x64A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x741 DUP3 DUP6 PUSH2 0x64A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x751 DUP3 DUP5 PUSH2 0x64A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D JUMPDEST EXTCODECOPY 0x2E 0xDF SDIV PUSH22 0xF4AF9EBCFE0C6E5A9B75022CA9E5882E8F21B36E5069 0xC PUSH30 0x8264736F6C63430008180033000000000000000000000000000000000000 ","sourceMap":"1158:3320:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4351:9;4340;:20;;:41;;;;;4376:5;;;;;;;;;;4364:17;;:10;:17;;;;4340:41;4337:128;;;4452:13;:11;:13::i;:::-;4337:128;1158:3320;2909:242;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3568:122;;;;;;;;;;;;;:::i;:::-;;3702:495;;;;;;;;;;;;;:::i;:::-;;1963:934;;;:::i;:::-;;;2025:9;2015;:19;2049:7;2012:44;2172:5;2150:27;;:6;:18;2157:10;2150:18;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;2142:36;;;;;;2238:11;;2202:32;2223:10;2202:20;:32::i;:::-;:47;2199:459;;2309:4;2288:6;:18;2295:10;2288:18;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;2377:8;2396:1;2386:9;:11;;;;:::i;:::-;2377:20;;2466:21;2462:3;:25;2459:108;;;2546:21;2542:25;;2459:108;2621:10;2613:28;;:33;2642:3;2613:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2250:408;2199:459;2705:4;2694:10;;2681:12;:23;;;;:::i;:::-;:28;2678:178;;;2743:113;2750:105;;;;;;;;2786:14;2765:38;;2750:105;;;;2805:16;2750:105;;;;2823:14;2750:105;;;;2839:15;2750:105;;;2743:6;:113::i;:::-;2678:178;1963:934;:::o;2909:242::-;2973:6;3142:1;3114:4;3101:19;;3122:10;;3084:49;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3074:60;;;;;;3135:1;3074:63;;;;;;;:::i;:::-;;;;;3068:70;;3063:76;;:80;;;;:::i;:::-;3059:84;;2909:242;;;:::o;3568:122::-;3622:5;;;;;;;;;;3610:17;;:10;:17;;;3602:26;;;;;;3670:10;3649:33;;;3702:495;3818:5;;;;;;;;;;3806:17;;:10;:17;;;3798:26;;;;;;3892:23;;:::i;:::-;3954:10;3941:25;;3926:1;:12;;:40;;;;;4025:1;4010:12;:16;;;;:::i;:::-;4000:27;3992:36;;3977:1;:12;;:51;;;;;4092:14;4071:38;;4054:16;:55;;;;:::i;:::-;4039:1;:12;;:70;;;;;4149:1;4135:11;:15;;;;:::i;:::-;4120:1;:12;;:30;;;;;4171:9;4178:1;4171:6;:9::i;:::-;3732:465;3702:495::o;3163:393::-;3295:10;:21;;;3331:10;:21;;;3367:10;:21;;;3403:10;:21;;;3264:171;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3254:182;;;;;;3246:191;;3233:10;:204;;;;3536:12;3523:10;:25;;;;3163:393;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:180::-;1659:77;1656:1;1649:88;1756:4;1753:1;1746:15;1780:4;1777:1;1770:15;1797:410;1837:7;1860:20;1878:1;1860:20;:::i;:::-;1855:25;;1894:20;1912:1;1894:20;:::i;:::-;1889:25;;1949:1;1946;1942:9;1971:30;1989:11;1971:30;:::i;:::-;1960:41;;2150:1;2141:7;2137:15;2134:1;2131:22;2111:1;2104:9;2084:83;2061:139;;2180:18;;:::i;:::-;2061:139;1845:362;1797:410;;;;:::o;2213:194::-;2253:4;2273:20;2291:1;2273:20;:::i;:::-;2268:25;;2307:20;2325:1;2307:20;:::i;:::-;2302:25;;2351:1;2348;2344:9;2336:17;;2375:1;2369:4;2366:11;2363:37;;;2380:18;;:::i;:::-;2363:37;2213:194;;;;:::o;2413:79::-;2452:7;2481:5;2470:16;;2413:79;;;:::o;2498:157::-;2603:45;2623:24;2641:5;2623:24;:::i;:::-;2603:45;:::i;:::-;2598:3;2591:58;2498:157;;:::o;2661:397::-;2801:3;2816:75;2887:3;2878:6;2816:75;:::i;:::-;2916:2;2911:3;2907:12;2900:19;;2929:75;3000:3;2991:6;2929:75;:::i;:::-;3029:2;3024:3;3020:12;3013:19;;3049:3;3042:10;;2661:397;;;;;:::o;3064:180::-;3112:77;3109:1;3102:88;3209:4;3206:1;3199:15;3233:4;3230:1;3223:15;3250:180;3298:77;3295:1;3288:88;3395:4;3392:1;3385:15;3419:4;3416:1;3409:15;3436:176;3468:1;3485:20;3503:1;3485:20;:::i;:::-;3480:25;;3519:20;3537:1;3519:20;:::i;:::-;3514:25;;3558:1;3548:35;;3563:18;;:::i;:::-;3548:35;3604:1;3601;3597:9;3592:14;;3436:176;;;;:::o;3618:679::-;3814:3;3829:75;3900:3;3891:6;3829:75;:::i;:::-;3929:2;3924:3;3920:12;3913:19;;3942:75;4013:3;4004:6;3942:75;:::i;:::-;4042:2;4037:3;4033:12;4026:19;;4055:75;4126:3;4117:6;4055:75;:::i;:::-;4155:2;4150:3;4146:12;4139:19;;4168:75;4239:3;4230:6;4168:75;:::i;:::-;4268:2;4263:3;4259:12;4252:19;;4288:3;4281:10;;3618:679;;;;;;;:::o"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"forceReseed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"luckyNumberOfAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"participate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"OpenAddressLottery.sol\":\"OpenAddressLottery\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"OpenAddressLottery.sol\":{\"content\":\"/*\\r\\n * @source: https://etherscan.io/address/0x741f1923974464efd0aa70e77800ba5d9ed18902#code\\r\\n * Upgraded from Solidity 0.4 to 0.8, vulnerability may no longer exist\\r\\n * @vulnerable_at_lines: 93\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n/*\\r\\n * This is a distributed lottery that chooses random addresses as lucky addresses. If these\\r\\n * participate, they get the jackpot: 7 times the price of their bet.\\r\\n * Of course one address can only win once. The owner regularly reseeds the secret\\r\\n * seed of the contract (based on which the lucky addresses are chosen), so if you did not win,\\r\\n * just wait for a reseed and try again!\\r\\n *\\r\\n * Jackpot chance:   1 in 8\\r\\n * Ticket price: Anything larger than (or equal to) 0.1 ETH\\r\\n * Jackpot size: 7 times the ticket price\\r\\n *\\r\\n * HOW TO PARTICIPATE: Just send any amount greater than (or equal to) 0.1 ETH to the contract's address\\r\\n * Keep in mind that your address can only win once\\r\\n *\\r\\n * If the contract doesn't have enough ETH to pay the jackpot, it sends the whole balance.\\r\\n\\r\\n https://www.reddit.com/r/ethdev/comments/7wp363/how_does_this_honeypot_work_it_seems_like_a/\\r\\n*/\\r\\n\\r\\ncontract OpenAddressLottery{\\r\\n    struct SeedComponents{\\r\\n        uint component1;\\r\\n        uint component2;\\r\\n        uint component3;\\r\\n        uint component4;\\r\\n    }\\r\\n    \\r\\n    address owner; //address of the owner\\r\\n    uint private secretSeed; //seed used to calculate number of an address\\r\\n    uint private lastReseed; //last reseed - used to automatically reseed the contract every 1000 blocks\\r\\n    uint LuckyNumber = 7; //if the number of an address equals 7, it wins\\r\\n        \\r\\n    mapping (address => bool) winner; //keeping track of addresses that have already won\\r\\n    \\r\\n    constructor() {\\r\\n        owner = msg.sender;\\r\\n        reseed(SeedComponents(uint(uint160(address(block.coinbase))), block.prevrandao, block.gaslimit, block.timestamp)); //generate a quality random seed\\r\\n    }\\r\\n    \\r\\n    function participate() public payable {\\r\\n        if(msg.value<0.1 ether)\\r\\n            return; //verify ticket price\\r\\n        \\r\\n        // make sure he hasn't won already\\r\\n        require(winner[msg.sender] == false);\\r\\n        \\r\\n        if(luckyNumberOfAddress(msg.sender) == LuckyNumber){ //check if it equals 7\\r\\n            winner[msg.sender] = true; // every address can only win once\\r\\n            \\r\\n            uint win=msg.value*7; //win = 7 times the ticket price\\r\\n            \\r\\n            if(win>address(this).balance) //if the balance isnt sufficient...\\r\\n                win=address(this).balance; //...send everything we've got\\r\\n            payable(msg.sender).transfer(win);\\r\\n        }\\r\\n        \\r\\n        if(block.number-lastReseed>1000) //reseed if needed\\r\\n            reseed(SeedComponents(uint(uint160(address(block.coinbase))), block.prevrandao, block.gaslimit, block.timestamp)); //generate a quality random seed\\r\\n    }\\r\\n    \\r\\n    function luckyNumberOfAddress(address addr) public view returns(uint n){\\r\\n        // calculate the number of current address - 1 in 8 chance\\r\\n        n = uint(uint8(keccak256(abi.encodePacked(uint(uint160(addr)), secretSeed))[0])) % 8;\\r\\n    }\\r\\n    \\r\\n    function reseed(SeedComponents memory components) internal {\\r\\n        secretSeed = uint256(keccak256(abi.encodePacked(\\r\\n            components.component1,\\r\\n            components.component2,\\r\\n            components.component3,\\r\\n            components.component4\\r\\n        ))); //hash the incoming parameters and use the hash to (re)initialize the seed\\r\\n        lastReseed = block.number;\\r\\n    }\\r\\n    \\r\\n    function kill() public {\\r\\n        require(msg.sender==owner);\\r\\n        \\r\\n        selfdestruct(payable(msg.sender));\\r\\n    }\\r\\n    \\r\\n    function forceReseed() public { //reseed initiated by the owner - for testing purposes\\r\\n        require(msg.sender==owner);\\r\\n        // <yes> <report> OTHER - uninitialized storage\\r\\n        SeedComponents memory s;\\r\\n        s.component1 = uint(uint160(msg.sender));\\r\\n        s.component2 = uint256(blockhash(block.number - 1));\\r\\n        s.component3 = block.prevrandao*uint(uint160(address(block.coinbase)));\\r\\n        s.component4 = tx.gasprice * 7;\\r\\n        \\r\\n        reseed(s); //reseed\\r\\n    }\\r\\n    \\r\\n    fallback() external payable { //if someone sends money without any function call, just assume he wanted to participate\\r\\n        if(msg.value>=0.1 ether && msg.sender!=owner) //owner can't participate, he can only fund the jackpot\\r\\n            participate();\\r\\n    }\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0x8544f035f782bc388fa8f6ce9e53ab7878a87b626acff09d57b3cd0c44353fcd\",\"license\":\"UNLICENSED\"}},\"version\":1}"}}},"errors":[{"component":"general","errorCode":"3628","formattedMessage":"Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n  --> OpenAddressLottery.sol:28:1:\n   |\n28 | contract OpenAddressLottery{\n   | ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n   --> OpenAddressLottery.sol:102:5:\n    |\n102 |     fallback() external payable { //if someone sends money without any function call, just assume he wanted to participate\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.","secondarySourceLocations":[{"end":4473,"file":"OpenAddressLottery.sol","message":"The payable fallback function is defined here.","start":4209}],"severity":"warning","sourceLocation":{"end":4478,"file":"OpenAddressLottery.sol","start":1158},"type":"Warning"},{"component":"general","errorCode":"5159","formattedMessage":"Warning: \"selfdestruct\" has been deprecated. Note that, starting from the Cancun hard fork, the underlying opcode no longer deletes the code and data associated with an account and only transfers its Ether to the beneficiary, unless executed in the same transaction in which the contract was created (see EIP-6780). Any use in newly deployed contracts is strongly discouraged even if the new behavior is taken into account. Future changes to the EVM might further reduce the functionality of the opcode.\n  --> OpenAddressLottery.sol:87:9:\n   |\n87 |         selfdestruct(payable(msg.sender));\n   |         ^^^^^^^^^^^^\n\n","message":"\"selfdestruct\" has been deprecated. Note that, starting from the Cancun hard fork, the underlying opcode no longer deletes the code and data associated with an account and only transfers its Ether to the beneficiary, unless executed in the same transaction in which the contract was created (see EIP-6780). Any use in newly deployed contracts is strongly discouraged even if the new behavior is taken into account. Future changes to the EVM might further reduce the functionality of the opcode.","severity":"warning","sourceLocation":{"end":3661,"file":"OpenAddressLottery.sol","start":3649},"type":"Warning"}],"sources":{"OpenAddressLottery.sol":{"id":0}}}

{"contracts":{"Government.sol":{"Government":{"evm":{"deployedBytecode":{"object":"6080604052600436106100e15760003560e01c8063719874da1161007f578063d3edcb5b11610059578063d3edcb5b1461028b578063d95a2d42146102b6578063f42d1d30146102e6578063fc7b9c1814610323576100e2565b8063719874da146101f857806381064e2d14610223578063ce43b0c01461024e576100e2565b806345941a38116100bb57806345941a381461016f5780634a1f0bf61461019a5780634f013184146101c35780636831c169146101cd576100e2565b806309f32957146100ee578063146ca531146101195780633beea69514610144576100e2565b5b6100ec600061034e565b005b3480156100fa57600080fd5b50610103610a93565b6040516101109190610ec7565b60405180910390f35b34801561012557600080fd5b5061012e610aa7565b60405161013b9190610efe565b60405180910390f35b34801561015057600080fd5b50610159610aba565b6040516101669190610f5a565b60405180910390f35b34801561017b57600080fd5b50610184610ae0565b6040516101919190610f8e565b60405180910390f35b3480156101a657600080fd5b506101c160048036038101906101bc9190610fda565b610ae6565b005b6101cb610b80565b005b3480156101d957600080fd5b506101e2610b9b565b6040516101ef9190610f8e565b60405180910390f35b34801561020457600080fd5b5061020d610bfe565b60405161021a9190610f8e565b60405180910390f35b34801561022f57600080fd5b50610238610c04565b60405161024591906110c5565b60405180910390f35b34801561025a57600080fd5b5061027560048036038101906102709190611113565b610c5c565b6040516102829190610f5a565b60405180910390f35b34801561029757600080fd5b506102a0610c9b565b6040516102ad91906111fe565b60405180910390f35b6102d060048036038101906102cb9190610fda565b61034e565b6040516102dd919061123b565b60405180910390f35b3480156102f257600080fd5b5061030d60048036038101906103089190611113565b610d29565b60405161031a9190610f8e565b60405180910390f35b34801561032f57600080fd5b50610338610d4d565b6040516103459190610f8e565b60405180910390f35b6000803490504261a8c06001546103659190611285565b10156105b1573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505050600360016003805490506103b591906112b9565b815481106103c6576103c56112ed565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f1935050505050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050505060008060006101000a81548163ffffffff021916908363ffffffff160217905550426001819055506000600281905550600067ffffffffffffffff8111156104cb576104ca61131c565b5b6040519080825280602002602001820160405280156104f95781602001602082028036833780820191505090505b506003908051906020019061050f929190610db4565b50600067ffffffffffffffff81111561052b5761052a61131c565b5b6040519080825280602002602001820160405280156105595781602001602082028036833780820191505090505b506004908051906020019061056f929190610e3e565b506001600760008282829054906101000a900460ff1661058f919061134b565b92506101000a81548160ff021916908360ff1602179055506000915050610a8e565b670de0b6b3a76400008110610a5257426001819055506003339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060046064606e8361063b9190611380565b61064591906113f1565b9080600181540180825580915050600190039060005260206000200160009091909190915055600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60646005846106b69190611380565b6106c091906113f1565b9081150290604051600060405180830381858888f193505050505069021e19e0c9bab240000060025410156107215760646005826106fe9190611380565b61070891906113f1565b600260008282546107199190611285565b925050819055505b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054106107b6578273ffffffffffffffffffffffffffffffffffffffff166108fc60646005846107909190611380565b61079a91906113f1565b9081150290604051600060405180830381858888f19350505050505b6064606e826107c59190611380565b6107cf91906113f1565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461081d9190611285565b925050819055506002544761083291906112b9565b600460008054906101000a900463ffffffff1663ffffffff168154811061085c5761085b6112ed565b5b906000526020600020015411610a4857600360008054906101000a900463ffffffff1663ffffffff1681548110610896576108956112ed565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600460008054906101000a900463ffffffff1663ffffffff1681548110610904576109036112ed565b5b90600052602060002001549081150290604051600060405180830381858888f1935050505050600460008054906101000a900463ffffffff1663ffffffff1681548110610954576109536112ed565b5b906000526020600020015460066000600360008054906101000a900463ffffffff1663ffffffff168154811061098d5761098c6112ed565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a0191906112b9565b9250508190555060016000808282829054906101000a900463ffffffff16610a299190611422565b92506101000a81548163ffffffff021916908363ffffffff1602179055505b6001915050610a8e565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050505060009150505b919050565b60008054906101000a900463ffffffff1681565b600760009054906101000a900460ff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610b7d5780600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b3460026000828254610b929190611285565b92505081905550565b600080600090505b60008054906101000a900463ffffffff1663ffffffff16811015610bfa5760048181548110610bd557610bd46112ed565b5b906000526020600020015482610beb9190611285565b91508080600101915050610ba3565b5090565b60025481565b60606004805480602002602001604051908101604052809291908181526020018280548015610c5257602002820191906000526020600020905b815481526020019060010190808311610c3e575b5050505050905090565b60038181548110610c6c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606003805480602002602001604051908101604052809291908181526020018280548015610d1f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610cd5575b5050505050905090565b60048181548110610d3957600080fd5b906000526020600020016000915090505481565b60008060008054906101000a900463ffffffff1663ffffffff1690505b600480549050811015610db05760048181548110610d8b57610d8a6112ed565b5b906000526020600020015482610da19190611285565b91508080600101915050610d6a565b5090565b828054828255906000526020600020908101928215610e2d579160200282015b82811115610e2c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610dd4565b5b509050610e3a9190610e8b565b5090565b828054828255906000526020600020908101928215610e7a579160200282015b82811115610e79578251825591602001919060010190610e5e565b5b509050610e879190610e8b565b5090565b5b80821115610ea4576000816000905550600101610e8c565b5090565b600063ffffffff82169050919050565b610ec181610ea8565b82525050565b6000602082019050610edc6000830184610eb8565b92915050565b600060ff82169050919050565b610ef881610ee2565b82525050565b6000602082019050610f136000830184610eef565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f4482610f19565b9050919050565b610f5481610f39565b82525050565b6000602082019050610f6f6000830184610f4b565b92915050565b6000819050919050565b610f8881610f75565b82525050565b6000602082019050610fa36000830184610f7f565b92915050565b600080fd5b610fb781610f39565b8114610fc257600080fd5b50565b600081359050610fd481610fae565b92915050565b600060208284031215610ff057610fef610fa9565b5b6000610ffe84828501610fc5565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61103c81610f75565b82525050565b600061104e8383611033565b60208301905092915050565b6000602082019050919050565b600061107282611007565b61107c8185611012565b935061108783611023565b8060005b838110156110b857815161109f8882611042565b97506110aa8361105a565b92505060018101905061108b565b5085935050505092915050565b600060208201905081810360008301526110df8184611067565b905092915050565b6110f081610f75565b81146110fb57600080fd5b50565b60008135905061110d816110e7565b92915050565b60006020828403121561112957611128610fa9565b5b6000611137848285016110fe565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61117581610f39565b82525050565b6000611187838361116c565b60208301905092915050565b6000602082019050919050565b60006111ab82611140565b6111b5818561114b565b93506111c08361115c565b8060005b838110156111f15781516111d8888261117b565b97506111e383611193565b9250506001810190506111c4565b5085935050505092915050565b6000602082019050818103600083015261121881846111a0565b905092915050565b60008115159050919050565b61123581611220565b82525050565b6000602082019050611250600083018461122c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061129082610f75565b915061129b83610f75565b92508282019050808211156112b3576112b2611256565b5b92915050565b60006112c482610f75565b91506112cf83610f75565b92508282039050818111156112e7576112e6611256565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600061135682610ee2565b915061136183610ee2565b9250828201905060ff81111561137a57611379611256565b5b92915050565b600061138b82610f75565b915061139683610f75565b92508282026113a481610f75565b915082820484148315176113bb576113ba611256565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006113fc82610f75565b915061140783610f75565b925082611417576114166113c2565b5b828204905092915050565b600061142d82610ea8565b915061143883610ea8565b9250828201905063ffffffff81111561145457611453611256565b5b9291505056fea2646970667358221220327639acc304bc58c54ab1c93a1d27c581bc99f7c3c9b54ebf54dfafecd8582164736f6c63430008180033","sourceMap":"277:4941:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4069:42;4105:3;4069:19;:42::i;:::-;;330:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;651:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;528:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;371:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4794:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4609:91;;;:::i;:::-;;4320:174;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;409:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5108:107;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;443:42;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4979:122;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1008:2989;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;492:29;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4126:187;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1008:2989;1084:4;1101:11;1115:9;1101:23;;1360:15;639:5;1323:19;;:34;;;;:::i;:::-;:52;1319:2671;;;1439:10;1431:24;;:32;1456:6;1431:32;;;;;;;;;;;;;;;;;;;;;;;;1540:17;1585:1;1558:17;:24;;;;:28;;;;:::i;:::-;1540:47;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:52;;:69;1593:15;;1540:69;;;;;;;;;;;;;;;;;;;;;;;;1624:12;;;;;;;;;;;:17;;:40;1642:21;1624:40;;;;;;;;;;;;;;;;;;;;;;;;1739:1;1716:20;;:24;;;;;;;;;;;;;;;;;;1777:15;1755:19;:37;;;;1825:1;1807:15;:19;;;;1931:1;1909:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1889:17;:44;;;;;;;;;;;;:::i;:::-;;2025:1;2014:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1996:15;:31;;;;;;;;;;;;:::i;:::-;;2051:1;2042:5;;:10;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2074:5;2067:12;;;;;1319:2671;2232:8;2222:6;:18;2218:1761;;2373:15;2351:19;:37;;;;2491:17;2522:10;2491:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2553:15;2589:3;2583;2574:6;:12;;;;:::i;:::-;:18;;;;:::i;:::-;2553:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2725:12;;;;;;;;;;;:17;;:33;2754:3;2752:1;2743:6;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2725:33;;;;;;;;;;;;;;;;;;;;;;;;2920:14;2902:15;;:32;2898:114;;;2989:3;2987:1;2978:6;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2959:15;;:33;;;;;;;:::i;:::-;;;;;;;;2898:114;3215:6;3197:7;:14;3205:5;3197:14;;;;;;;;;;;;;;;;:24;3194:98;;3246:5;:10;;:26;3268:3;3266:1;3257:6;:10;;;;:::i;:::-;:14;;;;:::i;:::-;3246:26;;;;;;;;;;;;;;;;;;;;;;;;3194:98;3348:3;3342;3333:6;:12;;;;:::i;:::-;:18;;;;:::i;:::-;3310:7;:19;3318:10;3310:19;;;;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;;;;;;;;3514:15;;3490:21;:39;;;;:::i;:::-;3449:15;3465:20;;;;;;;;;;3449:37;;;;;;;;;;:::i;:::-;;;;;;;;;;:80;3445:372;;3554:17;3572:20;;;;;;;;;;3554:39;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:44;;:83;3599:15;3615:20;;;;;;;;;;3599:37;;;;;;;;;;:::i;:::-;;;;;;;;;;3554:83;;;;;;;;;;;;;;;;;;;;;;;;3712:15;3728:20;;;;;;;;;;3712:37;;;;;;;;;;:::i;:::-;;;;;;;;;;3660:7;:48;3668:17;3686:20;;;;;;;;;;3668:39;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3660:48;;;;;;;;;;;;;;;;:89;;;;;;;:::i;:::-;;;;;;;;3796:1;3772:20;;:25;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3445:372;3842:4;3835:11;;;;;2218:1761;3908:10;3900:24;;:32;3925:6;3900:32;;;;;;;;;;;;;;;;;;;;;;;;3958:5;3951:12;;;1008:2989;;;;:::o;330:34::-;;;;;;;;;;;;:::o;651:18::-;;;;;;;;;;;;;:::o;528:35::-;;;;;;;;;;;;;:::o;371:31::-;;;;:::o;4794:178::-;4895:12;;;;;;;;;;;4881:26;;:10;:26;;;4877:88;;4939:14;4924:12;;:29;;;;;;;;;;;;;;;;;;4877:88;4794:178;:::o;4609:91::-;4683:9;4664:15;;:28;;;;;;;:::i;:::-;;;;;;;;4609:91::o;4320:174::-;4366:11;4394:6;4401:1;4394:8;;4390:97;4406:20;;;;;;;;;;4404:22;;:1;:22;4390:97;;;4457:15;4473:1;4457:18;;;;;;;;:::i;:::-;;;;;;;;;;4447:28;;;;;:::i;:::-;;;4428:3;;;;;;;4390:97;;;;4320:174;:::o;409:27::-;;;;:::o;5108:107::-;5159:13;5192:15;5185:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5108:107;:::o;443:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4979:122::-;5032:24;5076:17;5069:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4979:122;:::o;492:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4126:187::-;4168:9;4194:6;4201:20;;;;;;;;;;4194:27;;;;4190:116;4225:15;:22;;;;4223:1;:24;4190:116;;;4276:15;4292:1;4276:18;;;;;;;;:::i;:::-;;;;;;;;;;4268:26;;;;;:::i;:::-;;;4249:3;;;;;;;4190:116;;;;4126:187;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:93:1:-;43:7;83:10;76:5;72:22;61:33;;7:93;;;:::o;106:115::-;191:23;208:5;191:23;:::i;:::-;186:3;179:36;106:115;;:::o;227:218::-;318:4;356:2;345:9;341:18;333:26;;369:69;435:1;424:9;420:17;411:6;369:69;:::i;:::-;227:218;;;;:::o;451:86::-;486:7;526:4;519:5;515:16;504:27;;451:86;;;:::o;543:112::-;626:22;642:5;626:22;:::i;:::-;621:3;614:35;543:112;;:::o;661:214::-;750:4;788:2;777:9;773:18;765:26;;801:67;865:1;854:9;850:17;841:6;801:67;:::i;:::-;661:214;;;;:::o;881:126::-;918:7;958:42;951:5;947:54;936:65;;881:126;;;:::o;1013:104::-;1058:7;1087:24;1105:5;1087:24;:::i;:::-;1076:35;;1013:104;;;:::o;1123:142::-;1226:32;1252:5;1226:32;:::i;:::-;1221:3;1214:45;1123:142;;:::o;1271:254::-;1380:4;1418:2;1407:9;1403:18;1395:26;;1431:87;1515:1;1504:9;1500:17;1491:6;1431:87;:::i;:::-;1271:254;;;;:::o;1531:77::-;1568:7;1597:5;1586:16;;1531:77;;;:::o;1614:118::-;1701:24;1719:5;1701:24;:::i;:::-;1696:3;1689:37;1614:118;;:::o;1738:222::-;1831:4;1869:2;1858:9;1854:18;1846:26;;1882:71;1950:1;1939:9;1935:17;1926:6;1882:71;:::i;:::-;1738:222;;;;:::o;2047:117::-;2156:1;2153;2146:12;2293:138;2374:32;2400:5;2374:32;:::i;:::-;2367:5;2364:43;2354:71;;2421:1;2418;2411:12;2354:71;2293:138;:::o;2437:155::-;2491:5;2529:6;2516:20;2507:29;;2545:41;2580:5;2545:41;:::i;:::-;2437:155;;;;:::o;2598:345::-;2665:6;2714:2;2702:9;2693:7;2689:23;2685:32;2682:119;;;2720:79;;:::i;:::-;2682:119;2840:1;2865:61;2918:7;2909:6;2898:9;2894:22;2865:61;:::i;:::-;2855:71;;2811:125;2598:345;;;;:::o;2949:114::-;3016:6;3050:5;3044:12;3034:22;;2949:114;;;:::o;3069:184::-;3168:11;3202:6;3197:3;3190:19;3242:4;3237:3;3233:14;3218:29;;3069:184;;;;:::o;3259:132::-;3326:4;3349:3;3341:11;;3379:4;3374:3;3370:14;3362:22;;3259:132;;;:::o;3397:108::-;3474:24;3492:5;3474:24;:::i;:::-;3469:3;3462:37;3397:108;;:::o;3511:179::-;3580:10;3601:46;3643:3;3635:6;3601:46;:::i;:::-;3679:4;3674:3;3670:14;3656:28;;3511:179;;;;:::o;3696:113::-;3766:4;3798;3793:3;3789:14;3781:22;;3696:113;;;:::o;3845:732::-;3964:3;3993:54;4041:5;3993:54;:::i;:::-;4063:86;4142:6;4137:3;4063:86;:::i;:::-;4056:93;;4173:56;4223:5;4173:56;:::i;:::-;4252:7;4283:1;4268:284;4293:6;4290:1;4287:13;4268:284;;;4369:6;4363:13;4396:63;4455:3;4440:13;4396:63;:::i;:::-;4389:70;;4482:60;4535:6;4482:60;:::i;:::-;4472:70;;4328:224;4315:1;4312;4308:9;4303:14;;4268:284;;;4272:14;4568:3;4561:10;;3969:608;;;3845:732;;;;:::o;4583:373::-;4726:4;4764:2;4753:9;4749:18;4741:26;;4813:9;4807:4;4803:20;4799:1;4788:9;4784:17;4777:47;4841:108;4944:4;4935:6;4841:108;:::i;:::-;4833:116;;4583:373;;;;:::o;4962:122::-;5035:24;5053:5;5035:24;:::i;:::-;5028:5;5025:35;5015:63;;5074:1;5071;5064:12;5015:63;4962:122;:::o;5090:139::-;5136:5;5174:6;5161:20;5152:29;;5190:33;5217:5;5190:33;:::i;:::-;5090:139;;;;:::o;5235:329::-;5294:6;5343:2;5331:9;5322:7;5318:23;5314:32;5311:119;;;5349:79;;:::i;:::-;5311:119;5469:1;5494:53;5539:7;5530:6;5519:9;5515:22;5494:53;:::i;:::-;5484:63;;5440:117;5235:329;;;;:::o;5570:122::-;5645:6;5679:5;5673:12;5663:22;;5570:122;;;:::o;5698:192::-;5805:11;5839:6;5834:3;5827:19;5879:4;5874:3;5870:14;5855:29;;5698:192;;;;:::o;5896:140::-;5971:4;5994:3;5986:11;;6024:4;6019:3;6015:14;6007:22;;5896:140;;;:::o;6042:132::-;6135:32;6161:5;6135:32;:::i;:::-;6130:3;6123:45;6042:132;;:::o;6180:211::-;6265:10;6286:62;6344:3;6336:6;6286:62;:::i;:::-;6380:4;6375:3;6371:14;6357:28;;6180:211;;;;:::o;6397:121::-;6475:4;6507;6502:3;6498:14;6490:22;;6397:121;;;:::o;6570:796::-;6705:3;6734:62;6790:5;6734:62;:::i;:::-;6812:94;6899:6;6894:3;6812:94;:::i;:::-;6805:101;;6930:64;6988:5;6930:64;:::i;:::-;7017:7;7048:1;7033:308;7058:6;7055:1;7052:13;7033:308;;;7134:6;7128:13;7161:79;7236:3;7221:13;7161:79;:::i;:::-;7154:86;;7263:68;7324:6;7263:68;:::i;:::-;7253:78;;7093:248;7080:1;7077;7073:9;7068:14;;7033:308;;;7037:14;7357:3;7350:10;;6710:656;;;6570:796;;;;:::o;7372:405::-;7531:4;7569:2;7558:9;7554:18;7546:26;;7618:9;7612:4;7608:20;7604:1;7593:9;7589:17;7582:47;7646:124;7765:4;7756:6;7646:124;:::i;:::-;7638:132;;7372:405;;;;:::o;7783:90::-;7817:7;7860:5;7853:13;7846:21;7835:32;;7783:90;;;:::o;7879:109::-;7960:21;7975:5;7960:21;:::i;:::-;7955:3;7948:34;7879:109;;:::o;7994:210::-;8081:4;8119:2;8108:9;8104:18;8096:26;;8132:65;8194:1;8183:9;8179:17;8170:6;8132:65;:::i;:::-;7994:210;;;;:::o;8210:180::-;8258:77;8255:1;8248:88;8355:4;8352:1;8345:15;8379:4;8376:1;8369:15;8396:191;8436:3;8455:20;8473:1;8455:20;:::i;:::-;8450:25;;8489:20;8507:1;8489:20;:::i;:::-;8484:25;;8532:1;8529;8525:9;8518:16;;8553:3;8550:1;8547:10;8544:36;;;8560:18;;:::i;:::-;8544:36;8396:191;;;;:::o;8593:194::-;8633:4;8653:20;8671:1;8653:20;:::i;:::-;8648:25;;8687:20;8705:1;8687:20;:::i;:::-;8682:25;;8731:1;8728;8724:9;8716:17;;8755:1;8749:4;8746:11;8743:37;;;8760:18;;:::i;:::-;8743:37;8593:194;;;;:::o;8793:180::-;8841:77;8838:1;8831:88;8938:4;8935:1;8928:15;8962:4;8959:1;8952:15;8979:180;9027:77;9024:1;9017:88;9124:4;9121:1;9114:15;9148:4;9145:1;9138:15;9165:188;9203:3;9222:18;9238:1;9222:18;:::i;:::-;9217:23;;9254:18;9270:1;9254:18;:::i;:::-;9249:23;;9295:1;9292;9288:9;9281:16;;9318:4;9313:3;9310:13;9307:39;;;9326:18;;:::i;:::-;9307:39;9165:188;;;;:::o;9359:410::-;9399:7;9422:20;9440:1;9422:20;:::i;:::-;9417:25;;9456:20;9474:1;9456:20;:::i;:::-;9451:25;;9511:1;9508;9504:9;9533:30;9551:11;9533:30;:::i;:::-;9522:41;;9712:1;9703:7;9699:15;9696:1;9693:22;9673:1;9666:9;9646:83;9623:139;;9742:18;;:::i;:::-;9623:139;9407:362;9359:410;;;;:::o;9775:180::-;9823:77;9820:1;9813:88;9920:4;9917:1;9910:15;9944:4;9941:1;9934:15;9961:185;10001:1;10018:20;10036:1;10018:20;:::i;:::-;10013:25;;10052:20;10070:1;10052:20;:::i;:::-;10047:25;;10091:1;10081:35;;10096:18;;:::i;:::-;10081:35;10138:1;10135;10131:9;10126:14;;9961:185;;;;:::o;10152:197::-;10191:3;10210:19;10227:1;10210:19;:::i;:::-;10205:24;;10243:19;10260:1;10243:19;:::i;:::-;10238:24;;10285:1;10282;10278:9;10271:16;;10308:10;10303:3;10300:19;10297:45;;;10322:18;;:::i;:::-;10297:45;10152:197;;;;:::o"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"corruptElite\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"creditorAddresses\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"creditorAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCreditorAddresses\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCreditorAmounts\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"nextGeneration\",\"type\":\"address\"}],\"name\":\"inheritToNextGeneration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investInTheSystem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCreditorPayedOut\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeOfNewCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"buddy\",\"type\":\"address\"}],\"name\":\"lendGovernmentMoney\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"profitFromCrash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"round\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"debt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPayedOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Government.sol\":\"Government\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Government.sol\":{\"content\":\"/*\\n * @source: https://etherscan.io/address/0xf45717552f12ef7cb65e95476f217ea008167ae3#code\\n * Upgraded from Solidity 0.4 to 0.8, vulnerability may no longer exist\\n * @author: -\\n * @vulnerable_at_lines: 47,49\\n */\\n\\n//SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\ncontract Government {\\n\\n     // Global Variables\\n     uint32 public lastCreditorPayedOut;\\n     uint public lastTimeOfNewCredit;\\n     uint public profitFromCrash;\\n     address payable[] public creditorAddresses;\\n     uint[] public creditorAmounts;\\n     address payable public corruptElite;\\n     mapping (address => uint) buddies;\\n     uint constant TWELVE_HOURS = 43200;\\n     uint8 public round;\\n\\n     constructor() payable {\\n         // The corrupt elite establishes a new government\\n         // this is the commitment of the corrupt Elite - everything that can not be saved from a crash\\n         profitFromCrash = msg.value;\\n         corruptElite = payable(msg.sender);\\n         lastTimeOfNewCredit = block.timestamp;\\n     }\\n\\n     function lendGovernmentMoney(address payable buddy) public payable returns (bool) {\\n         uint amount = msg.value;\\n         // check if the system already broke down. If for 12h no new creditor gives new credit to the system it will brake down.\\n         // 12h are on average = 60*60*12/12.5 = 3456\\n         if (lastTimeOfNewCredit + TWELVE_HOURS < block.timestamp) {\\n             // Return money to sender\\n             payable(msg.sender).send(amount);\\n             // Sends all contract money to the last creditor\\n             creditorAddresses[creditorAddresses.length - 1].send(profitFromCrash);\\n             corruptElite.send(address(this).balance);\\n             // Reset contract state\\n             lastCreditorPayedOut = 0;\\n             lastTimeOfNewCredit = block.timestamp;\\n             profitFromCrash = 0;\\n            // <yes> <report> DENIAL_OF_SERVICE\\n             creditorAddresses = new address payable[](0);\\n            // <yes> <report> DENIAL_OF_SERVICE\\n             creditorAmounts = new uint[](0);\\n             round += 1;\\n             return false;\\n         }\\n         else {\\n             // the system needs to collect at least 1% of the profit from a crash to stay alive\\n             if (amount >= 10 ** 18) {\\n                 // the System has received fresh money, it will survive at leat 12h more\\n                 lastTimeOfNewCredit = block.timestamp;\\n                 // register the new creditor and his amount with 10% interest rate\\n                 creditorAddresses.push(payable(msg.sender));\\n                 creditorAmounts.push(amount * 110 / 100);\\n                 // now the money is distributed\\n                 // first the corrupt elite grabs 5% - thieves!\\n                 corruptElite.send(amount * 5/100);\\n                 // 5% are going into the economy (they will increase the value for the person seeing the crash comming)\\n                 if (profitFromCrash < 10000 * 10**18) {\\n                     profitFromCrash += amount * 5/100;\\n                 }\\n                 // if you have a buddy in the government (and he is in the creditor list) he can get 5% of your credits.\\n                 // Make a deal with him.\\n                 if(buddies[buddy] >= amount) {\\n                     buddy.send(amount * 5/100);\\n                 }\\n                 buddies[msg.sender] += amount * 110 / 100;\\n                 // 90% of the money will be used to pay out old creditors\\n                 if (creditorAmounts[lastCreditorPayedOut] <= address(this).balance - profitFromCrash) {\\n                     creditorAddresses[lastCreditorPayedOut].send(creditorAmounts[lastCreditorPayedOut]);\\n                     buddies[creditorAddresses[lastCreditorPayedOut]] -= creditorAmounts[lastCreditorPayedOut];\\n                     lastCreditorPayedOut += 1;\\n                 }\\n                 return true;\\n             }\\n             else {\\n                 payable(msg.sender).send(amount);\\n                 return false;\\n             }\\n         }\\n     }\\n\\n     // fallback function\\n     fallback() external payable {\\n         lendGovernmentMoney(payable(address(0x0)));\\n     }\\n\\n     function totalDebt() public view returns (uint debt) {\\n         for(uint i=lastCreditorPayedOut; i<creditorAmounts.length; i++){\\n             debt += creditorAmounts[i];\\n         }\\n     }\\n\\n     function totalPayedOut() public view returns (uint payout) {\\n         for(uint i=0; i<lastCreditorPayedOut; i++){\\n             payout += creditorAmounts[i];\\n         }\\n     }\\n\\n     // better don't do it (unless you are the corrupt elite and you want to establish trust in the system)\\n     function investInTheSystem() public payable {\\n         profitFromCrash += msg.value;\\n     }\\n\\n     // From time to time the corrupt elite inherits it's power to the next generation\\n     function inheritToNextGeneration(address payable nextGeneration) public {\\n         if (msg.sender == corruptElite) {\\n             corruptElite = nextGeneration;\\n         }\\n     }\\n\\n     function getCreditorAddresses() public view returns (address payable[] memory) {\\n         return creditorAddresses;\\n     }\\n\\n     function getCreditorAmounts() public view returns (uint[] memory) {\\n         return creditorAmounts;\\n     }\\n }\\n\",\"keccak256\":\"0x8e4254b1a489cee39df0b54093002a42cbe3016d1e80fd7f0254d45f26b85f85\",\"license\":\"UNLICENSED\"}},\"version\":1}"}}},"errors":[{"component":"general","errorCode":"3628","formattedMessage":"Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n  --> Government.sol:11:1:\n   |\n11 | contract Government {\n   | ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n  --> Government.sol:90:6:\n   |\n90 |      fallback() external payable {\n   |      ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.","secondarySourceLocations":[{"end":4119,"file":"Government.sol","message":"The payable fallback function is defined here.","start":4030}],"severity":"warning","sourceLocation":{"end":5218,"file":"Government.sol","start":277},"type":"Warning"},{"component":"general","errorCode":"5878","formattedMessage":"Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.\n  --> Government.sol:38:14:\n   |\n38 |              payable(msg.sender).send(amount);\n   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Failure condition of 'send' ignored. Consider using 'transfer' instead.","severity":"warning","sourceLocation":{"end":1463,"file":"Government.sol","start":1431},"type":"Warning"},{"component":"general","errorCode":"5878","formattedMessage":"Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.\n  --> Government.sol:40:14:\n   |\n40 |              creditorAddresses[creditorAddresses.length - 1].send(profitFromCrash);\n   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Failure condition of 'send' ignored. Consider using 'transfer' instead.","severity":"warning","sourceLocation":{"end":1609,"file":"Government.sol","start":1540},"type":"Warning"},{"component":"general","errorCode":"5878","formattedMessage":"Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.\n  --> Government.sol:41:14:\n   |\n41 |              corruptElite.send(address(this).balance);\n   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Failure condition of 'send' ignored. Consider using 'transfer' instead.","severity":"warning","sourceLocation":{"end":1664,"file":"Government.sol","start":1624},"type":"Warning"},{"component":"general","errorCode":"5878","formattedMessage":"Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.\n  --> Government.sol:63:18:\n   |\n63 |                  corruptElite.send(amount * 5/100);\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Failure condition of 'send' ignored. Consider using 'transfer' instead.","severity":"warning","sourceLocation":{"end":2758,"file":"Government.sol","start":2725},"type":"Warning"},{"component":"general","errorCode":"5878","formattedMessage":"Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.\n  --> Government.sol:71:22:\n   |\n71 |                      buddy.send(amount * 5/100);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Failure condition of 'send' ignored. Consider using 'transfer' instead.","severity":"warning","sourceLocation":{"end":3272,"file":"Government.sol","start":3246},"type":"Warning"},{"component":"general","errorCode":"5878","formattedMessage":"Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.\n  --> Government.sol:76:22:\n   |\n76 |                      creditorAddresses[lastCreditorPayedOut].send(creditorAmounts[lastCreditorPayedOut]);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Failure condition of 'send' ignored. Consider using 'transfer' instead.","severity":"warning","sourceLocation":{"end":3637,"file":"Government.sol","start":3554},"type":"Warning"},{"component":"general","errorCode":"5878","formattedMessage":"Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.\n  --> Government.sol:83:18:\n   |\n83 |                  payable(msg.sender).send(amount);\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Failure condition of 'send' ignored. Consider using 'transfer' instead.","severity":"warning","sourceLocation":{"end":3932,"file":"Government.sol","start":3900},"type":"Warning"}],"sources":{"Government.sol":{"id":0}}}


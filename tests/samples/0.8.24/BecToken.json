{"contracts":{"BecToken.sol":{"BasicToken":{"evm":{"deployedBytecode":{"object":"608060405234801561000f575f80fd5b506004361061003f575f3560e01c806318160ddd1461004357806370a0823114610061578063a9059cbb14610091575b5f80fd5b61004b6100c1565b6040516100589190610388565b60405180910390f35b61007b600480360381019061007691906103ff565b6100c6565b6040516100889190610388565b60405180910390f35b6100ab60048036038101906100a69190610454565b61010c565b6040516100b891906104ac565b60405180910390f35b5f5481565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610144575f80fd5b5f82118015610190575060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548211155b610198575f80fd5b6101e88260015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461032990919063ffffffff16565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506102798260015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461034a90919063ffffffff16565b60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516103179190610388565b60405180910390a36001905092915050565b5f82821115610336575f80fd5b818361034291906104f2565b905092915050565b5f8082846103589190610525565b905083811015610366575f80fd5b8091505092915050565b5f819050919050565b61038281610370565b82525050565b5f60208201905061039b5f830184610379565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103ce826103a5565b9050919050565b6103de816103c4565b81146103e8575f80fd5b50565b5f813590506103f9816103d5565b92915050565b5f60208284031215610414576104136103a1565b5b5f610421848285016103eb565b91505092915050565b61043381610370565b811461043d575f80fd5b50565b5f8135905061044e8161042a565b92915050565b5f806040838503121561046a576104696103a1565b5b5f610477858286016103eb565b925050602061048885828601610440565b9150509250929050565b5f8115159050919050565b6104a681610492565b82525050565b5f6020820190506104bf5f83018461049d565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6104fc82610370565b915061050783610370565b925082820390508181111561051f5761051e6104c5565b5b92915050565b5f61052f82610370565b915061053a83610370565b9250828201905080821115610552576105516104c5565b5b9291505056fea2646970667358221220156a36ea2b8f7ad7945136d0ecdbc4726133526e3a59438724e95ce7de098f5f64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x18160DDD EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x91 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0xC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x388 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x3FF JUMP JUMPDEST PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x388 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x454 JUMP JUMPDEST PUSH2 0x10C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x144 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x190 JUMPI POP PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x198 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1E8 DUP3 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x329 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x279 DUP3 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x34A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x388 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 GT ISZERO PUSH2 0x336 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x4F2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 DUP5 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x525 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x366 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x382 DUP2 PUSH2 0x370 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x39B PUSH0 DUP4 ADD DUP5 PUSH2 0x379 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3CE DUP3 PUSH2 0x3A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DE DUP2 PUSH2 0x3C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x3E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3F9 DUP2 PUSH2 0x3D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x414 JUMPI PUSH2 0x413 PUSH2 0x3A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x421 DUP5 DUP3 DUP6 ADD PUSH2 0x3EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x433 DUP2 PUSH2 0x370 JUMP JUMPDEST DUP2 EQ PUSH2 0x43D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x44E DUP2 PUSH2 0x42A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x46A JUMPI PUSH2 0x469 PUSH2 0x3A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x477 DUP6 DUP3 DUP7 ADD PUSH2 0x3EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x488 DUP6 DUP3 DUP7 ADD PUSH2 0x440 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A6 DUP2 PUSH2 0x492 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4BF PUSH0 DUP4 ADD DUP5 PUSH2 0x49D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x4FC DUP3 PUSH2 0x370 JUMP JUMPDEST SWAP2 POP PUSH2 0x507 DUP4 PUSH2 0x370 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x51F JUMPI PUSH2 0x51E PUSH2 0x4C5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x52F DUP3 PUSH2 0x370 JUMP JUMPDEST SWAP2 POP PUSH2 0x53A DUP4 PUSH2 0x370 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x552 JUMPI PUSH2 0x551 PUSH2 0x4C5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO PUSH11 0x36EA2B8F7AD7945136D0EC 0xDB 0xC4 PUSH19 0x6133526E3A59438724E95CE7DE098F5F64736F PUSH13 0x63430008180033000000000000 ","sourceMap":"1620:1032:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1263:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2531:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1890:424;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1263:26;;;;:::o;2531:118::-;2596:15;2627:8;:16;2636:6;2627:16;;;;;;;;;;;;;;;;2620:23;;2531:118;;;:::o;1890:424::-;1970:4;2006:1;1991:17;;:3;:17;;;1983:26;;;;;;2033:1;2024:6;:10;:44;;;;;2048:8;:20;2057:10;2048:20;;;;;;;;;;;;;;;;2038:6;:30;;2024:44;2016:53;;;;;;2165:32;2190:6;2165:8;:20;2174:10;2165:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;2142:8;:20;2151:10;2142:20;;;;;;;;;;;;;;;:55;;;;2220:25;2238:6;2220:8;:13;2229:3;2220:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;2204:8;:13;2213:3;2204:13;;;;;;;;;;;;;;;:41;;;;2278:3;2257:33;;2266:10;2257:33;;;2283:6;2257:33;;;;;;:::i;:::-;;;;;;;;2304:4;2297:11;;1890:424;;;;:::o;835:114::-;893:7;922:1;917;:6;;909:15;;;;;;942:1;938;:5;;;;:::i;:::-;931:12;;835:114;;;;:::o;955:134::-;1013:7;1029:9;1045:1;1041;:5;;;;:::i;:::-;1029:17;;1066:1;1061;:6;;1053:15;;;;;;1082:1;1075:8;;;955:134;;;;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:474::-;1952:6;1960;2009:2;1997:9;1988:7;1984:23;1980:32;1977:119;;;2015:79;;:::i;:::-;1977:119;2135:1;2160:53;2205:7;2196:6;2185:9;2181:22;2160:53;:::i;:::-;2150:63;;2106:117;2262:2;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2233:118;1884:474;;;;;:::o;2364:90::-;2398:7;2441:5;2434:13;2427:21;2416:32;;2364:90;;;:::o;2460:109::-;2541:21;2556:5;2541:21;:::i;:::-;2536:3;2529:34;2460:109;;:::o;2575:210::-;2662:4;2700:2;2689:9;2685:18;2677:26;;2713:65;2775:1;2764:9;2760:17;2751:6;2713:65;:::i;:::-;2575:210;;;;:::o;2791:180::-;2839:77;2836:1;2829:88;2936:4;2933:1;2926:15;2960:4;2957:1;2950:15;2977:194;3017:4;3037:20;3055:1;3037:20;:::i;:::-;3032:25;;3071:20;3089:1;3071:20;:::i;:::-;3066:25;;3115:1;3112;3108:9;3100:17;;3139:1;3133:4;3130:11;3127:37;;;3144:18;;:::i;:::-;3127:37;2977:194;;;;:::o;3177:191::-;3217:3;3236:20;3254:1;3236:20;:::i;:::-;3231:25;;3270:20;3288:1;3270:20;:::i;:::-;3265:25;;3313:1;3310;3306:9;3299:16;;3334:3;3331:1;3328:10;3325:36;;;3341:18;;:::i;:::-;3325:36;3177:191;;;;:::o"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Basic version of StandardToken, with no allowances.\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"_owner\":\"The address to query the the balance of.\"},\"returns\":{\"balance\":\"An uint256 representing the amount owned by the passed address.\"}},\"transfer(address,uint256)\":{\"details\":\"transfer token for a specified address\",\"params\":{\"_to\":\"The address to transfer to.\",\"_value\":\"The amount to be transferred.\"}}},\"title\":\"Basic token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BecToken.sol\":\"BasicToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BecToken.sol\":{\"content\":\"/*\\r\\n * @source: https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-101#bectokensol\\r\\n * Upgraded from Solidity 0.4 to 0.8, vulnerability may no longer exist\\r\\n * @author: -\\r\\n * @vulnerable_at_lines: 268\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n * @dev Math operations with safety checks that throw on error\\r\\n */\\r\\nlibrary SafeMath {\\r\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a * b;\\r\\n    require(a == 0 || c / a == b);\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    // require(b > 0); // Solidity automatically throws when dividing by 0\\r\\n    uint256 c = a / b;\\r\\n    // require(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    require(b <= a);\\r\\n    return a - b;\\r\\n  }\\r\\n\\r\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a + b;\\r\\n    require(c >= a);\\r\\n    return c;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20Basic\\r\\n * @dev Simpler version of ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/179\\r\\n */\\r\\nabstract contract ERC20Basic {\\r\\n  uint256 public totalSupply;\\r\\n  function balanceOf(address who) public view virtual returns (uint256);\\r\\n  function transfer(address to, uint256 value) public virtual returns (bool);\\r\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Basic token\\r\\n * @dev Basic version of StandardToken, with no allowances.\\r\\n */\\r\\ncontract BasicToken is ERC20Basic {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping(address => uint256) balances;\\r\\n\\r\\n  /**\\r\\n  * @dev transfer token for a specified address\\r\\n  * @param _to The address to transfer to.\\r\\n  * @param _value The amount to be transferred.\\r\\n  */\\r\\n  function transfer(address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[msg.sender]);\\r\\n\\r\\n    // SafeMath.sub will throw if there is not enough balance.\\r\\n    balances[msg.sender] = balances[msg.sender].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    emit Transfer(msg.sender, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev Gets the balance of the specified address.\\r\\n  * @param _owner The address to query the the balance of.\\r\\n  * @return balance An uint256 representing the amount owned by the passed address.\\r\\n  */\\r\\n  function balanceOf(address _owner) public view override returns (uint256 balance) {\\r\\n    return balances[_owner];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\r\\n */\\r\\nabstract contract ERC20 is ERC20Basic {\\r\\n  function allowance(address owner, address spender) public view virtual returns (uint256);\\r\\n  function transferFrom(address from, address to, uint256 value) public virtual returns (bool);\\r\\n  function approve(address spender, uint256 value) public virtual returns (bool);\\r\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * @title Standard ERC20 token\\r\\n *\\r\\n * @dev Implementation of the basic standard token.\\r\\n * @dev https://github.com/ethereum/EIPs/issues/20\\r\\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\r\\n */\\r\\ncontract StandardToken is ERC20, BasicToken {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping (address => mapping (address => uint256)) internal allowed;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Transfer tokens from one address to another\\r\\n   * @param _from address The address which you want to send tokens from\\r\\n   * @param _to address The address which you want to transfer to\\r\\n   * @param _value uint256 the amount of tokens to be transferred\\r\\n   */\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[_from]);\\r\\n    require(_value <= allowed[_from][msg.sender]);\\r\\n\\r\\n    balances[_from] = balances[_from].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\\r\\n    emit Transfer(_from, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r\\n   *\\r\\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\\r\\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r\\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n   * @param _spender The address which will spend the funds.\\r\\n   * @param _value The amount of tokens to be spent.\\r\\n   */\\r\\n  function approve(address _spender, uint256 _value) public override virtual returns (bool) {\\r\\n    allowed[msg.sender][_spender] = _value;\\r\\n    emit Approval(msg.sender, _spender, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n   * @param _owner address The address which owns the funds.\\r\\n   * @param _spender address The address which will spend the funds.\\r\\n   * @return remaining A uint256 specifying the amount of tokens still available for the spender.\\r\\n   */\\r\\n  function allowance(address _owner, address _spender) public view override returns (uint256 remaining) {\\r\\n    return allowed[_owner][_spender];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Ownable\\r\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\r\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\r\\n */\\r\\ncontract Ownable {\\r\\n  address public owner;\\r\\n\\r\\n\\r\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\r\\n   * account.\\r\\n   */\\r\\n  constructor() {\\r\\n    owner = msg.sender;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Throws if called by any account other than the owner.\\r\\n   */\\r\\n  modifier onlyOwner() {\\r\\n    require(msg.sender == owner);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\r\\n   * @param newOwner The address to transfer ownership to.\\r\\n   */\\r\\n  function transferOwnership(address newOwner) onlyOwner public {\\r\\n    require(newOwner != address(0));\\r\\n    emit OwnershipTransferred(owner, newOwner);\\r\\n    owner = newOwner;\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable\\r\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\r\\n */\\r\\ncontract Pausable is Ownable {\\r\\n  event Pause();\\r\\n  event Unpause();\\r\\n\\r\\n  bool public paused = false;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\r\\n   */\\r\\n  modifier whenNotPaused() {\\r\\n    require(!paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is paused.\\r\\n   */\\r\\n  modifier whenPaused() {\\r\\n    require(paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to pause, triggers stopped state\\r\\n   */\\r\\n  function pause() onlyOwner whenNotPaused public {\\r\\n    paused = true;\\r\\n    emit Pause();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to unpause, returns to normal state\\r\\n   */\\r\\n  function unpause() onlyOwner whenPaused public {\\r\\n    paused = false;\\r\\n    emit Unpause();\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable token\\r\\n *\\r\\n * @dev StandardToken modified with pausable transfers.\\r\\n **/\\r\\n\\r\\ncontract PausableToken is StandardToken, Pausable {\\r\\n  using SafeMath for uint256;\\r\\n  \\r\\n  function transfer(address _to, uint256 _value) public whenNotPaused override(BasicToken,ERC20Basic) returns (bool) {\\r\\n    return super.transfer(_to, _value);\\r\\n  }\\r\\n\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.transferFrom(_from, _to, _value);\\r\\n  }\\r\\n\\r\\n  function approve(address _spender, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.approve(_spender, _value);\\r\\n  }\\r\\n\\r\\n  function batchTransfer(address[] memory _receivers, uint256 _value) public whenNotPaused returns (bool) {\\r\\n    uint cnt = _receivers.length;\\r\\n    // <yes> <report> ARITHMETIC\\r\\n    uint256 amount = uint256(cnt) * _value;\\r\\n    require(cnt > 0 && cnt <= 20);\\r\\n    require(_value > 0 && balances[msg.sender] >= amount);\\r\\n\\r\\n    balances[msg.sender] = balances[msg.sender].sub(amount);\\r\\n    for (uint i = 0; i < cnt; i++) {\\r\\n        balances[_receivers[i]] = balances[_receivers[i]].add(_value);\\r\\n        emit Transfer(msg.sender, _receivers[i], _value);\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Bec Token\\r\\n *\\r\\n * @dev Implementation of Bec Token based on the basic standard token.\\r\\n */\\r\\ncontract BecToken is PausableToken {\\r\\n    /**\\r\\n    * Public variables of the token\\r\\n    * The following variables are OPTIONAL vanities. One does not have to include them.\\r\\n    * They allow one to customise the token contract & in no way influences the core functionality.\\r\\n    * Some wallets/interfaces might not even bother to look at this information.\\r\\n    */\\r\\n    string public name = \\\"BeautyChain\\\";\\r\\n    string public symbol = \\\"BEC\\\";\\r\\n    string public version = '1.0.0';\\r\\n    uint8 public decimals = 18;\\r\\n\\r\\n    /**\\r\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n     */\\r\\n    constructor() {\\r\\n      totalSupply = 7000000000 * (10**(uint256(decimals)));\\r\\n      balances[msg.sender] = totalSupply;    // Give the creator all initial tokens\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2716ae512257148b716c05f5e0d13034bae47d0c26ba0381f7241b1776c8fff0\",\"license\":\"UNLICENSED\"}},\"version\":1}"},"BecToken":{"evm":{"deployedBytecode":{"object":"608060405234801561000f575f80fd5b50600436106100fe575f3560e01c806370a082311161009557806395d89b411161006457806395d89b411461028a578063a9059cbb146102a8578063dd62ed3e146102d8578063f2fde38b14610308576100fe565b806370a082311461020257806383f12fec146102325780638456cb59146102625780638da5cb5b1461026c576100fe565b8063313ce567116100d1578063313ce5671461019e5780633f4ba83a146101bc57806354fd4d50146101c65780635c975abb146101e4576100fe565b806306fdde0314610102578063095ea7b31461012057806318160ddd1461015057806323b872dd1461016e575b5f80fd5b61010a610324565b604051610117919061133b565b60405180910390f35b61013a600480360381019061013591906113f9565b6103b0565b6040516101479190611451565b60405180910390f35b6101586103dc565b6040516101659190611479565b60405180910390f35b61018860048036038101906101839190611492565b6103e1565b6040516101959190611451565b60405180910390f35b6101a661040f565b6040516101b391906114fd565b60405180910390f35b6101c4610421565b005b6101ce6104d9565b6040516101db919061133b565b60405180910390f35b6101ec610565565b6040516101f99190611451565b60405180910390f35b61021c60048036038101906102179190611516565b610578565b6040516102299190611479565b60405180910390f35b61024c60048036038101906102479190611681565b6105be565b6040516102599190611451565b60405180910390f35b61026a610851565b005b61027461090b565b60405161028191906116ea565b60405180910390f35b610292610930565b60405161029f919061133b565b60405180910390f35b6102c260048036038101906102bd91906113f9565b6109bc565b6040516102cf9190611451565b60405180910390f35b6102f260048036038101906102ed9190611703565b6109e8565b6040516102ff9190611479565b60405180910390f35b610322600480360381019061031d9190611516565b610a6a565b005b600480546103319061176e565b80601f016020809104026020016040519081016040528092919081815260200182805461035d9061176e565b80156103a85780601f1061037f576101008083540402835291602001916103a8565b820191905f5260205f20905b81548152906001019060200180831161038b57829003601f168201915b505050505081565b5f600360149054906101000a900460ff16156103ca575f80fd5b6103d48383610bb7565b905092915050565b5f5481565b5f600360149054906101000a900460ff16156103fb575f80fd5b610406848484610ca4565b90509392505050565b60075f9054906101000a900460ff1681565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610479575f80fd5b600360149054906101000a900460ff16610491575f80fd5b5f600360146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600680546104e69061176e565b80601f01602080910402602001604051908101604052809291908181526020018280546105129061176e565b801561055d5780601f106105345761010080835404028352916020019161055d565b820191905f5260205f20905b81548152906001019060200180831161054057829003601f168201915b505050505081565b600360149054906101000a900460ff1681565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f600360149054906101000a900460ff16156105d8575f80fd5b5f835190505f83826105ea91906117cb565b90505f821180156105fc575060148211155b610604575f80fd5b5f8411801561065057508060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410155b610658575f80fd5b6106a88160015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461104d90919063ffffffff16565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f5b828110156108445761075d8560015f89858151811061070d5761070c61180c565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461106e90919063ffffffff16565b60015f8884815181106107735761077261180c565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508581815181106107cb576107ca61180c565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8760405161082f9190611479565b60405180910390a380806001019150506106eb565b5060019250505092915050565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108a9575f80fd5b600360149054906101000a900460ff16156108c2575f80fd5b6001600360146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6005805461093d9061176e565b80601f01602080910402602001604051908101604052809291908181526020018280546109699061176e565b80156109b45780601f1061098b576101008083540402835291602001916109b4565b820191905f5260205f20905b81548152906001019060200180831161099757829003601f168201915b505050505081565b5f600360149054906101000a900460ff16156109d6575f80fd5b6109e08383611094565b905092915050565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ac2575f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610af9575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff1660035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a38060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f8160025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610c929190611479565b60405180910390a36001905092915050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610cdc575f80fd5b5f82118015610d28575060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548211155b610d30575f80fd5b60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054821115610db4575f80fd5b610e048260015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461104d90919063ffffffff16565b60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610e958260015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461106e90919063ffffffff16565b60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610f618260025f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461104d90919063ffffffff16565b60025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161103a9190611479565b60405180910390a3600190509392505050565b5f8282111561105a575f80fd5b81836110669190611839565b905092915050565b5f80828461107c919061186c565b90508381101561108a575f80fd5b8091505092915050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110cc575f80fd5b5f82118015611118575060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548211155b611120575f80fd5b6111708260015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461104d90919063ffffffff16565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506112018260015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461106e90919063ffffffff16565b60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161129f9190611479565b60405180910390a36001905092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156112e85780820151818401526020810190506112cd565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61130d826112b1565b61131781856112bb565b93506113278185602086016112cb565b611330816112f3565b840191505092915050565b5f6020820190508181035f8301526113538184611303565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6113958261136c565b9050919050565b6113a58161138b565b81146113af575f80fd5b50565b5f813590506113c08161139c565b92915050565b5f819050919050565b6113d8816113c6565b81146113e2575f80fd5b50565b5f813590506113f3816113cf565b92915050565b5f806040838503121561140f5761140e611364565b5b5f61141c858286016113b2565b925050602061142d858286016113e5565b9150509250929050565b5f8115159050919050565b61144b81611437565b82525050565b5f6020820190506114645f830184611442565b92915050565b611473816113c6565b82525050565b5f60208201905061148c5f83018461146a565b92915050565b5f805f606084860312156114a9576114a8611364565b5b5f6114b6868287016113b2565b93505060206114c7868287016113b2565b92505060406114d8868287016113e5565b9150509250925092565b5f60ff82169050919050565b6114f7816114e2565b82525050565b5f6020820190506115105f8301846114ee565b92915050565b5f6020828403121561152b5761152a611364565b5b5f611538848285016113b2565b91505092915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61157b826112f3565b810181811067ffffffffffffffff8211171561159a57611599611545565b5b80604052505050565b5f6115ac61135b565b90506115b88282611572565b919050565b5f67ffffffffffffffff8211156115d7576115d6611545565b5b602082029050602081019050919050565b5f80fd5b5f6115fe6115f9846115bd565b6115a3565b90508083825260208201905060208402830185811115611621576116206115e8565b5b835b8181101561164a578061163688826113b2565b845260208401935050602081019050611623565b5050509392505050565b5f82601f83011261166857611667611541565b5b81356116788482602086016115ec565b91505092915050565b5f806040838503121561169757611696611364565b5b5f83013567ffffffffffffffff8111156116b4576116b3611368565b5b6116c085828601611654565b92505060206116d1858286016113e5565b9150509250929050565b6116e48161138b565b82525050565b5f6020820190506116fd5f8301846116db565b92915050565b5f806040838503121561171957611718611364565b5b5f611726858286016113b2565b9250506020611737858286016113b2565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061178557607f821691505b60208210810361179857611797611741565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6117d5826113c6565b91506117e0836113c6565b92508282026117ee816113c6565b915082820484148315176118055761180461179e565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f611843826113c6565b915061184e836113c6565b92508282039050818111156118665761186561179e565b5b92915050565b5f611876826113c6565b9150611881836113c6565b92508282019050808211156118995761189861179e565b5b9291505056fea2646970667358221220581def14b82e456fe8650ce79a91d5c1c124d610fa601a34ac107a5f39fcbc9964736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x308 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x83F12FEC EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26C JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1E4 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x324 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x133B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x13F9 JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1492 JUMP JUMPDEST PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x421 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CE PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x133B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH2 0x565 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH2 0x578 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1681 JUMP JUMPDEST PUSH2 0x5BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH2 0x851 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x274 PUSH2 0x90B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x16EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH2 0x930 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x133B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x13F9 JUMP JUMPDEST PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH2 0xA6A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x331 SWAP1 PUSH2 0x176E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x35D SWAP1 PUSH2 0x176E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3A8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x37F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3A8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x38B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3CA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3D4 DUP4 DUP4 PUSH2 0xBB7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3FB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x406 DUP5 DUP5 DUP5 PUSH2 0xCA4 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x479 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x491 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x4E6 SWAP1 PUSH2 0x176E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x512 SWAP1 PUSH2 0x176E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x55D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x534 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x55D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x540 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x5D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD SWAP1 POP PUSH0 DUP4 DUP3 PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0x17CB JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x5FC JUMPI POP PUSH1 0x14 DUP3 GT ISZERO JUMPDEST PUSH2 0x604 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP5 GT DUP1 ISZERO PUSH2 0x650 JUMPI POP DUP1 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO JUMPDEST PUSH2 0x658 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6A8 DUP2 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x104D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x844 JUMPI PUSH2 0x75D DUP6 PUSH1 0x1 PUSH0 DUP10 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x70D JUMPI PUSH2 0x70C PUSH2 0x180C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x106E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x773 JUMPI PUSH2 0x772 PUSH2 0x180C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x7CB JUMPI PUSH2 0x7CA PUSH2 0x180C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP8 PUSH1 0x40 MLOAD PUSH2 0x82F SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x6EB JUMP JUMPDEST POP PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x93D SWAP1 PUSH2 0x176E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x969 SWAP1 PUSH2 0x176E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9B4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x98B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9B4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x997 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9E0 DUP4 DUP4 PUSH2 0x1094 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAC2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC92 SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCDC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0xD28 JUMPI POP PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0xD30 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xDB4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE04 DUP3 PUSH1 0x1 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x104D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE95 DUP3 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x106E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xF61 DUP3 PUSH1 0x2 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x104D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x103A SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 GT ISZERO PUSH2 0x105A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0x1066 SWAP2 SWAP1 PUSH2 0x1839 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 DUP5 PUSH2 0x107C SWAP2 SWAP1 PUSH2 0x186C JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x108A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10CC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x1118 JUMPI POP PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x1120 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1170 DUP3 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x104D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1201 DUP3 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x106E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x129F SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12E8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x12CD JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x130D DUP3 PUSH2 0x12B1 JUMP JUMPDEST PUSH2 0x1317 DUP2 DUP6 PUSH2 0x12BB JUMP JUMPDEST SWAP4 POP PUSH2 0x1327 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12CB JUMP JUMPDEST PUSH2 0x1330 DUP2 PUSH2 0x12F3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1353 DUP2 DUP5 PUSH2 0x1303 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1395 DUP3 PUSH2 0x136C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13A5 DUP2 PUSH2 0x138B JUMP JUMPDEST DUP2 EQ PUSH2 0x13AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13C0 DUP2 PUSH2 0x139C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13D8 DUP2 PUSH2 0x13C6 JUMP JUMPDEST DUP2 EQ PUSH2 0x13E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13F3 DUP2 PUSH2 0x13CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x140F JUMPI PUSH2 0x140E PUSH2 0x1364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x141C DUP6 DUP3 DUP7 ADD PUSH2 0x13B2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x142D DUP6 DUP3 DUP7 ADD PUSH2 0x13E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144B DUP2 PUSH2 0x1437 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1464 PUSH0 DUP4 ADD DUP5 PUSH2 0x1442 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1473 DUP2 PUSH2 0x13C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x148C PUSH0 DUP4 ADD DUP5 PUSH2 0x146A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14A9 JUMPI PUSH2 0x14A8 PUSH2 0x1364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14B6 DUP7 DUP3 DUP8 ADD PUSH2 0x13B2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x14C7 DUP7 DUP3 DUP8 ADD PUSH2 0x13B2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x14D8 DUP7 DUP3 DUP8 ADD PUSH2 0x13E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F7 DUP2 PUSH2 0x14E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1510 PUSH0 DUP4 ADD DUP5 PUSH2 0x14EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x152B JUMPI PUSH2 0x152A PUSH2 0x1364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1538 DUP5 DUP3 DUP6 ADD PUSH2 0x13B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x157B DUP3 PUSH2 0x12F3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x159A JUMPI PUSH2 0x1599 PUSH2 0x1545 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15AC PUSH2 0x135B JUMP JUMPDEST SWAP1 POP PUSH2 0x15B8 DUP3 DUP3 PUSH2 0x1572 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15D7 JUMPI PUSH2 0x15D6 PUSH2 0x1545 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x15FE PUSH2 0x15F9 DUP5 PUSH2 0x15BD JUMP JUMPDEST PUSH2 0x15A3 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1621 JUMPI PUSH2 0x1620 PUSH2 0x15E8 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x164A JUMPI DUP1 PUSH2 0x1636 DUP9 DUP3 PUSH2 0x13B2 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1623 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1668 JUMPI PUSH2 0x1667 PUSH2 0x1541 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1678 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1697 JUMPI PUSH2 0x1696 PUSH2 0x1364 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16B4 JUMPI PUSH2 0x16B3 PUSH2 0x1368 JUMP JUMPDEST JUMPDEST PUSH2 0x16C0 DUP6 DUP3 DUP7 ADD PUSH2 0x1654 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16D1 DUP6 DUP3 DUP7 ADD PUSH2 0x13E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x16E4 DUP2 PUSH2 0x138B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16FD PUSH0 DUP4 ADD DUP5 PUSH2 0x16DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1719 JUMPI PUSH2 0x1718 PUSH2 0x1364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1726 DUP6 DUP3 DUP7 ADD PUSH2 0x13B2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1737 DUP6 DUP3 DUP7 ADD PUSH2 0x13B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1785 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1798 JUMPI PUSH2 0x1797 PUSH2 0x1741 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x17D5 DUP3 PUSH2 0x13C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x17E0 DUP4 PUSH2 0x13C6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x17EE DUP2 PUSH2 0x13C6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1805 JUMPI PUSH2 0x1804 PUSH2 0x179E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1843 DUP3 PUSH2 0x13C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x184E DUP4 PUSH2 0x13C6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1866 JUMPI PUSH2 0x1865 PUSH2 0x179E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1876 DUP3 PUSH2 0x13C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1881 DUP4 PUSH2 0x13C6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1899 JUMPI PUSH2 0x1898 PUSH2 0x179E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC SAR 0xEF EQ 0xB8 0x2E GASLIMIT PUSH16 0xE8650CE79A91D5C1C124D610FA601A34 0xAC LT PUSH27 0x5F39FCBC9964736F6C634300081800330000000000000000000000 ","sourceMap":"8988:794:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9356:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8143:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1263:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7968:169;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9470:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7508:95;;;:::i;:::-;;9432:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6887:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2531:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8296:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7328:93;;;:::i;:::-;;5897:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9397:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7800:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5526:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6509:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9356:34;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8143:147::-;8233:4;7063:6;;;;;;;;;;;7062:7;7054:16;;;;;;8253:31:::1;8267:8;8277:6;8253:13;:31::i;:::-;8246:38;;8143:147:::0;;;;:::o;1263:26::-;;;;:::o;7968:169::-;8073:4;7063:6;;;;;;;;;;;7062:7;7054:16;;;;;;8093:38:::1;8112:5;8119:3;8124:6;8093:18;:38::i;:::-;8086:45;;7968:169:::0;;;;;:::o;9470:26::-;;;;;;;;;;;;;:::o;7508:95::-;6320:5;;;;;;;;;;;6306:19;;:10;:19;;;6298:28;;;;;;7223:6:::1;;;;;;;;;;;7215:15;;;::::0;::::1;;7571:5:::2;7562:6;;:14;;;;;;;;;;;;;;;;;;7588:9;;;;;;;;;;7508:95::o:0;9432:31::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6887:26::-;;;;;;;;;;;;;:::o;2531:118::-;2596:15;2627:8;:16;2636:6;2627:16;;;;;;;;;;;;;;;;2620:23;;2531:118;;;:::o;8296:578::-;8394:4;7063:6;;;;;;;;;;;7062:7;7054:16;;;;;;8407:8:::1;8418:10;:17;8407:28;;8476:14;8508:6;8501:3;8493:21;;;;:::i;:::-;8476:38;;8535:1;8529:3;:7;:20;;;;;8547:2;8540:3;:9;;8529:20;8521:29;;;::::0;::::1;;8574:1;8565:6;:10;:44;;;;;8603:6;8579:8;:20;8588:10;8579:20;;;;;;;;;;;;;;;;:30;;8565:44;8557:53;;;::::0;::::1;;8642:32;8667:6;8642:8;:20;8651:10;8642:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;8619:8;:20;8628:10;8619:20;;;;;;;;;;;;;;;:55;;;;8686:6;8681:170;8702:3;8698:1;:7;8681:170;;;8749:35;8777:6;8749:8;:23;8758:10;8769:1;8758:13;;;;;;;;:::i;:::-;;;;;;;;8749:23;;;;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;8723:8;:23;8732:10;8743:1;8732:13;;;;;;;;:::i;:::-;;;;;;;;8723:23;;;;;;;;;;;;;;;:61;;;;8821:10;8832:1;8821:13;;;;;;;;:::i;:::-;;;;;;;;8800:43;;8809:10;8800:43;;;8836:6;8800:43;;;;;;:::i;:::-;;;;;;;;8707:3;;;;;;;8681:170;;;;8864:4;8857:11;;;;8296:578:::0;;;;:::o;7328:93::-;6320:5;;;;;;;;;;;6306:19;;:10;:19;;;6298:28;;;;;;7063:6:::1;;;;;;;;;;;7062:7;7054:16;;;::::0;::::1;;7392:4:::2;7383:6;;:13;;;;;;;;;;;;;;;;;;7408:7;;;;;;;;;;7328:93::o:0;5897:20::-;;;;;;;;;;;;;:::o;9397:28::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7800:162::-;7909:4;7063:6;;;;;;;;;;;7062:7;7054:16;;;;;;7929:27:::1;7944:3;7949:6;7929:14;:27::i;:::-;7922:34;;7800:162:::0;;;;:::o;5526:147::-;5609:17;5642:7;:15;5650:6;5642:15;;;;;;;;;;;;;;;:25;5658:8;5642:25;;;;;;;;;;;;;;;;5635:32;;5526:147;;;;:::o;6509:178::-;6320:5;;;;;;;;;;;6306:19;;:10;:19;;;6298:28;;;;;;6606:1:::1;6586:22;;:8;:22;;::::0;6578:31:::1;;;::::0;::::1;;6649:8;6621:37;;6642:5;;;;;;;;;;;6621:37;;;;;;;;;;;;6673:8;6665:5;;:16;;;;;;;;;;;;;;;;;;6509:178:::0;:::o;4980:209::-;5064:4;5109:6;5077:7;:19;5085:10;5077:19;;;;;;;;;;;;;;;:29;5097:8;5077:29;;;;;;;;;;;;;;;:38;;;;5148:8;5127:38;;5136:10;5127:38;;;5158:6;5127:38;;;;;;:::i;:::-;;;;;;;;5179:4;5172:11;;4980:209;;;;:::o;3860:485::-;3959:4;3995:1;3980:17;;:3;:17;;;3972:26;;;;;;4022:1;4013:6;:10;:39;;;;;4037:8;:15;4046:5;4037:15;;;;;;;;;;;;;;;;4027:6;:25;;4013:39;4005:48;;;;;;4078:7;:14;4086:5;4078:14;;;;;;;;;;;;;;;:26;4093:10;4078:26;;;;;;;;;;;;;;;;4068:6;:36;;4060:45;;;;;;4132:27;4152:6;4132:8;:15;4141:5;4132:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;4114:8;:15;4123:5;4114:15;;;;;;;;;;;;;;;:45;;;;4182:25;4200:6;4182:8;:13;4191:3;4182:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;4166:8;:13;4175:3;4166:13;;;;;;;;;;;;;;;:41;;;;4243:38;4274:6;4243:7;:14;4251:5;4243:14;;;;;;;;;;;;;;;:26;4258:10;4243:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;4214:7;:14;4222:5;4214:14;;;;;;;;;;;;;;;:26;4229:10;4214:26;;;;;;;;;;;;;;;:67;;;;4309:3;4293:28;;4302:5;4293:28;;;4314:6;4293:28;;;;;;:::i;:::-;;;;;;;;4335:4;4328:11;;3860:485;;;;;:::o;835:114::-;893:7;922:1;917;:6;;909:15;;;;;;942:1;938;:5;;;;:::i;:::-;931:12;;835:114;;;;:::o;955:134::-;1013:7;1029:9;1045:1;1041;:5;;;;:::i;:::-;1029:17;;1066:1;1061;:6;;1053:15;;;;;;1082:1;1075:8;;;955:134;;;;:::o;1890:424::-;1970:4;2006:1;1991:17;;:3;:17;;;1983:26;;;;;;2033:1;2024:6;:10;:44;;;;;2048:8;:20;2057:10;2048:20;;;;;;;;;;;;;;;;2038:6;:30;;2024:44;2016:53;;;;;;2165:32;2190:6;2165:8;:20;2174:10;2165:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;2142:8;:20;2151:10;2142:20;;;;;;;;;;;;;;;:55;;;;2220:25;2238:6;2220:8;:13;2229:3;2220:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;2204:8;:13;2213:3;2204:13;;;;;;;;;;;;;;;:41;;;;2278:3;2257:33;;2266:10;2257:33;;;2283:6;2257:33;;;;;;:::i;:::-;;;;;;;;2304:4;2297:11;;1890:424;;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:75::-;1382:6;1415:2;1409:9;1399:19;;1349:75;:::o;1430:117::-;1539:1;1536;1529:12;1553:117;1662:1;1659;1652:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:117::-;5297:1;5294;5287:12;5311:180;5359:77;5356:1;5349:88;5456:4;5453:1;5446:15;5480:4;5477:1;5470:15;5497:281;5580:27;5602:4;5580:27;:::i;:::-;5572:6;5568:40;5710:6;5698:10;5695:22;5674:18;5662:10;5659:34;5656:62;5653:88;;;5721:18;;:::i;:::-;5653:88;5761:10;5757:2;5750:22;5540:238;5497:281;;:::o;5784:129::-;5818:6;5845:20;;:::i;:::-;5835:30;;5874:33;5902:4;5894:6;5874:33;:::i;:::-;5784:129;;;:::o;5919:311::-;5996:4;6086:18;6078:6;6075:30;6072:56;;;6108:18;;:::i;:::-;6072:56;6158:4;6150:6;6146:17;6138:25;;6218:4;6212;6208:15;6200:23;;5919:311;;;:::o;6236:117::-;6345:1;6342;6335:12;6376:710;6472:5;6497:81;6513:64;6570:6;6513:64;:::i;:::-;6497:81;:::i;:::-;6488:90;;6598:5;6627:6;6620:5;6613:21;6661:4;6654:5;6650:16;6643:23;;6714:4;6706:6;6702:17;6694:6;6690:30;6743:3;6735:6;6732:15;6729:122;;;6762:79;;:::i;:::-;6729:122;6877:6;6860:220;6894:6;6889:3;6886:15;6860:220;;;6969:3;6998:37;7031:3;7019:10;6998:37;:::i;:::-;6993:3;6986:50;7065:4;7060:3;7056:14;7049:21;;6936:144;6920:4;6915:3;6911:14;6904:21;;6860:220;;;6864:21;6478:608;;6376:710;;;;;:::o;7109:370::-;7180:5;7229:3;7222:4;7214:6;7210:17;7206:27;7196:122;;7237:79;;:::i;:::-;7196:122;7354:6;7341:20;7379:94;7469:3;7461:6;7454:4;7446:6;7442:17;7379:94;:::i;:::-;7370:103;;7186:293;7109:370;;;;:::o;7485:684::-;7578:6;7586;7635:2;7623:9;7614:7;7610:23;7606:32;7603:119;;;7641:79;;:::i;:::-;7603:119;7789:1;7778:9;7774:17;7761:31;7819:18;7811:6;7808:30;7805:117;;;7841:79;;:::i;:::-;7805:117;7946:78;8016:7;8007:6;7996:9;7992:22;7946:78;:::i;:::-;7936:88;;7732:302;8073:2;8099:53;8144:7;8135:6;8124:9;8120:22;8099:53;:::i;:::-;8089:63;;8044:118;7485:684;;;;;:::o;8175:118::-;8262:24;8280:5;8262:24;:::i;:::-;8257:3;8250:37;8175:118;;:::o;8299:222::-;8392:4;8430:2;8419:9;8415:18;8407:26;;8443:71;8511:1;8500:9;8496:17;8487:6;8443:71;:::i;:::-;8299:222;;;;:::o;8527:474::-;8595:6;8603;8652:2;8640:9;8631:7;8627:23;8623:32;8620:119;;;8658:79;;:::i;:::-;8620:119;8778:1;8803:53;8848:7;8839:6;8828:9;8824:22;8803:53;:::i;:::-;8793:63;;8749:117;8905:2;8931:53;8976:7;8967:6;8956:9;8952:22;8931:53;:::i;:::-;8921:63;;8876:118;8527:474;;;;;:::o;9007:180::-;9055:77;9052:1;9045:88;9152:4;9149:1;9142:15;9176:4;9173:1;9166:15;9193:320;9237:6;9274:1;9268:4;9264:12;9254:22;;9321:1;9315:4;9311:12;9342:18;9332:81;;9398:4;9390:6;9386:17;9376:27;;9332:81;9460:2;9452:6;9449:14;9429:18;9426:38;9423:84;;9479:18;;:::i;:::-;9423:84;9244:269;9193:320;;;:::o;9519:180::-;9567:77;9564:1;9557:88;9664:4;9661:1;9654:15;9688:4;9685:1;9678:15;9705:410;9745:7;9768:20;9786:1;9768:20;:::i;:::-;9763:25;;9802:20;9820:1;9802:20;:::i;:::-;9797:25;;9857:1;9854;9850:9;9879:30;9897:11;9879:30;:::i;:::-;9868:41;;10058:1;10049:7;10045:15;10042:1;10039:22;10019:1;10012:9;9992:83;9969:139;;10088:18;;:::i;:::-;9969:139;9753:362;9705:410;;;;:::o;10121:180::-;10169:77;10166:1;10159:88;10266:4;10263:1;10256:15;10290:4;10287:1;10280:15;10307:194;10347:4;10367:20;10385:1;10367:20;:::i;:::-;10362:25;;10401:20;10419:1;10401:20;:::i;:::-;10396:25;;10445:1;10442;10438:9;10430:17;;10469:1;10463:4;10460:11;10457:37;;;10474:18;;:::i;:::-;10457:37;10307:194;;;;:::o;10507:191::-;10547:3;10566:20;10584:1;10566:20;:::i;:::-;10561:25;;10600:20;10618:1;10600:20;:::i;:::-;10595:25;;10643:1;10640;10636:9;10629:16;;10664:3;10661:1;10658:10;10655:36;;;10671:18;;:::i;:::-;10655:36;10507:191;;;;:::o"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"batchTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of Bec Token based on the basic standard token.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"_owner\":\"address The address which owns the funds.\",\"_spender\":\"address The address which will spend the funds.\"},\"returns\":{\"remaining\":\"A uint256 specifying the amount of tokens still available for the spender.\"}},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"_owner\":\"The address to query the the balance of.\"},\"returns\":{\"balance\":\"An uint256 representing the amount owned by the passed address.\"}},\"constructor\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\"},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"_from\":\"address The address which you want to send tokens from\",\"_to\":\"address The address which you want to transfer to\",\"_value\":\"uint256 the amount of tokens to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}},\"title\":\"Bec Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"name()\":{\"notice\":\"Public variables of the token The following variables are OPTIONAL vanities. One does not have to include them. They allow one to customise the token contract & in no way influences the core functionality. Some wallets/interfaces might not even bother to look at this information.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BecToken.sol\":\"BecToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BecToken.sol\":{\"content\":\"/*\\r\\n * @source: https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-101#bectokensol\\r\\n * Upgraded from Solidity 0.4 to 0.8, vulnerability may no longer exist\\r\\n * @author: -\\r\\n * @vulnerable_at_lines: 268\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n * @dev Math operations with safety checks that throw on error\\r\\n */\\r\\nlibrary SafeMath {\\r\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a * b;\\r\\n    require(a == 0 || c / a == b);\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    // require(b > 0); // Solidity automatically throws when dividing by 0\\r\\n    uint256 c = a / b;\\r\\n    // require(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    require(b <= a);\\r\\n    return a - b;\\r\\n  }\\r\\n\\r\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a + b;\\r\\n    require(c >= a);\\r\\n    return c;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20Basic\\r\\n * @dev Simpler version of ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/179\\r\\n */\\r\\nabstract contract ERC20Basic {\\r\\n  uint256 public totalSupply;\\r\\n  function balanceOf(address who) public view virtual returns (uint256);\\r\\n  function transfer(address to, uint256 value) public virtual returns (bool);\\r\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Basic token\\r\\n * @dev Basic version of StandardToken, with no allowances.\\r\\n */\\r\\ncontract BasicToken is ERC20Basic {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping(address => uint256) balances;\\r\\n\\r\\n  /**\\r\\n  * @dev transfer token for a specified address\\r\\n  * @param _to The address to transfer to.\\r\\n  * @param _value The amount to be transferred.\\r\\n  */\\r\\n  function transfer(address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[msg.sender]);\\r\\n\\r\\n    // SafeMath.sub will throw if there is not enough balance.\\r\\n    balances[msg.sender] = balances[msg.sender].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    emit Transfer(msg.sender, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev Gets the balance of the specified address.\\r\\n  * @param _owner The address to query the the balance of.\\r\\n  * @return balance An uint256 representing the amount owned by the passed address.\\r\\n  */\\r\\n  function balanceOf(address _owner) public view override returns (uint256 balance) {\\r\\n    return balances[_owner];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\r\\n */\\r\\nabstract contract ERC20 is ERC20Basic {\\r\\n  function allowance(address owner, address spender) public view virtual returns (uint256);\\r\\n  function transferFrom(address from, address to, uint256 value) public virtual returns (bool);\\r\\n  function approve(address spender, uint256 value) public virtual returns (bool);\\r\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * @title Standard ERC20 token\\r\\n *\\r\\n * @dev Implementation of the basic standard token.\\r\\n * @dev https://github.com/ethereum/EIPs/issues/20\\r\\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\r\\n */\\r\\ncontract StandardToken is ERC20, BasicToken {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping (address => mapping (address => uint256)) internal allowed;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Transfer tokens from one address to another\\r\\n   * @param _from address The address which you want to send tokens from\\r\\n   * @param _to address The address which you want to transfer to\\r\\n   * @param _value uint256 the amount of tokens to be transferred\\r\\n   */\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[_from]);\\r\\n    require(_value <= allowed[_from][msg.sender]);\\r\\n\\r\\n    balances[_from] = balances[_from].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\\r\\n    emit Transfer(_from, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r\\n   *\\r\\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\\r\\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r\\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n   * @param _spender The address which will spend the funds.\\r\\n   * @param _value The amount of tokens to be spent.\\r\\n   */\\r\\n  function approve(address _spender, uint256 _value) public override virtual returns (bool) {\\r\\n    allowed[msg.sender][_spender] = _value;\\r\\n    emit Approval(msg.sender, _spender, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n   * @param _owner address The address which owns the funds.\\r\\n   * @param _spender address The address which will spend the funds.\\r\\n   * @return remaining A uint256 specifying the amount of tokens still available for the spender.\\r\\n   */\\r\\n  function allowance(address _owner, address _spender) public view override returns (uint256 remaining) {\\r\\n    return allowed[_owner][_spender];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Ownable\\r\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\r\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\r\\n */\\r\\ncontract Ownable {\\r\\n  address public owner;\\r\\n\\r\\n\\r\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\r\\n   * account.\\r\\n   */\\r\\n  constructor() {\\r\\n    owner = msg.sender;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Throws if called by any account other than the owner.\\r\\n   */\\r\\n  modifier onlyOwner() {\\r\\n    require(msg.sender == owner);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\r\\n   * @param newOwner The address to transfer ownership to.\\r\\n   */\\r\\n  function transferOwnership(address newOwner) onlyOwner public {\\r\\n    require(newOwner != address(0));\\r\\n    emit OwnershipTransferred(owner, newOwner);\\r\\n    owner = newOwner;\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable\\r\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\r\\n */\\r\\ncontract Pausable is Ownable {\\r\\n  event Pause();\\r\\n  event Unpause();\\r\\n\\r\\n  bool public paused = false;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\r\\n   */\\r\\n  modifier whenNotPaused() {\\r\\n    require(!paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is paused.\\r\\n   */\\r\\n  modifier whenPaused() {\\r\\n    require(paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to pause, triggers stopped state\\r\\n   */\\r\\n  function pause() onlyOwner whenNotPaused public {\\r\\n    paused = true;\\r\\n    emit Pause();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to unpause, returns to normal state\\r\\n   */\\r\\n  function unpause() onlyOwner whenPaused public {\\r\\n    paused = false;\\r\\n    emit Unpause();\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable token\\r\\n *\\r\\n * @dev StandardToken modified with pausable transfers.\\r\\n **/\\r\\n\\r\\ncontract PausableToken is StandardToken, Pausable {\\r\\n  using SafeMath for uint256;\\r\\n  \\r\\n  function transfer(address _to, uint256 _value) public whenNotPaused override(BasicToken,ERC20Basic) returns (bool) {\\r\\n    return super.transfer(_to, _value);\\r\\n  }\\r\\n\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.transferFrom(_from, _to, _value);\\r\\n  }\\r\\n\\r\\n  function approve(address _spender, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.approve(_spender, _value);\\r\\n  }\\r\\n\\r\\n  function batchTransfer(address[] memory _receivers, uint256 _value) public whenNotPaused returns (bool) {\\r\\n    uint cnt = _receivers.length;\\r\\n    // <yes> <report> ARITHMETIC\\r\\n    uint256 amount = uint256(cnt) * _value;\\r\\n    require(cnt > 0 && cnt <= 20);\\r\\n    require(_value > 0 && balances[msg.sender] >= amount);\\r\\n\\r\\n    balances[msg.sender] = balances[msg.sender].sub(amount);\\r\\n    for (uint i = 0; i < cnt; i++) {\\r\\n        balances[_receivers[i]] = balances[_receivers[i]].add(_value);\\r\\n        emit Transfer(msg.sender, _receivers[i], _value);\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Bec Token\\r\\n *\\r\\n * @dev Implementation of Bec Token based on the basic standard token.\\r\\n */\\r\\ncontract BecToken is PausableToken {\\r\\n    /**\\r\\n    * Public variables of the token\\r\\n    * The following variables are OPTIONAL vanities. One does not have to include them.\\r\\n    * They allow one to customise the token contract & in no way influences the core functionality.\\r\\n    * Some wallets/interfaces might not even bother to look at this information.\\r\\n    */\\r\\n    string public name = \\\"BeautyChain\\\";\\r\\n    string public symbol = \\\"BEC\\\";\\r\\n    string public version = '1.0.0';\\r\\n    uint8 public decimals = 18;\\r\\n\\r\\n    /**\\r\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n     */\\r\\n    constructor() {\\r\\n      totalSupply = 7000000000 * (10**(uint256(decimals)));\\r\\n      balances[msg.sender] = totalSupply;    // Give the creator all initial tokens\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2716ae512257148b716c05f5e0d13034bae47d0c26ba0381f7241b1776c8fff0\",\"license\":\"UNLICENSED\"}},\"version\":1}"},"ERC20":{"evm":{"deployedBytecode":{"object":"","opcodes":"","sourceMap":""}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"see https://github.com/ethereum/EIPs/issues/20\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ERC20 interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BecToken.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BecToken.sol\":{\"content\":\"/*\\r\\n * @source: https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-101#bectokensol\\r\\n * Upgraded from Solidity 0.4 to 0.8, vulnerability may no longer exist\\r\\n * @author: -\\r\\n * @vulnerable_at_lines: 268\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n * @dev Math operations with safety checks that throw on error\\r\\n */\\r\\nlibrary SafeMath {\\r\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a * b;\\r\\n    require(a == 0 || c / a == b);\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    // require(b > 0); // Solidity automatically throws when dividing by 0\\r\\n    uint256 c = a / b;\\r\\n    // require(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    require(b <= a);\\r\\n    return a - b;\\r\\n  }\\r\\n\\r\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a + b;\\r\\n    require(c >= a);\\r\\n    return c;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20Basic\\r\\n * @dev Simpler version of ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/179\\r\\n */\\r\\nabstract contract ERC20Basic {\\r\\n  uint256 public totalSupply;\\r\\n  function balanceOf(address who) public view virtual returns (uint256);\\r\\n  function transfer(address to, uint256 value) public virtual returns (bool);\\r\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Basic token\\r\\n * @dev Basic version of StandardToken, with no allowances.\\r\\n */\\r\\ncontract BasicToken is ERC20Basic {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping(address => uint256) balances;\\r\\n\\r\\n  /**\\r\\n  * @dev transfer token for a specified address\\r\\n  * @param _to The address to transfer to.\\r\\n  * @param _value The amount to be transferred.\\r\\n  */\\r\\n  function transfer(address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[msg.sender]);\\r\\n\\r\\n    // SafeMath.sub will throw if there is not enough balance.\\r\\n    balances[msg.sender] = balances[msg.sender].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    emit Transfer(msg.sender, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev Gets the balance of the specified address.\\r\\n  * @param _owner The address to query the the balance of.\\r\\n  * @return balance An uint256 representing the amount owned by the passed address.\\r\\n  */\\r\\n  function balanceOf(address _owner) public view override returns (uint256 balance) {\\r\\n    return balances[_owner];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\r\\n */\\r\\nabstract contract ERC20 is ERC20Basic {\\r\\n  function allowance(address owner, address spender) public view virtual returns (uint256);\\r\\n  function transferFrom(address from, address to, uint256 value) public virtual returns (bool);\\r\\n  function approve(address spender, uint256 value) public virtual returns (bool);\\r\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * @title Standard ERC20 token\\r\\n *\\r\\n * @dev Implementation of the basic standard token.\\r\\n * @dev https://github.com/ethereum/EIPs/issues/20\\r\\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\r\\n */\\r\\ncontract StandardToken is ERC20, BasicToken {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping (address => mapping (address => uint256)) internal allowed;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Transfer tokens from one address to another\\r\\n   * @param _from address The address which you want to send tokens from\\r\\n   * @param _to address The address which you want to transfer to\\r\\n   * @param _value uint256 the amount of tokens to be transferred\\r\\n   */\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[_from]);\\r\\n    require(_value <= allowed[_from][msg.sender]);\\r\\n\\r\\n    balances[_from] = balances[_from].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\\r\\n    emit Transfer(_from, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r\\n   *\\r\\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\\r\\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r\\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n   * @param _spender The address which will spend the funds.\\r\\n   * @param _value The amount of tokens to be spent.\\r\\n   */\\r\\n  function approve(address _spender, uint256 _value) public override virtual returns (bool) {\\r\\n    allowed[msg.sender][_spender] = _value;\\r\\n    emit Approval(msg.sender, _spender, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n   * @param _owner address The address which owns the funds.\\r\\n   * @param _spender address The address which will spend the funds.\\r\\n   * @return remaining A uint256 specifying the amount of tokens still available for the spender.\\r\\n   */\\r\\n  function allowance(address _owner, address _spender) public view override returns (uint256 remaining) {\\r\\n    return allowed[_owner][_spender];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Ownable\\r\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\r\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\r\\n */\\r\\ncontract Ownable {\\r\\n  address public owner;\\r\\n\\r\\n\\r\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\r\\n   * account.\\r\\n   */\\r\\n  constructor() {\\r\\n    owner = msg.sender;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Throws if called by any account other than the owner.\\r\\n   */\\r\\n  modifier onlyOwner() {\\r\\n    require(msg.sender == owner);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\r\\n   * @param newOwner The address to transfer ownership to.\\r\\n   */\\r\\n  function transferOwnership(address newOwner) onlyOwner public {\\r\\n    require(newOwner != address(0));\\r\\n    emit OwnershipTransferred(owner, newOwner);\\r\\n    owner = newOwner;\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable\\r\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\r\\n */\\r\\ncontract Pausable is Ownable {\\r\\n  event Pause();\\r\\n  event Unpause();\\r\\n\\r\\n  bool public paused = false;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\r\\n   */\\r\\n  modifier whenNotPaused() {\\r\\n    require(!paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is paused.\\r\\n   */\\r\\n  modifier whenPaused() {\\r\\n    require(paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to pause, triggers stopped state\\r\\n   */\\r\\n  function pause() onlyOwner whenNotPaused public {\\r\\n    paused = true;\\r\\n    emit Pause();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to unpause, returns to normal state\\r\\n   */\\r\\n  function unpause() onlyOwner whenPaused public {\\r\\n    paused = false;\\r\\n    emit Unpause();\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable token\\r\\n *\\r\\n * @dev StandardToken modified with pausable transfers.\\r\\n **/\\r\\n\\r\\ncontract PausableToken is StandardToken, Pausable {\\r\\n  using SafeMath for uint256;\\r\\n  \\r\\n  function transfer(address _to, uint256 _value) public whenNotPaused override(BasicToken,ERC20Basic) returns (bool) {\\r\\n    return super.transfer(_to, _value);\\r\\n  }\\r\\n\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.transferFrom(_from, _to, _value);\\r\\n  }\\r\\n\\r\\n  function approve(address _spender, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.approve(_spender, _value);\\r\\n  }\\r\\n\\r\\n  function batchTransfer(address[] memory _receivers, uint256 _value) public whenNotPaused returns (bool) {\\r\\n    uint cnt = _receivers.length;\\r\\n    // <yes> <report> ARITHMETIC\\r\\n    uint256 amount = uint256(cnt) * _value;\\r\\n    require(cnt > 0 && cnt <= 20);\\r\\n    require(_value > 0 && balances[msg.sender] >= amount);\\r\\n\\r\\n    balances[msg.sender] = balances[msg.sender].sub(amount);\\r\\n    for (uint i = 0; i < cnt; i++) {\\r\\n        balances[_receivers[i]] = balances[_receivers[i]].add(_value);\\r\\n        emit Transfer(msg.sender, _receivers[i], _value);\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Bec Token\\r\\n *\\r\\n * @dev Implementation of Bec Token based on the basic standard token.\\r\\n */\\r\\ncontract BecToken is PausableToken {\\r\\n    /**\\r\\n    * Public variables of the token\\r\\n    * The following variables are OPTIONAL vanities. One does not have to include them.\\r\\n    * They allow one to customise the token contract & in no way influences the core functionality.\\r\\n    * Some wallets/interfaces might not even bother to look at this information.\\r\\n    */\\r\\n    string public name = \\\"BeautyChain\\\";\\r\\n    string public symbol = \\\"BEC\\\";\\r\\n    string public version = '1.0.0';\\r\\n    uint8 public decimals = 18;\\r\\n\\r\\n    /**\\r\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n     */\\r\\n    constructor() {\\r\\n      totalSupply = 7000000000 * (10**(uint256(decimals)));\\r\\n      balances[msg.sender] = totalSupply;    // Give the creator all initial tokens\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2716ae512257148b716c05f5e0d13034bae47d0c26ba0381f7241b1776c8fff0\",\"license\":\"UNLICENSED\"}},\"version\":1}"},"ERC20Basic":{"evm":{"deployedBytecode":{"object":"","opcodes":"","sourceMap":""}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Simpler version of ERC20 interfacesee https://github.com/ethereum/EIPs/issues/179\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ERC20Basic\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BecToken.sol\":\"ERC20Basic\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BecToken.sol\":{\"content\":\"/*\\r\\n * @source: https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-101#bectokensol\\r\\n * Upgraded from Solidity 0.4 to 0.8, vulnerability may no longer exist\\r\\n * @author: -\\r\\n * @vulnerable_at_lines: 268\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n * @dev Math operations with safety checks that throw on error\\r\\n */\\r\\nlibrary SafeMath {\\r\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a * b;\\r\\n    require(a == 0 || c / a == b);\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    // require(b > 0); // Solidity automatically throws when dividing by 0\\r\\n    uint256 c = a / b;\\r\\n    // require(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    require(b <= a);\\r\\n    return a - b;\\r\\n  }\\r\\n\\r\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a + b;\\r\\n    require(c >= a);\\r\\n    return c;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20Basic\\r\\n * @dev Simpler version of ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/179\\r\\n */\\r\\nabstract contract ERC20Basic {\\r\\n  uint256 public totalSupply;\\r\\n  function balanceOf(address who) public view virtual returns (uint256);\\r\\n  function transfer(address to, uint256 value) public virtual returns (bool);\\r\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Basic token\\r\\n * @dev Basic version of StandardToken, with no allowances.\\r\\n */\\r\\ncontract BasicToken is ERC20Basic {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping(address => uint256) balances;\\r\\n\\r\\n  /**\\r\\n  * @dev transfer token for a specified address\\r\\n  * @param _to The address to transfer to.\\r\\n  * @param _value The amount to be transferred.\\r\\n  */\\r\\n  function transfer(address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[msg.sender]);\\r\\n\\r\\n    // SafeMath.sub will throw if there is not enough balance.\\r\\n    balances[msg.sender] = balances[msg.sender].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    emit Transfer(msg.sender, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev Gets the balance of the specified address.\\r\\n  * @param _owner The address to query the the balance of.\\r\\n  * @return balance An uint256 representing the amount owned by the passed address.\\r\\n  */\\r\\n  function balanceOf(address _owner) public view override returns (uint256 balance) {\\r\\n    return balances[_owner];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\r\\n */\\r\\nabstract contract ERC20 is ERC20Basic {\\r\\n  function allowance(address owner, address spender) public view virtual returns (uint256);\\r\\n  function transferFrom(address from, address to, uint256 value) public virtual returns (bool);\\r\\n  function approve(address spender, uint256 value) public virtual returns (bool);\\r\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * @title Standard ERC20 token\\r\\n *\\r\\n * @dev Implementation of the basic standard token.\\r\\n * @dev https://github.com/ethereum/EIPs/issues/20\\r\\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\r\\n */\\r\\ncontract StandardToken is ERC20, BasicToken {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping (address => mapping (address => uint256)) internal allowed;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Transfer tokens from one address to another\\r\\n   * @param _from address The address which you want to send tokens from\\r\\n   * @param _to address The address which you want to transfer to\\r\\n   * @param _value uint256 the amount of tokens to be transferred\\r\\n   */\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[_from]);\\r\\n    require(_value <= allowed[_from][msg.sender]);\\r\\n\\r\\n    balances[_from] = balances[_from].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\\r\\n    emit Transfer(_from, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r\\n   *\\r\\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\\r\\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r\\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n   * @param _spender The address which will spend the funds.\\r\\n   * @param _value The amount of tokens to be spent.\\r\\n   */\\r\\n  function approve(address _spender, uint256 _value) public override virtual returns (bool) {\\r\\n    allowed[msg.sender][_spender] = _value;\\r\\n    emit Approval(msg.sender, _spender, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n   * @param _owner address The address which owns the funds.\\r\\n   * @param _spender address The address which will spend the funds.\\r\\n   * @return remaining A uint256 specifying the amount of tokens still available for the spender.\\r\\n   */\\r\\n  function allowance(address _owner, address _spender) public view override returns (uint256 remaining) {\\r\\n    return allowed[_owner][_spender];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Ownable\\r\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\r\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\r\\n */\\r\\ncontract Ownable {\\r\\n  address public owner;\\r\\n\\r\\n\\r\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\r\\n   * account.\\r\\n   */\\r\\n  constructor() {\\r\\n    owner = msg.sender;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Throws if called by any account other than the owner.\\r\\n   */\\r\\n  modifier onlyOwner() {\\r\\n    require(msg.sender == owner);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\r\\n   * @param newOwner The address to transfer ownership to.\\r\\n   */\\r\\n  function transferOwnership(address newOwner) onlyOwner public {\\r\\n    require(newOwner != address(0));\\r\\n    emit OwnershipTransferred(owner, newOwner);\\r\\n    owner = newOwner;\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable\\r\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\r\\n */\\r\\ncontract Pausable is Ownable {\\r\\n  event Pause();\\r\\n  event Unpause();\\r\\n\\r\\n  bool public paused = false;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\r\\n   */\\r\\n  modifier whenNotPaused() {\\r\\n    require(!paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is paused.\\r\\n   */\\r\\n  modifier whenPaused() {\\r\\n    require(paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to pause, triggers stopped state\\r\\n   */\\r\\n  function pause() onlyOwner whenNotPaused public {\\r\\n    paused = true;\\r\\n    emit Pause();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to unpause, returns to normal state\\r\\n   */\\r\\n  function unpause() onlyOwner whenPaused public {\\r\\n    paused = false;\\r\\n    emit Unpause();\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable token\\r\\n *\\r\\n * @dev StandardToken modified with pausable transfers.\\r\\n **/\\r\\n\\r\\ncontract PausableToken is StandardToken, Pausable {\\r\\n  using SafeMath for uint256;\\r\\n  \\r\\n  function transfer(address _to, uint256 _value) public whenNotPaused override(BasicToken,ERC20Basic) returns (bool) {\\r\\n    return super.transfer(_to, _value);\\r\\n  }\\r\\n\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.transferFrom(_from, _to, _value);\\r\\n  }\\r\\n\\r\\n  function approve(address _spender, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.approve(_spender, _value);\\r\\n  }\\r\\n\\r\\n  function batchTransfer(address[] memory _receivers, uint256 _value) public whenNotPaused returns (bool) {\\r\\n    uint cnt = _receivers.length;\\r\\n    // <yes> <report> ARITHMETIC\\r\\n    uint256 amount = uint256(cnt) * _value;\\r\\n    require(cnt > 0 && cnt <= 20);\\r\\n    require(_value > 0 && balances[msg.sender] >= amount);\\r\\n\\r\\n    balances[msg.sender] = balances[msg.sender].sub(amount);\\r\\n    for (uint i = 0; i < cnt; i++) {\\r\\n        balances[_receivers[i]] = balances[_receivers[i]].add(_value);\\r\\n        emit Transfer(msg.sender, _receivers[i], _value);\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Bec Token\\r\\n *\\r\\n * @dev Implementation of Bec Token based on the basic standard token.\\r\\n */\\r\\ncontract BecToken is PausableToken {\\r\\n    /**\\r\\n    * Public variables of the token\\r\\n    * The following variables are OPTIONAL vanities. One does not have to include them.\\r\\n    * They allow one to customise the token contract & in no way influences the core functionality.\\r\\n    * Some wallets/interfaces might not even bother to look at this information.\\r\\n    */\\r\\n    string public name = \\\"BeautyChain\\\";\\r\\n    string public symbol = \\\"BEC\\\";\\r\\n    string public version = '1.0.0';\\r\\n    uint8 public decimals = 18;\\r\\n\\r\\n    /**\\r\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n     */\\r\\n    constructor() {\\r\\n      totalSupply = 7000000000 * (10**(uint256(decimals)));\\r\\n      balances[msg.sender] = totalSupply;    // Give the creator all initial tokens\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2716ae512257148b716c05f5e0d13034bae47d0c26ba0381f7241b1776c8fff0\",\"license\":\"UNLICENSED\"}},\"version\":1}"},"Ownable":{"evm":{"deployedBytecode":{"object":"608060405234801561000f575f80fd5b5060043610610034575f3560e01c80638da5cb5b14610038578063f2fde38b14610056575b5f80fd5b610040610072565b60405161004d919061021c565b60405180910390f35b610070600480360381019061006b9190610263565b610095565b005b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100eb575f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610122575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610206826101dd565b9050919050565b610216816101fc565b82525050565b5f60208201905061022f5f83018461020d565b92915050565b5f80fd5b610242816101fc565b811461024c575f80fd5b50565b5f8135905061025d81610239565b92915050565b5f6020828403121561027857610277610235565b5b5f6102858482850161024f565b9150509291505056fea2646970667358221220a8873ddb2ee06a159faea2a586d673b3ff2c698df94eef420f056852e72501df64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B SWAP2 SWAP1 PUSH2 0x263 JUMP JUMPDEST PUSH2 0x95 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x122 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x206 DUP3 PUSH2 0x1DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x216 DUP2 PUSH2 0x1FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22F PUSH0 DUP4 ADD DUP5 PUSH2 0x20D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x242 DUP2 PUSH2 0x1FC JUMP JUMPDEST DUP2 EQ PUSH2 0x24C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25D DUP2 PUSH2 0x239 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x278 JUMPI PUSH2 0x277 PUSH2 0x235 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x285 DUP5 DUP3 DUP6 ADD PUSH2 0x24F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 DUP8 RETURNDATASIZE 0xDB 0x2E 0xE0 PUSH11 0x159FAEA2A586D673B3FF2C PUSH10 0x8DF94EEF420F056852E7 0x25 ADD 0xDF PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"5875:817:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5897:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6509:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5897:20;;;;;;;;;;;;:::o;6509:178::-;6320:5;;;;;;;;;;6306:19;;:10;:19;;;6298:28;;;;;;6606:1:::1;6586:22;;:8;:22;;::::0;6578:31:::1;;;::::0;::::1;;6649:8;6621:37;;6642:5;::::0;::::1;;;;;;;;6621:37;;;;;;;;;;;;6673:8;6665:5;::::0;:16:::1;;;;;;;;;;;;;;;;;;6509:178:::0;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The Ownable contract has an owner address, and provides basic authorization control functions, this simplifies the implementation of \\\"user permissions\\\".\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"The Ownable constructor sets the original `owner` of the contract to the sender account.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Ownable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BecToken.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BecToken.sol\":{\"content\":\"/*\\r\\n * @source: https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-101#bectokensol\\r\\n * Upgraded from Solidity 0.4 to 0.8, vulnerability may no longer exist\\r\\n * @author: -\\r\\n * @vulnerable_at_lines: 268\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n * @dev Math operations with safety checks that throw on error\\r\\n */\\r\\nlibrary SafeMath {\\r\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a * b;\\r\\n    require(a == 0 || c / a == b);\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    // require(b > 0); // Solidity automatically throws when dividing by 0\\r\\n    uint256 c = a / b;\\r\\n    // require(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    require(b <= a);\\r\\n    return a - b;\\r\\n  }\\r\\n\\r\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a + b;\\r\\n    require(c >= a);\\r\\n    return c;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20Basic\\r\\n * @dev Simpler version of ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/179\\r\\n */\\r\\nabstract contract ERC20Basic {\\r\\n  uint256 public totalSupply;\\r\\n  function balanceOf(address who) public view virtual returns (uint256);\\r\\n  function transfer(address to, uint256 value) public virtual returns (bool);\\r\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Basic token\\r\\n * @dev Basic version of StandardToken, with no allowances.\\r\\n */\\r\\ncontract BasicToken is ERC20Basic {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping(address => uint256) balances;\\r\\n\\r\\n  /**\\r\\n  * @dev transfer token for a specified address\\r\\n  * @param _to The address to transfer to.\\r\\n  * @param _value The amount to be transferred.\\r\\n  */\\r\\n  function transfer(address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[msg.sender]);\\r\\n\\r\\n    // SafeMath.sub will throw if there is not enough balance.\\r\\n    balances[msg.sender] = balances[msg.sender].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    emit Transfer(msg.sender, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev Gets the balance of the specified address.\\r\\n  * @param _owner The address to query the the balance of.\\r\\n  * @return balance An uint256 representing the amount owned by the passed address.\\r\\n  */\\r\\n  function balanceOf(address _owner) public view override returns (uint256 balance) {\\r\\n    return balances[_owner];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\r\\n */\\r\\nabstract contract ERC20 is ERC20Basic {\\r\\n  function allowance(address owner, address spender) public view virtual returns (uint256);\\r\\n  function transferFrom(address from, address to, uint256 value) public virtual returns (bool);\\r\\n  function approve(address spender, uint256 value) public virtual returns (bool);\\r\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * @title Standard ERC20 token\\r\\n *\\r\\n * @dev Implementation of the basic standard token.\\r\\n * @dev https://github.com/ethereum/EIPs/issues/20\\r\\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\r\\n */\\r\\ncontract StandardToken is ERC20, BasicToken {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping (address => mapping (address => uint256)) internal allowed;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Transfer tokens from one address to another\\r\\n   * @param _from address The address which you want to send tokens from\\r\\n   * @param _to address The address which you want to transfer to\\r\\n   * @param _value uint256 the amount of tokens to be transferred\\r\\n   */\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[_from]);\\r\\n    require(_value <= allowed[_from][msg.sender]);\\r\\n\\r\\n    balances[_from] = balances[_from].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\\r\\n    emit Transfer(_from, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r\\n   *\\r\\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\\r\\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r\\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n   * @param _spender The address which will spend the funds.\\r\\n   * @param _value The amount of tokens to be spent.\\r\\n   */\\r\\n  function approve(address _spender, uint256 _value) public override virtual returns (bool) {\\r\\n    allowed[msg.sender][_spender] = _value;\\r\\n    emit Approval(msg.sender, _spender, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n   * @param _owner address The address which owns the funds.\\r\\n   * @param _spender address The address which will spend the funds.\\r\\n   * @return remaining A uint256 specifying the amount of tokens still available for the spender.\\r\\n   */\\r\\n  function allowance(address _owner, address _spender) public view override returns (uint256 remaining) {\\r\\n    return allowed[_owner][_spender];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Ownable\\r\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\r\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\r\\n */\\r\\ncontract Ownable {\\r\\n  address public owner;\\r\\n\\r\\n\\r\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\r\\n   * account.\\r\\n   */\\r\\n  constructor() {\\r\\n    owner = msg.sender;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Throws if called by any account other than the owner.\\r\\n   */\\r\\n  modifier onlyOwner() {\\r\\n    require(msg.sender == owner);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\r\\n   * @param newOwner The address to transfer ownership to.\\r\\n   */\\r\\n  function transferOwnership(address newOwner) onlyOwner public {\\r\\n    require(newOwner != address(0));\\r\\n    emit OwnershipTransferred(owner, newOwner);\\r\\n    owner = newOwner;\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable\\r\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\r\\n */\\r\\ncontract Pausable is Ownable {\\r\\n  event Pause();\\r\\n  event Unpause();\\r\\n\\r\\n  bool public paused = false;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\r\\n   */\\r\\n  modifier whenNotPaused() {\\r\\n    require(!paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is paused.\\r\\n   */\\r\\n  modifier whenPaused() {\\r\\n    require(paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to pause, triggers stopped state\\r\\n   */\\r\\n  function pause() onlyOwner whenNotPaused public {\\r\\n    paused = true;\\r\\n    emit Pause();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to unpause, returns to normal state\\r\\n   */\\r\\n  function unpause() onlyOwner whenPaused public {\\r\\n    paused = false;\\r\\n    emit Unpause();\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable token\\r\\n *\\r\\n * @dev StandardToken modified with pausable transfers.\\r\\n **/\\r\\n\\r\\ncontract PausableToken is StandardToken, Pausable {\\r\\n  using SafeMath for uint256;\\r\\n  \\r\\n  function transfer(address _to, uint256 _value) public whenNotPaused override(BasicToken,ERC20Basic) returns (bool) {\\r\\n    return super.transfer(_to, _value);\\r\\n  }\\r\\n\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.transferFrom(_from, _to, _value);\\r\\n  }\\r\\n\\r\\n  function approve(address _spender, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.approve(_spender, _value);\\r\\n  }\\r\\n\\r\\n  function batchTransfer(address[] memory _receivers, uint256 _value) public whenNotPaused returns (bool) {\\r\\n    uint cnt = _receivers.length;\\r\\n    // <yes> <report> ARITHMETIC\\r\\n    uint256 amount = uint256(cnt) * _value;\\r\\n    require(cnt > 0 && cnt <= 20);\\r\\n    require(_value > 0 && balances[msg.sender] >= amount);\\r\\n\\r\\n    balances[msg.sender] = balances[msg.sender].sub(amount);\\r\\n    for (uint i = 0; i < cnt; i++) {\\r\\n        balances[_receivers[i]] = balances[_receivers[i]].add(_value);\\r\\n        emit Transfer(msg.sender, _receivers[i], _value);\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Bec Token\\r\\n *\\r\\n * @dev Implementation of Bec Token based on the basic standard token.\\r\\n */\\r\\ncontract BecToken is PausableToken {\\r\\n    /**\\r\\n    * Public variables of the token\\r\\n    * The following variables are OPTIONAL vanities. One does not have to include them.\\r\\n    * They allow one to customise the token contract & in no way influences the core functionality.\\r\\n    * Some wallets/interfaces might not even bother to look at this information.\\r\\n    */\\r\\n    string public name = \\\"BeautyChain\\\";\\r\\n    string public symbol = \\\"BEC\\\";\\r\\n    string public version = '1.0.0';\\r\\n    uint8 public decimals = 18;\\r\\n\\r\\n    /**\\r\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n     */\\r\\n    constructor() {\\r\\n      totalSupply = 7000000000 * (10**(uint256(decimals)));\\r\\n      balances[msg.sender] = totalSupply;    // Give the creator all initial tokens\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2716ae512257148b716c05f5e0d13034bae47d0c26ba0381f7241b1776c8fff0\",\"license\":\"UNLICENSED\"}},\"version\":1}"},"Pausable":{"evm":{"deployedBytecode":{"object":"608060405234801561000f575f80fd5b5060043610610055575f3560e01c80633f4ba83a146100595780635c975abb146100635780638456cb59146100815780638da5cb5b1461008b578063f2fde38b146100a9575b5f80fd5b6100616100c5565b005b61006b610179565b60405161007891906103c6565b60405180910390f35b61008961018b565b005b610093610241565b6040516100a0919061041e565b60405180910390f35b6100c360048036038101906100be9190610465565b610264565b005b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011b575f80fd5b5f60149054906101000a900460ff16610132575f80fd5b5f8060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b5f60149054906101000a900460ff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101e1575f80fd5b5f60149054906101000a900460ff16156101f9575f80fd5b60015f60146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ba575f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102f1575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f8115159050919050565b6103c0816103ac565b82525050565b5f6020820190506103d95f8301846103b7565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610408826103df565b9050919050565b610418816103fe565b82525050565b5f6020820190506104315f83018461040f565b92915050565b5f80fd5b610444816103fe565b811461044e575f80fd5b50565b5f8135905061045f8161043b565b92915050565b5f6020828403121561047a57610479610437565b5b5f61048784828501610451565b9150509291505056fea26469706673582212203f7067e1f4ac8e0c302a3d62badd8329addef84220dfabbb5b3a526d0192575164736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0xC5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B PUSH2 0x179 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0x18B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x93 PUSH2 0x241 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x465 JUMP JUMPDEST PUSH2 0x264 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x132 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2BA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C0 DUP2 PUSH2 0x3AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D9 PUSH0 DUP4 ADD DUP5 PUSH2 0x3B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x408 DUP3 PUSH2 0x3DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x418 DUP2 PUSH2 0x3FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x431 PUSH0 DUP4 ADD DUP5 PUSH2 0x40F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x444 DUP2 PUSH2 0x3FE JUMP JUMPDEST DUP2 EQ PUSH2 0x44E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x45F DUP2 PUSH2 0x43B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x47A JUMPI PUSH2 0x479 PUSH2 0x437 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x487 DUP5 DUP3 DUP6 ADD PUSH2 0x451 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH PUSH17 0x67E1F4AC8E0C302A3D62BADD8329ADDEF8 TIMESTAMP KECCAK256 0xDF 0xAB 0xBB JUMPDEST GASPRICE MSTORE PUSH14 0x192575164736F6C634300081800 CALLER ","sourceMap":"6813:793:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7508:95;;;:::i;:::-;;6887:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7328:93;;;:::i;:::-;;5897:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6509:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7508:95;6320:5;;;;;;;;;;6306:19;;:10;:19;;;6298:28;;;;;;7223:6:::1;;;;;;;;;;;7215:15;;;::::0;::::1;;7571:5:::2;7562:6:::0;::::2;:14;;;;;;;;;;;;;;;;;;7588:9;;;;;;;;;;7508:95::o:0;6887:26::-;;;;;;;;;;;;;:::o;7328:93::-;6320:5;;;;;;;;;;6306:19;;:10;:19;;;6298:28;;;;;;7063:6:::1;;;;;;;;;;;7062:7;7054:16;;;::::0;::::1;;7392:4:::2;7383:6;;:13;;;;;;;;;;;;;;;;;;7408:7;;;;;;;;;;7328:93::o:0;5897:20::-;;;;;;;;;;;;:::o;6509:178::-;6320:5;;;;;;;;;;6306:19;;:10;:19;;;6298:28;;;;;;6606:1:::1;6586:22;;:8;:22;;::::0;6578:31:::1;;;::::0;::::1;;6649:8;6621:37;;6642:5;::::0;::::1;;;;;;;;6621:37;;;;;;;;;;;;6673:8;6665:5;::::0;:16:::1;;;;;;;;;;;;;;;;;;6509:178:::0;:::o;7:90:1:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;434:126::-;471:7;511:42;504:5;500:54;489:65;;434:126;;;:::o;566:96::-;603:7;632:24;650:5;632:24;:::i;:::-;621:35;;566:96;;;:::o;668:118::-;755:24;773:5;755:24;:::i;:::-;750:3;743:37;668:118;;:::o;792:222::-;885:4;923:2;912:9;908:18;900:26;;936:71;1004:1;993:9;989:17;980:6;936:71;:::i;:::-;792:222;;;;:::o;1101:117::-;1210:1;1207;1200:12;1347:122;1420:24;1438:5;1420:24;:::i;:::-;1413:5;1410:35;1400:63;;1459:1;1456;1449:12;1400:63;1347:122;:::o;1475:139::-;1521:5;1559:6;1546:20;1537:29;;1575:33;1602:5;1575:33;:::i;:::-;1475:139;;;;:::o;1620:329::-;1679:6;1728:2;1716:9;1707:7;1703:23;1699:32;1696:119;;;1734:79;;:::i;:::-;1696:119;1854:1;1879:53;1924:7;1915:6;1904:9;1900:22;1879:53;:::i;:::-;1869:63;;1825:117;1620:329;;;;:::o"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Base contract which allows children to implement an emergency stop mechanism.\",\"kind\":\"dev\",\"methods\":{\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}},\"title\":\"Pausable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BecToken.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BecToken.sol\":{\"content\":\"/*\\r\\n * @source: https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-101#bectokensol\\r\\n * Upgraded from Solidity 0.4 to 0.8, vulnerability may no longer exist\\r\\n * @author: -\\r\\n * @vulnerable_at_lines: 268\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n * @dev Math operations with safety checks that throw on error\\r\\n */\\r\\nlibrary SafeMath {\\r\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a * b;\\r\\n    require(a == 0 || c / a == b);\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    // require(b > 0); // Solidity automatically throws when dividing by 0\\r\\n    uint256 c = a / b;\\r\\n    // require(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    require(b <= a);\\r\\n    return a - b;\\r\\n  }\\r\\n\\r\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a + b;\\r\\n    require(c >= a);\\r\\n    return c;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20Basic\\r\\n * @dev Simpler version of ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/179\\r\\n */\\r\\nabstract contract ERC20Basic {\\r\\n  uint256 public totalSupply;\\r\\n  function balanceOf(address who) public view virtual returns (uint256);\\r\\n  function transfer(address to, uint256 value) public virtual returns (bool);\\r\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Basic token\\r\\n * @dev Basic version of StandardToken, with no allowances.\\r\\n */\\r\\ncontract BasicToken is ERC20Basic {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping(address => uint256) balances;\\r\\n\\r\\n  /**\\r\\n  * @dev transfer token for a specified address\\r\\n  * @param _to The address to transfer to.\\r\\n  * @param _value The amount to be transferred.\\r\\n  */\\r\\n  function transfer(address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[msg.sender]);\\r\\n\\r\\n    // SafeMath.sub will throw if there is not enough balance.\\r\\n    balances[msg.sender] = balances[msg.sender].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    emit Transfer(msg.sender, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev Gets the balance of the specified address.\\r\\n  * @param _owner The address to query the the balance of.\\r\\n  * @return balance An uint256 representing the amount owned by the passed address.\\r\\n  */\\r\\n  function balanceOf(address _owner) public view override returns (uint256 balance) {\\r\\n    return balances[_owner];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\r\\n */\\r\\nabstract contract ERC20 is ERC20Basic {\\r\\n  function allowance(address owner, address spender) public view virtual returns (uint256);\\r\\n  function transferFrom(address from, address to, uint256 value) public virtual returns (bool);\\r\\n  function approve(address spender, uint256 value) public virtual returns (bool);\\r\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * @title Standard ERC20 token\\r\\n *\\r\\n * @dev Implementation of the basic standard token.\\r\\n * @dev https://github.com/ethereum/EIPs/issues/20\\r\\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\r\\n */\\r\\ncontract StandardToken is ERC20, BasicToken {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping (address => mapping (address => uint256)) internal allowed;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Transfer tokens from one address to another\\r\\n   * @param _from address The address which you want to send tokens from\\r\\n   * @param _to address The address which you want to transfer to\\r\\n   * @param _value uint256 the amount of tokens to be transferred\\r\\n   */\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[_from]);\\r\\n    require(_value <= allowed[_from][msg.sender]);\\r\\n\\r\\n    balances[_from] = balances[_from].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\\r\\n    emit Transfer(_from, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r\\n   *\\r\\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\\r\\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r\\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n   * @param _spender The address which will spend the funds.\\r\\n   * @param _value The amount of tokens to be spent.\\r\\n   */\\r\\n  function approve(address _spender, uint256 _value) public override virtual returns (bool) {\\r\\n    allowed[msg.sender][_spender] = _value;\\r\\n    emit Approval(msg.sender, _spender, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n   * @param _owner address The address which owns the funds.\\r\\n   * @param _spender address The address which will spend the funds.\\r\\n   * @return remaining A uint256 specifying the amount of tokens still available for the spender.\\r\\n   */\\r\\n  function allowance(address _owner, address _spender) public view override returns (uint256 remaining) {\\r\\n    return allowed[_owner][_spender];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Ownable\\r\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\r\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\r\\n */\\r\\ncontract Ownable {\\r\\n  address public owner;\\r\\n\\r\\n\\r\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\r\\n   * account.\\r\\n   */\\r\\n  constructor() {\\r\\n    owner = msg.sender;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Throws if called by any account other than the owner.\\r\\n   */\\r\\n  modifier onlyOwner() {\\r\\n    require(msg.sender == owner);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\r\\n   * @param newOwner The address to transfer ownership to.\\r\\n   */\\r\\n  function transferOwnership(address newOwner) onlyOwner public {\\r\\n    require(newOwner != address(0));\\r\\n    emit OwnershipTransferred(owner, newOwner);\\r\\n    owner = newOwner;\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable\\r\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\r\\n */\\r\\ncontract Pausable is Ownable {\\r\\n  event Pause();\\r\\n  event Unpause();\\r\\n\\r\\n  bool public paused = false;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\r\\n   */\\r\\n  modifier whenNotPaused() {\\r\\n    require(!paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is paused.\\r\\n   */\\r\\n  modifier whenPaused() {\\r\\n    require(paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to pause, triggers stopped state\\r\\n   */\\r\\n  function pause() onlyOwner whenNotPaused public {\\r\\n    paused = true;\\r\\n    emit Pause();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to unpause, returns to normal state\\r\\n   */\\r\\n  function unpause() onlyOwner whenPaused public {\\r\\n    paused = false;\\r\\n    emit Unpause();\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable token\\r\\n *\\r\\n * @dev StandardToken modified with pausable transfers.\\r\\n **/\\r\\n\\r\\ncontract PausableToken is StandardToken, Pausable {\\r\\n  using SafeMath for uint256;\\r\\n  \\r\\n  function transfer(address _to, uint256 _value) public whenNotPaused override(BasicToken,ERC20Basic) returns (bool) {\\r\\n    return super.transfer(_to, _value);\\r\\n  }\\r\\n\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.transferFrom(_from, _to, _value);\\r\\n  }\\r\\n\\r\\n  function approve(address _spender, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.approve(_spender, _value);\\r\\n  }\\r\\n\\r\\n  function batchTransfer(address[] memory _receivers, uint256 _value) public whenNotPaused returns (bool) {\\r\\n    uint cnt = _receivers.length;\\r\\n    // <yes> <report> ARITHMETIC\\r\\n    uint256 amount = uint256(cnt) * _value;\\r\\n    require(cnt > 0 && cnt <= 20);\\r\\n    require(_value > 0 && balances[msg.sender] >= amount);\\r\\n\\r\\n    balances[msg.sender] = balances[msg.sender].sub(amount);\\r\\n    for (uint i = 0; i < cnt; i++) {\\r\\n        balances[_receivers[i]] = balances[_receivers[i]].add(_value);\\r\\n        emit Transfer(msg.sender, _receivers[i], _value);\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Bec Token\\r\\n *\\r\\n * @dev Implementation of Bec Token based on the basic standard token.\\r\\n */\\r\\ncontract BecToken is PausableToken {\\r\\n    /**\\r\\n    * Public variables of the token\\r\\n    * The following variables are OPTIONAL vanities. One does not have to include them.\\r\\n    * They allow one to customise the token contract & in no way influences the core functionality.\\r\\n    * Some wallets/interfaces might not even bother to look at this information.\\r\\n    */\\r\\n    string public name = \\\"BeautyChain\\\";\\r\\n    string public symbol = \\\"BEC\\\";\\r\\n    string public version = '1.0.0';\\r\\n    uint8 public decimals = 18;\\r\\n\\r\\n    /**\\r\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n     */\\r\\n    constructor() {\\r\\n      totalSupply = 7000000000 * (10**(uint256(decimals)));\\r\\n      balances[msg.sender] = totalSupply;    // Give the creator all initial tokens\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2716ae512257148b716c05f5e0d13034bae47d0c26ba0381f7241b1776c8fff0\",\"license\":\"UNLICENSED\"}},\"version\":1}"},"PausableToken":{"evm":{"deployedBytecode":{"object":"608060405234801561000f575f80fd5b50600436106100b2575f3560e01c806383f12fec1161006f57806383f12fec1461018c5780638456cb59146101bc5780638da5cb5b146101c6578063a9059cbb146101e4578063dd62ed3e14610214578063f2fde38b14610244576100b2565b8063095ea7b3146100b657806318160ddd146100e657806323b872dd146101045780633f4ba83a146101345780635c975abb1461013e57806370a082311461015c575b5f80fd5b6100d060048036038101906100cb91906110d5565b610260565b6040516100dd919061112d565b60405180910390f35b6100ee61028c565b6040516100fb9190611155565b60405180910390f35b61011e6004803603810190610119919061116e565b610291565b60405161012b919061112d565b60405180910390f35b61013c6102bf565b005b610146610377565b604051610153919061112d565b60405180910390f35b610176600480360381019061017191906111be565b61038a565b6040516101839190611155565b60405180910390f35b6101a660048036038101906101a19190611339565b6103d0565b6040516101b3919061112d565b60405180910390f35b6101c4610663565b005b6101ce61071d565b6040516101db91906113a2565b60405180910390f35b6101fe60048036038101906101f991906110d5565b610742565b60405161020b919061112d565b60405180910390f35b61022e600480360381019061022991906113bb565b61076e565b60405161023b9190611155565b60405180910390f35b61025e600480360381019061025991906111be565b6107f0565b005b5f600360149054906101000a900460ff161561027a575f80fd5b610284838361093d565b905092915050565b5f5481565b5f600360149054906101000a900460ff16156102ab575f80fd5b6102b6848484610a2a565b90509392505050565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610317575f80fd5b600360149054906101000a900460ff1661032f575f80fd5b5f600360146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600360149054906101000a900460ff1681565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f600360149054906101000a900460ff16156103ea575f80fd5b5f835190505f83826103fc9190611426565b90505f8211801561040e575060148211155b610416575f80fd5b5f8411801561046257508060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410155b61046a575f80fd5b6104ba8160015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610dd390919063ffffffff16565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f5b828110156106565761056f8560015f89858151811061051f5761051e611467565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610df490919063ffffffff16565b60015f88848151811061058557610584611467565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508581815181106105dd576105dc611467565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040516106419190611155565b60405180910390a380806001019150506104fd565b5060019250505092915050565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106bb575f80fd5b600360149054906101000a900460ff16156106d4575f80fd5b6001600360146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f600360149054906101000a900460ff161561075c575f80fd5b6107668383610e1a565b905092915050565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610848575f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361087f575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff1660035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a38060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f8160025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610a189190611155565b60405180910390a36001905092915050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a62575f80fd5b5f82118015610aae575060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548211155b610ab6575f80fd5b60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054821115610b3a575f80fd5b610b8a8260015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610dd390919063ffffffff16565b60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610c1b8260015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610df490919063ffffffff16565b60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610ce78260025f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610dd390919063ffffffff16565b60025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610dc09190611155565b60405180910390a3600190509392505050565b5f82821115610de0575f80fd5b8183610dec9190611494565b905092915050565b5f808284610e0291906114c7565b905083811015610e10575f80fd5b8091505092915050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e52575f80fd5b5f82118015610e9e575060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548211155b610ea6575f80fd5b610ef68260015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610dd390919063ffffffff16565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610f878260015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610df490919063ffffffff16565b60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110259190611155565b60405180910390a36001905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61107182611048565b9050919050565b61108181611067565b811461108b575f80fd5b50565b5f8135905061109c81611078565b92915050565b5f819050919050565b6110b4816110a2565b81146110be575f80fd5b50565b5f813590506110cf816110ab565b92915050565b5f80604083850312156110eb576110ea611040565b5b5f6110f88582860161108e565b9250506020611109858286016110c1565b9150509250929050565b5f8115159050919050565b61112781611113565b82525050565b5f6020820190506111405f83018461111e565b92915050565b61114f816110a2565b82525050565b5f6020820190506111685f830184611146565b92915050565b5f805f6060848603121561118557611184611040565b5b5f6111928682870161108e565b93505060206111a38682870161108e565b92505060406111b4868287016110c1565b9150509250925092565b5f602082840312156111d3576111d2611040565b5b5f6111e08482850161108e565b91505092915050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611233826111ed565b810181811067ffffffffffffffff82111715611252576112516111fd565b5b80604052505050565b5f611264611037565b9050611270828261122a565b919050565b5f67ffffffffffffffff82111561128f5761128e6111fd565b5b602082029050602081019050919050565b5f80fd5b5f6112b66112b184611275565b61125b565b905080838252602082019050602084028301858111156112d9576112d86112a0565b5b835b8181101561130257806112ee888261108e565b8452602084019350506020810190506112db565b5050509392505050565b5f82601f8301126113205761131f6111e9565b5b81356113308482602086016112a4565b91505092915050565b5f806040838503121561134f5761134e611040565b5b5f83013567ffffffffffffffff81111561136c5761136b611044565b5b6113788582860161130c565b9250506020611389858286016110c1565b9150509250929050565b61139c81611067565b82525050565b5f6020820190506113b55f830184611393565b92915050565b5f80604083850312156113d1576113d0611040565b5b5f6113de8582860161108e565b92505060206113ef8582860161108e565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611430826110a2565b915061143b836110a2565b9250828202611449816110a2565b915082820484148315176114605761145f6113f9565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f61149e826110a2565b91506114a9836110a2565b92508282039050818111156114c1576114c06113f9565b5b92915050565b5f6114d1826110a2565b91506114dc836110a2565b92508282019050808211156114f4576114f36113f9565b5b9291505056fea2646970667358221220081b6afb41c6f2b70c0636cc53c9c83ad57258f6032c59bc9135fdcbde47e72664736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83F12FEC GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x83F12FEC EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x244 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x15C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x10D5 JUMP JUMPDEST PUSH2 0x260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x112D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x28C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x116E JUMP JUMPDEST PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x112D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x2BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x146 PUSH2 0x377 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x112D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x176 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x1339 JUMP JUMPDEST PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x112D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x663 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CE PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x10D5 JUMP JUMPDEST PUSH2 0x742 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x112D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x13BB JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x27A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x284 DUP4 DUP4 PUSH2 0x93D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2AB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2B6 DUP5 DUP5 DUP5 PUSH2 0xA2A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x317 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x32F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3EA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD SWAP1 POP PUSH0 DUP4 DUP3 PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x1426 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x40E JUMPI POP PUSH1 0x14 DUP3 GT ISZERO JUMPDEST PUSH2 0x416 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP5 GT DUP1 ISZERO PUSH2 0x462 JUMPI POP DUP1 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO JUMPDEST PUSH2 0x46A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4BA DUP2 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDD3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x656 JUMPI PUSH2 0x56F DUP6 PUSH1 0x1 PUSH0 DUP10 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x51F JUMPI PUSH2 0x51E PUSH2 0x1467 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDF4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x585 JUMPI PUSH2 0x584 PUSH2 0x1467 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x5DD JUMPI PUSH2 0x5DC PUSH2 0x1467 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP8 PUSH1 0x40 MLOAD PUSH2 0x641 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x4FD JUMP JUMPDEST POP PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6BB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x6D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x75C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x766 DUP4 DUP4 PUSH2 0xE1A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x848 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x87F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA18 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA62 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0xAAE JUMPI POP PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0xAB6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xB3A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB8A DUP3 PUSH1 0x1 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDD3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xC1B DUP3 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDF4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xCE7 DUP3 PUSH1 0x2 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDD3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xDC0 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 GT ISZERO PUSH2 0xDE0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0xDEC SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 DUP5 PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x14C7 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xE10 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE52 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0xE9E JUMPI POP PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0xEA6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEF6 DUP3 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDD3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xF87 DUP3 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDF4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1025 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1071 DUP3 PUSH2 0x1048 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1081 DUP2 PUSH2 0x1067 JUMP JUMPDEST DUP2 EQ PUSH2 0x108B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x109C DUP2 PUSH2 0x1078 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B4 DUP2 PUSH2 0x10A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x10BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10CF DUP2 PUSH2 0x10AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10EB JUMPI PUSH2 0x10EA PUSH2 0x1040 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10F8 DUP6 DUP3 DUP7 ADD PUSH2 0x108E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1109 DUP6 DUP3 DUP7 ADD PUSH2 0x10C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1127 DUP2 PUSH2 0x1113 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1140 PUSH0 DUP4 ADD DUP5 PUSH2 0x111E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x114F DUP2 PUSH2 0x10A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1168 PUSH0 DUP4 ADD DUP5 PUSH2 0x1146 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1185 JUMPI PUSH2 0x1184 PUSH2 0x1040 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1192 DUP7 DUP3 DUP8 ADD PUSH2 0x108E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x11A3 DUP7 DUP3 DUP8 ADD PUSH2 0x108E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x11B4 DUP7 DUP3 DUP8 ADD PUSH2 0x10C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11D3 JUMPI PUSH2 0x11D2 PUSH2 0x1040 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11E0 DUP5 DUP3 DUP6 ADD PUSH2 0x108E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1233 DUP3 PUSH2 0x11ED JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1252 JUMPI PUSH2 0x1251 PUSH2 0x11FD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1264 PUSH2 0x1037 JUMP JUMPDEST SWAP1 POP PUSH2 0x1270 DUP3 DUP3 PUSH2 0x122A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x128F JUMPI PUSH2 0x128E PUSH2 0x11FD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x12B6 PUSH2 0x12B1 DUP5 PUSH2 0x1275 JUMP JUMPDEST PUSH2 0x125B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x12D9 JUMPI PUSH2 0x12D8 PUSH2 0x12A0 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1302 JUMPI DUP1 PUSH2 0x12EE DUP9 DUP3 PUSH2 0x108E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x12DB JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1320 JUMPI PUSH2 0x131F PUSH2 0x11E9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1330 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x134F JUMPI PUSH2 0x134E PUSH2 0x1040 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x136C JUMPI PUSH2 0x136B PUSH2 0x1044 JUMP JUMPDEST JUMPDEST PUSH2 0x1378 DUP6 DUP3 DUP7 ADD PUSH2 0x130C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1389 DUP6 DUP3 DUP7 ADD PUSH2 0x10C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x139C DUP2 PUSH2 0x1067 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1393 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13D1 JUMPI PUSH2 0x13D0 PUSH2 0x1040 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13DE DUP6 DUP3 DUP7 ADD PUSH2 0x108E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13EF DUP6 DUP3 DUP7 ADD PUSH2 0x108E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1430 DUP3 PUSH2 0x10A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x143B DUP4 PUSH2 0x10A2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1449 DUP2 PUSH2 0x10A2 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1460 JUMPI PUSH2 0x145F PUSH2 0x13F9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x149E DUP3 PUSH2 0x10A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x14A9 DUP4 PUSH2 0x10A2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x14C1 JUMPI PUSH2 0x14C0 PUSH2 0x13F9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14D1 DUP3 PUSH2 0x10A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x14DC DUP4 PUSH2 0x10A2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x14F4 JUMPI PUSH2 0x14F3 PUSH2 0x13F9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD SHL PUSH11 0xFB41C6F2B70C0636CC53C9 0xC8 GASPRICE 0xD5 PUSH19 0x58F6032C59BC9135FDCBDE47E72664736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ","sourceMap":"7710:1167:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8143:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1263:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7968:169;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7508:95;;;:::i;:::-;;6887:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2531:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8296:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7328:93;;;:::i;:::-;;5897:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7800:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5526:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6509:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8143:147;8233:4;7063:6;;;;;;;;;;;7062:7;7054:16;;;;;;8253:31:::1;8267:8;8277:6;8253:13;:31::i;:::-;8246:38;;8143:147:::0;;;;:::o;1263:26::-;;;;:::o;7968:169::-;8073:4;7063:6;;;;;;;;;;;7062:7;7054:16;;;;;;8093:38:::1;8112:5;8119:3;8124:6;8093:18;:38::i;:::-;8086:45;;7968:169:::0;;;;;:::o;7508:95::-;6320:5;;;;;;;;;;;6306:19;;:10;:19;;;6298:28;;;;;;7223:6:::1;;;;;;;;;;;7215:15;;;::::0;::::1;;7571:5:::2;7562:6;;:14;;;;;;;;;;;;;;;;;;7588:9;;;;;;;;;;7508:95::o:0;6887:26::-;;;;;;;;;;;;;:::o;2531:118::-;2596:15;2627:8;:16;2636:6;2627:16;;;;;;;;;;;;;;;;2620:23;;2531:118;;;:::o;8296:578::-;8394:4;7063:6;;;;;;;;;;;7062:7;7054:16;;;;;;8407:8:::1;8418:10;:17;8407:28;;8476:14;8508:6;8501:3;8493:21;;;;:::i;:::-;8476:38;;8535:1;8529:3;:7;:20;;;;;8547:2;8540:3;:9;;8529:20;8521:29;;;::::0;::::1;;8574:1;8565:6;:10;:44;;;;;8603:6;8579:8;:20;8588:10;8579:20;;;;;;;;;;;;;;;;:30;;8565:44;8557:53;;;::::0;::::1;;8642:32;8667:6;8642:8;:20;8651:10;8642:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;8619:8;:20;8628:10;8619:20;;;;;;;;;;;;;;;:55;;;;8686:6;8681:170;8702:3;8698:1;:7;8681:170;;;8749:35;8777:6;8749:8;:23;8758:10;8769:1;8758:13;;;;;;;;:::i;:::-;;;;;;;;8749:23;;;;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;8723:8;:23;8732:10;8743:1;8732:13;;;;;;;;:::i;:::-;;;;;;;;8723:23;;;;;;;;;;;;;;;:61;;;;8821:10;8832:1;8821:13;;;;;;;;:::i;:::-;;;;;;;;8800:43;;8809:10;8800:43;;;8836:6;8800:43;;;;;;:::i;:::-;;;;;;;;8707:3;;;;;;;8681:170;;;;8864:4;8857:11;;;;8296:578:::0;;;;:::o;7328:93::-;6320:5;;;;;;;;;;;6306:19;;:10;:19;;;6298:28;;;;;;7063:6:::1;;;;;;;;;;;7062:7;7054:16;;;::::0;::::1;;7392:4:::2;7383:6;;:13;;;;;;;;;;;;;;;;;;7408:7;;;;;;;;;;7328:93::o:0;5897:20::-;;;;;;;;;;;;;:::o;7800:162::-;7909:4;7063:6;;;;;;;;;;;7062:7;7054:16;;;;;;7929:27:::1;7944:3;7949:6;7929:14;:27::i;:::-;7922:34;;7800:162:::0;;;;:::o;5526:147::-;5609:17;5642:7;:15;5650:6;5642:15;;;;;;;;;;;;;;;:25;5658:8;5642:25;;;;;;;;;;;;;;;;5635:32;;5526:147;;;;:::o;6509:178::-;6320:5;;;;;;;;;;;6306:19;;:10;:19;;;6298:28;;;;;;6606:1:::1;6586:22;;:8;:22;;::::0;6578:31:::1;;;::::0;::::1;;6649:8;6621:37;;6642:5;;;;;;;;;;;6621:37;;;;;;;;;;;;6673:8;6665:5;;:16;;;;;;;;;;;;;;;;;;6509:178:::0;:::o;4980:209::-;5064:4;5109:6;5077:7;:19;5085:10;5077:19;;;;;;;;;;;;;;;:29;5097:8;5077:29;;;;;;;;;;;;;;;:38;;;;5148:8;5127:38;;5136:10;5127:38;;;5158:6;5127:38;;;;;;:::i;:::-;;;;;;;;5179:4;5172:11;;4980:209;;;;:::o;3860:485::-;3959:4;3995:1;3980:17;;:3;:17;;;3972:26;;;;;;4022:1;4013:6;:10;:39;;;;;4037:8;:15;4046:5;4037:15;;;;;;;;;;;;;;;;4027:6;:25;;4013:39;4005:48;;;;;;4078:7;:14;4086:5;4078:14;;;;;;;;;;;;;;;:26;4093:10;4078:26;;;;;;;;;;;;;;;;4068:6;:36;;4060:45;;;;;;4132:27;4152:6;4132:8;:15;4141:5;4132:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;4114:8;:15;4123:5;4114:15;;;;;;;;;;;;;;;:45;;;;4182:25;4200:6;4182:8;:13;4191:3;4182:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;4166:8;:13;4175:3;4166:13;;;;;;;;;;;;;;;:41;;;;4243:38;4274:6;4243:7;:14;4251:5;4243:14;;;;;;;;;;;;;;;:26;4258:10;4243:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;4214:7;:14;4222:5;4214:14;;;;;;;;;;;;;;;:26;4229:10;4214:26;;;;;;;;;;;;;;;:67;;;;4309:3;4293:28;;4302:5;4293:28;;;4314:6;4293:28;;;;;;:::i;:::-;;;;;;;;4335:4;4328:11;;3860:485;;;;;:::o;835:114::-;893:7;922:1;917;:6;;909:15;;;;;;942:1;938;:5;;;;:::i;:::-;931:12;;835:114;;;;:::o;955:134::-;1013:7;1029:9;1045:1;1041;:5;;;;:::i;:::-;1029:17;;1066:1;1061;:6;;1053:15;;;;;;1082:1;1075:8;;;955:134;;;;:::o;1890:424::-;1970:4;2006:1;1991:17;;:3;:17;;;1983:26;;;;;;2033:1;2024:6;:10;:44;;;;;2048:8;:20;2057:10;2048:20;;;;;;;;;;;;;;;;2038:6;:30;;2024:44;2016:53;;;;;;2165:32;2190:6;2165:8;:20;2174:10;2165:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;2142:8;:20;2151:10;2142:20;;;;;;;;;;;;;;;:55;;;;2220:25;2238:6;2220:8;:13;2229:3;2220:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;2204:8;:13;2213:3;2204:13;;;;;;;;;;;;;;;:41;;;;2278:3;2257:33;;2266:10;2257:33;;;2283:6;2257:33;;;;;;:::i;:::-;;;;;;;;2304:4;2297:11;;1890:424;;;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:90::-;1711:7;1754:5;1747:13;1740:21;1729:32;;1677:90;;;:::o;1773:109::-;1854:21;1869:5;1854:21;:::i;:::-;1849:3;1842:34;1773:109;;:::o;1888:210::-;1975:4;2013:2;2002:9;1998:18;1990:26;;2026:65;2088:1;2077:9;2073:17;2064:6;2026:65;:::i;:::-;1888:210;;;;:::o;2104:118::-;2191:24;2209:5;2191:24;:::i;:::-;2186:3;2179:37;2104:118;;:::o;2228:222::-;2321:4;2359:2;2348:9;2344:18;2336:26;;2372:71;2440:1;2429:9;2425:17;2416:6;2372:71;:::i;:::-;2228:222;;;;:::o;2456:619::-;2533:6;2541;2549;2598:2;2586:9;2577:7;2573:23;2569:32;2566:119;;;2604:79;;:::i;:::-;2566:119;2724:1;2749:53;2794:7;2785:6;2774:9;2770:22;2749:53;:::i;:::-;2739:63;;2695:117;2851:2;2877:53;2922:7;2913:6;2902:9;2898:22;2877:53;:::i;:::-;2867:63;;2822:118;2979:2;3005:53;3050:7;3041:6;3030:9;3026:22;3005:53;:::i;:::-;2995:63;;2950:118;2456:619;;;;;:::o;3081:329::-;3140:6;3189:2;3177:9;3168:7;3164:23;3160:32;3157:119;;;3195:79;;:::i;:::-;3157:119;3315:1;3340:53;3385:7;3376:6;3365:9;3361:22;3340:53;:::i;:::-;3330:63;;3286:117;3081:329;;;;:::o;3416:117::-;3525:1;3522;3515:12;3539:102;3580:6;3631:2;3627:7;3622:2;3615:5;3611:14;3607:28;3597:38;;3539:102;;;:::o;3647:180::-;3695:77;3692:1;3685:88;3792:4;3789:1;3782:15;3816:4;3813:1;3806:15;3833:281;3916:27;3938:4;3916:27;:::i;:::-;3908:6;3904:40;4046:6;4034:10;4031:22;4010:18;3998:10;3995:34;3992:62;3989:88;;;4057:18;;:::i;:::-;3989:88;4097:10;4093:2;4086:22;3876:238;3833:281;;:::o;4120:129::-;4154:6;4181:20;;:::i;:::-;4171:30;;4210:33;4238:4;4230:6;4210:33;:::i;:::-;4120:129;;;:::o;4255:311::-;4332:4;4422:18;4414:6;4411:30;4408:56;;;4444:18;;:::i;:::-;4408:56;4494:4;4486:6;4482:17;4474:25;;4554:4;4548;4544:15;4536:23;;4255:311;;;:::o;4572:117::-;4681:1;4678;4671:12;4712:710;4808:5;4833:81;4849:64;4906:6;4849:64;:::i;:::-;4833:81;:::i;:::-;4824:90;;4934:5;4963:6;4956:5;4949:21;4997:4;4990:5;4986:16;4979:23;;5050:4;5042:6;5038:17;5030:6;5026:30;5079:3;5071:6;5068:15;5065:122;;;5098:79;;:::i;:::-;5065:122;5213:6;5196:220;5230:6;5225:3;5222:15;5196:220;;;5305:3;5334:37;5367:3;5355:10;5334:37;:::i;:::-;5329:3;5322:50;5401:4;5396:3;5392:14;5385:21;;5272:144;5256:4;5251:3;5247:14;5240:21;;5196:220;;;5200:21;4814:608;;4712:710;;;;;:::o;5445:370::-;5516:5;5565:3;5558:4;5550:6;5546:17;5542:27;5532:122;;5573:79;;:::i;:::-;5532:122;5690:6;5677:20;5715:94;5805:3;5797:6;5790:4;5782:6;5778:17;5715:94;:::i;:::-;5706:103;;5522:293;5445:370;;;;:::o;5821:684::-;5914:6;5922;5971:2;5959:9;5950:7;5946:23;5942:32;5939:119;;;5977:79;;:::i;:::-;5939:119;6125:1;6114:9;6110:17;6097:31;6155:18;6147:6;6144:30;6141:117;;;6177:79;;:::i;:::-;6141:117;6282:78;6352:7;6343:6;6332:9;6328:22;6282:78;:::i;:::-;6272:88;;6068:302;6409:2;6435:53;6480:7;6471:6;6460:9;6456:22;6435:53;:::i;:::-;6425:63;;6380:118;5821:684;;;;;:::o;6511:118::-;6598:24;6616:5;6598:24;:::i;:::-;6593:3;6586:37;6511:118;;:::o;6635:222::-;6728:4;6766:2;6755:9;6751:18;6743:26;;6779:71;6847:1;6836:9;6832:17;6823:6;6779:71;:::i;:::-;6635:222;;;;:::o;6863:474::-;6931:6;6939;6988:2;6976:9;6967:7;6963:23;6959:32;6956:119;;;6994:79;;:::i;:::-;6956:119;7114:1;7139:53;7184:7;7175:6;7164:9;7160:22;7139:53;:::i;:::-;7129:63;;7085:117;7241:2;7267:53;7312:7;7303:6;7292:9;7288:22;7267:53;:::i;:::-;7257:63;;7212:118;6863:474;;;;;:::o;7343:180::-;7391:77;7388:1;7381:88;7488:4;7485:1;7478:15;7512:4;7509:1;7502:15;7529:410;7569:7;7592:20;7610:1;7592:20;:::i;:::-;7587:25;;7626:20;7644:1;7626:20;:::i;:::-;7621:25;;7681:1;7678;7674:9;7703:30;7721:11;7703:30;:::i;:::-;7692:41;;7882:1;7873:7;7869:15;7866:1;7863:22;7843:1;7836:9;7816:83;7793:139;;7912:18;;:::i;:::-;7793:139;7577:362;7529:410;;;;:::o;7945:180::-;7993:77;7990:1;7983:88;8090:4;8087:1;8080:15;8114:4;8111:1;8104:15;8131:194;8171:4;8191:20;8209:1;8191:20;:::i;:::-;8186:25;;8225:20;8243:1;8225:20;:::i;:::-;8220:25;;8269:1;8266;8262:9;8254:17;;8293:1;8287:4;8284:11;8281:37;;;8298:18;;:::i;:::-;8281:37;8131:194;;;;:::o;8331:191::-;8371:3;8390:20;8408:1;8390:20;:::i;:::-;8385:25;;8424:20;8442:1;8424:20;:::i;:::-;8419:25;;8467:1;8464;8460:9;8453:16;;8488:3;8485:1;8482:10;8479:36;;;8495:18;;:::i;:::-;8479:36;8331:191;;;;:::o"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"batchTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"StandardToken modified with pausable transfers.*\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"_owner\":\"address The address which owns the funds.\",\"_spender\":\"address The address which will spend the funds.\"},\"returns\":{\"remaining\":\"A uint256 specifying the amount of tokens still available for the spender.\"}},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"_owner\":\"The address to query the the balance of.\"},\"returns\":{\"balance\":\"An uint256 representing the amount owned by the passed address.\"}},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"_from\":\"address The address which you want to send tokens from\",\"_to\":\"address The address which you want to transfer to\",\"_value\":\"uint256 the amount of tokens to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}},\"title\":\"Pausable token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BecToken.sol\":\"PausableToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BecToken.sol\":{\"content\":\"/*\\r\\n * @source: https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-101#bectokensol\\r\\n * Upgraded from Solidity 0.4 to 0.8, vulnerability may no longer exist\\r\\n * @author: -\\r\\n * @vulnerable_at_lines: 268\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n * @dev Math operations with safety checks that throw on error\\r\\n */\\r\\nlibrary SafeMath {\\r\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a * b;\\r\\n    require(a == 0 || c / a == b);\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    // require(b > 0); // Solidity automatically throws when dividing by 0\\r\\n    uint256 c = a / b;\\r\\n    // require(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    require(b <= a);\\r\\n    return a - b;\\r\\n  }\\r\\n\\r\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a + b;\\r\\n    require(c >= a);\\r\\n    return c;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20Basic\\r\\n * @dev Simpler version of ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/179\\r\\n */\\r\\nabstract contract ERC20Basic {\\r\\n  uint256 public totalSupply;\\r\\n  function balanceOf(address who) public view virtual returns (uint256);\\r\\n  function transfer(address to, uint256 value) public virtual returns (bool);\\r\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Basic token\\r\\n * @dev Basic version of StandardToken, with no allowances.\\r\\n */\\r\\ncontract BasicToken is ERC20Basic {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping(address => uint256) balances;\\r\\n\\r\\n  /**\\r\\n  * @dev transfer token for a specified address\\r\\n  * @param _to The address to transfer to.\\r\\n  * @param _value The amount to be transferred.\\r\\n  */\\r\\n  function transfer(address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[msg.sender]);\\r\\n\\r\\n    // SafeMath.sub will throw if there is not enough balance.\\r\\n    balances[msg.sender] = balances[msg.sender].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    emit Transfer(msg.sender, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev Gets the balance of the specified address.\\r\\n  * @param _owner The address to query the the balance of.\\r\\n  * @return balance An uint256 representing the amount owned by the passed address.\\r\\n  */\\r\\n  function balanceOf(address _owner) public view override returns (uint256 balance) {\\r\\n    return balances[_owner];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\r\\n */\\r\\nabstract contract ERC20 is ERC20Basic {\\r\\n  function allowance(address owner, address spender) public view virtual returns (uint256);\\r\\n  function transferFrom(address from, address to, uint256 value) public virtual returns (bool);\\r\\n  function approve(address spender, uint256 value) public virtual returns (bool);\\r\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * @title Standard ERC20 token\\r\\n *\\r\\n * @dev Implementation of the basic standard token.\\r\\n * @dev https://github.com/ethereum/EIPs/issues/20\\r\\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\r\\n */\\r\\ncontract StandardToken is ERC20, BasicToken {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping (address => mapping (address => uint256)) internal allowed;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Transfer tokens from one address to another\\r\\n   * @param _from address The address which you want to send tokens from\\r\\n   * @param _to address The address which you want to transfer to\\r\\n   * @param _value uint256 the amount of tokens to be transferred\\r\\n   */\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[_from]);\\r\\n    require(_value <= allowed[_from][msg.sender]);\\r\\n\\r\\n    balances[_from] = balances[_from].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\\r\\n    emit Transfer(_from, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r\\n   *\\r\\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\\r\\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r\\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n   * @param _spender The address which will spend the funds.\\r\\n   * @param _value The amount of tokens to be spent.\\r\\n   */\\r\\n  function approve(address _spender, uint256 _value) public override virtual returns (bool) {\\r\\n    allowed[msg.sender][_spender] = _value;\\r\\n    emit Approval(msg.sender, _spender, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n   * @param _owner address The address which owns the funds.\\r\\n   * @param _spender address The address which will spend the funds.\\r\\n   * @return remaining A uint256 specifying the amount of tokens still available for the spender.\\r\\n   */\\r\\n  function allowance(address _owner, address _spender) public view override returns (uint256 remaining) {\\r\\n    return allowed[_owner][_spender];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Ownable\\r\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\r\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\r\\n */\\r\\ncontract Ownable {\\r\\n  address public owner;\\r\\n\\r\\n\\r\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\r\\n   * account.\\r\\n   */\\r\\n  constructor() {\\r\\n    owner = msg.sender;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Throws if called by any account other than the owner.\\r\\n   */\\r\\n  modifier onlyOwner() {\\r\\n    require(msg.sender == owner);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\r\\n   * @param newOwner The address to transfer ownership to.\\r\\n   */\\r\\n  function transferOwnership(address newOwner) onlyOwner public {\\r\\n    require(newOwner != address(0));\\r\\n    emit OwnershipTransferred(owner, newOwner);\\r\\n    owner = newOwner;\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable\\r\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\r\\n */\\r\\ncontract Pausable is Ownable {\\r\\n  event Pause();\\r\\n  event Unpause();\\r\\n\\r\\n  bool public paused = false;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\r\\n   */\\r\\n  modifier whenNotPaused() {\\r\\n    require(!paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is paused.\\r\\n   */\\r\\n  modifier whenPaused() {\\r\\n    require(paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to pause, triggers stopped state\\r\\n   */\\r\\n  function pause() onlyOwner whenNotPaused public {\\r\\n    paused = true;\\r\\n    emit Pause();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to unpause, returns to normal state\\r\\n   */\\r\\n  function unpause() onlyOwner whenPaused public {\\r\\n    paused = false;\\r\\n    emit Unpause();\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable token\\r\\n *\\r\\n * @dev StandardToken modified with pausable transfers.\\r\\n **/\\r\\n\\r\\ncontract PausableToken is StandardToken, Pausable {\\r\\n  using SafeMath for uint256;\\r\\n  \\r\\n  function transfer(address _to, uint256 _value) public whenNotPaused override(BasicToken,ERC20Basic) returns (bool) {\\r\\n    return super.transfer(_to, _value);\\r\\n  }\\r\\n\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.transferFrom(_from, _to, _value);\\r\\n  }\\r\\n\\r\\n  function approve(address _spender, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.approve(_spender, _value);\\r\\n  }\\r\\n\\r\\n  function batchTransfer(address[] memory _receivers, uint256 _value) public whenNotPaused returns (bool) {\\r\\n    uint cnt = _receivers.length;\\r\\n    // <yes> <report> ARITHMETIC\\r\\n    uint256 amount = uint256(cnt) * _value;\\r\\n    require(cnt > 0 && cnt <= 20);\\r\\n    require(_value > 0 && balances[msg.sender] >= amount);\\r\\n\\r\\n    balances[msg.sender] = balances[msg.sender].sub(amount);\\r\\n    for (uint i = 0; i < cnt; i++) {\\r\\n        balances[_receivers[i]] = balances[_receivers[i]].add(_value);\\r\\n        emit Transfer(msg.sender, _receivers[i], _value);\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Bec Token\\r\\n *\\r\\n * @dev Implementation of Bec Token based on the basic standard token.\\r\\n */\\r\\ncontract BecToken is PausableToken {\\r\\n    /**\\r\\n    * Public variables of the token\\r\\n    * The following variables are OPTIONAL vanities. One does not have to include them.\\r\\n    * They allow one to customise the token contract & in no way influences the core functionality.\\r\\n    * Some wallets/interfaces might not even bother to look at this information.\\r\\n    */\\r\\n    string public name = \\\"BeautyChain\\\";\\r\\n    string public symbol = \\\"BEC\\\";\\r\\n    string public version = '1.0.0';\\r\\n    uint8 public decimals = 18;\\r\\n\\r\\n    /**\\r\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n     */\\r\\n    constructor() {\\r\\n      totalSupply = 7000000000 * (10**(uint256(decimals)));\\r\\n      balances[msg.sender] = totalSupply;    // Give the creator all initial tokens\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2716ae512257148b716c05f5e0d13034bae47d0c26ba0381f7241b1776c8fff0\",\"license\":\"UNLICENSED\"}},\"version\":1}"},"SafeMath":{"evm":{"deployedBytecode":{"object":"730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203be7293438621db259c80c8565746303246fb481604cb421831991ea94b718f864736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xE7 0x29 CALLVALUE CODESIZE PUSH3 0x1DB259 0xC8 0xC DUP6 PUSH6 0x746303246FB4 DUP2 PUSH1 0x4C 0xB4 0x21 DUP4 NOT SWAP2 0xEA SWAP5 0xB7 XOR 0xF8 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"381:711:0:-:0;;;;;;;;"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations with safety checks that throw on error\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BecToken.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BecToken.sol\":{\"content\":\"/*\\r\\n * @source: https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-101#bectokensol\\r\\n * Upgraded from Solidity 0.4 to 0.8, vulnerability may no longer exist\\r\\n * @author: -\\r\\n * @vulnerable_at_lines: 268\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n * @dev Math operations with safety checks that throw on error\\r\\n */\\r\\nlibrary SafeMath {\\r\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a * b;\\r\\n    require(a == 0 || c / a == b);\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    // require(b > 0); // Solidity automatically throws when dividing by 0\\r\\n    uint256 c = a / b;\\r\\n    // require(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    require(b <= a);\\r\\n    return a - b;\\r\\n  }\\r\\n\\r\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a + b;\\r\\n    require(c >= a);\\r\\n    return c;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20Basic\\r\\n * @dev Simpler version of ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/179\\r\\n */\\r\\nabstract contract ERC20Basic {\\r\\n  uint256 public totalSupply;\\r\\n  function balanceOf(address who) public view virtual returns (uint256);\\r\\n  function transfer(address to, uint256 value) public virtual returns (bool);\\r\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Basic token\\r\\n * @dev Basic version of StandardToken, with no allowances.\\r\\n */\\r\\ncontract BasicToken is ERC20Basic {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping(address => uint256) balances;\\r\\n\\r\\n  /**\\r\\n  * @dev transfer token for a specified address\\r\\n  * @param _to The address to transfer to.\\r\\n  * @param _value The amount to be transferred.\\r\\n  */\\r\\n  function transfer(address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[msg.sender]);\\r\\n\\r\\n    // SafeMath.sub will throw if there is not enough balance.\\r\\n    balances[msg.sender] = balances[msg.sender].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    emit Transfer(msg.sender, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev Gets the balance of the specified address.\\r\\n  * @param _owner The address to query the the balance of.\\r\\n  * @return balance An uint256 representing the amount owned by the passed address.\\r\\n  */\\r\\n  function balanceOf(address _owner) public view override returns (uint256 balance) {\\r\\n    return balances[_owner];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\r\\n */\\r\\nabstract contract ERC20 is ERC20Basic {\\r\\n  function allowance(address owner, address spender) public view virtual returns (uint256);\\r\\n  function transferFrom(address from, address to, uint256 value) public virtual returns (bool);\\r\\n  function approve(address spender, uint256 value) public virtual returns (bool);\\r\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * @title Standard ERC20 token\\r\\n *\\r\\n * @dev Implementation of the basic standard token.\\r\\n * @dev https://github.com/ethereum/EIPs/issues/20\\r\\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\r\\n */\\r\\ncontract StandardToken is ERC20, BasicToken {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping (address => mapping (address => uint256)) internal allowed;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Transfer tokens from one address to another\\r\\n   * @param _from address The address which you want to send tokens from\\r\\n   * @param _to address The address which you want to transfer to\\r\\n   * @param _value uint256 the amount of tokens to be transferred\\r\\n   */\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[_from]);\\r\\n    require(_value <= allowed[_from][msg.sender]);\\r\\n\\r\\n    balances[_from] = balances[_from].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\\r\\n    emit Transfer(_from, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r\\n   *\\r\\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\\r\\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r\\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n   * @param _spender The address which will spend the funds.\\r\\n   * @param _value The amount of tokens to be spent.\\r\\n   */\\r\\n  function approve(address _spender, uint256 _value) public override virtual returns (bool) {\\r\\n    allowed[msg.sender][_spender] = _value;\\r\\n    emit Approval(msg.sender, _spender, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n   * @param _owner address The address which owns the funds.\\r\\n   * @param _spender address The address which will spend the funds.\\r\\n   * @return remaining A uint256 specifying the amount of tokens still available for the spender.\\r\\n   */\\r\\n  function allowance(address _owner, address _spender) public view override returns (uint256 remaining) {\\r\\n    return allowed[_owner][_spender];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Ownable\\r\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\r\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\r\\n */\\r\\ncontract Ownable {\\r\\n  address public owner;\\r\\n\\r\\n\\r\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\r\\n   * account.\\r\\n   */\\r\\n  constructor() {\\r\\n    owner = msg.sender;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Throws if called by any account other than the owner.\\r\\n   */\\r\\n  modifier onlyOwner() {\\r\\n    require(msg.sender == owner);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\r\\n   * @param newOwner The address to transfer ownership to.\\r\\n   */\\r\\n  function transferOwnership(address newOwner) onlyOwner public {\\r\\n    require(newOwner != address(0));\\r\\n    emit OwnershipTransferred(owner, newOwner);\\r\\n    owner = newOwner;\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable\\r\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\r\\n */\\r\\ncontract Pausable is Ownable {\\r\\n  event Pause();\\r\\n  event Unpause();\\r\\n\\r\\n  bool public paused = false;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\r\\n   */\\r\\n  modifier whenNotPaused() {\\r\\n    require(!paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is paused.\\r\\n   */\\r\\n  modifier whenPaused() {\\r\\n    require(paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to pause, triggers stopped state\\r\\n   */\\r\\n  function pause() onlyOwner whenNotPaused public {\\r\\n    paused = true;\\r\\n    emit Pause();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to unpause, returns to normal state\\r\\n   */\\r\\n  function unpause() onlyOwner whenPaused public {\\r\\n    paused = false;\\r\\n    emit Unpause();\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable token\\r\\n *\\r\\n * @dev StandardToken modified with pausable transfers.\\r\\n **/\\r\\n\\r\\ncontract PausableToken is StandardToken, Pausable {\\r\\n  using SafeMath for uint256;\\r\\n  \\r\\n  function transfer(address _to, uint256 _value) public whenNotPaused override(BasicToken,ERC20Basic) returns (bool) {\\r\\n    return super.transfer(_to, _value);\\r\\n  }\\r\\n\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.transferFrom(_from, _to, _value);\\r\\n  }\\r\\n\\r\\n  function approve(address _spender, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.approve(_spender, _value);\\r\\n  }\\r\\n\\r\\n  function batchTransfer(address[] memory _receivers, uint256 _value) public whenNotPaused returns (bool) {\\r\\n    uint cnt = _receivers.length;\\r\\n    // <yes> <report> ARITHMETIC\\r\\n    uint256 amount = uint256(cnt) * _value;\\r\\n    require(cnt > 0 && cnt <= 20);\\r\\n    require(_value > 0 && balances[msg.sender] >= amount);\\r\\n\\r\\n    balances[msg.sender] = balances[msg.sender].sub(amount);\\r\\n    for (uint i = 0; i < cnt; i++) {\\r\\n        balances[_receivers[i]] = balances[_receivers[i]].add(_value);\\r\\n        emit Transfer(msg.sender, _receivers[i], _value);\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Bec Token\\r\\n *\\r\\n * @dev Implementation of Bec Token based on the basic standard token.\\r\\n */\\r\\ncontract BecToken is PausableToken {\\r\\n    /**\\r\\n    * Public variables of the token\\r\\n    * The following variables are OPTIONAL vanities. One does not have to include them.\\r\\n    * They allow one to customise the token contract & in no way influences the core functionality.\\r\\n    * Some wallets/interfaces might not even bother to look at this information.\\r\\n    */\\r\\n    string public name = \\\"BeautyChain\\\";\\r\\n    string public symbol = \\\"BEC\\\";\\r\\n    string public version = '1.0.0';\\r\\n    uint8 public decimals = 18;\\r\\n\\r\\n    /**\\r\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n     */\\r\\n    constructor() {\\r\\n      totalSupply = 7000000000 * (10**(uint256(decimals)));\\r\\n      balances[msg.sender] = totalSupply;    // Give the creator all initial tokens\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2716ae512257148b716c05f5e0d13034bae47d0c26ba0381f7241b1776c8fff0\",\"license\":\"UNLICENSED\"}},\"version\":1}"},"StandardToken":{"evm":{"deployedBytecode":{"object":"608060405234801561000f575f80fd5b5060043610610060575f3560e01c8063095ea7b31461006457806318160ddd1461009457806323b872dd146100b257806370a08231146100e2578063a9059cbb14610112578063dd62ed3e14610142575b5f80fd5b61007e600480360381019061007991906109ca565b610172565b60405161008b9190610a22565b60405180910390f35b61009c61025f565b6040516100a99190610a4a565b60405180910390f35b6100cc60048036038101906100c79190610a63565b610264565b6040516100d99190610a22565b60405180910390f35b6100fc60048036038101906100f79190610ab3565b61060d565b6040516101099190610a4a565b60405180910390f35b61012c600480360381019061012791906109ca565b610653565b6040516101399190610a22565b60405180910390f35b61015c60048036038101906101579190610ade565b610870565b6040516101699190610a4a565b60405180910390f35b5f8160025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161024d9190610a4a565b60405180910390a36001905092915050565b5f5481565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361029c575f80fd5b5f821180156102e8575060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548211155b6102f0575f80fd5b60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054821115610374575f80fd5b6103c48260015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546108f290919063ffffffff16565b60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506104558260015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461091390919063ffffffff16565b60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506105218260025f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546108f290919063ffffffff16565b60025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105fa9190610a4a565b60405180910390a3600190509392505050565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361068b575f80fd5b5f821180156106d7575060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548211155b6106df575f80fd5b61072f8260015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546108f290919063ffffffff16565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506107c08260015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461091390919063ffffffff16565b60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161085e9190610a4a565b60405180910390a36001905092915050565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f828211156108ff575f80fd5b818361090b9190610b49565b905092915050565b5f8082846109219190610b7c565b90508381101561092f575f80fd5b8091505092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109668261093d565b9050919050565b6109768161095c565b8114610980575f80fd5b50565b5f813590506109918161096d565b92915050565b5f819050919050565b6109a981610997565b81146109b3575f80fd5b50565b5f813590506109c4816109a0565b92915050565b5f80604083850312156109e0576109df610939565b5b5f6109ed85828601610983565b92505060206109fe858286016109b6565b9150509250929050565b5f8115159050919050565b610a1c81610a08565b82525050565b5f602082019050610a355f830184610a13565b92915050565b610a4481610997565b82525050565b5f602082019050610a5d5f830184610a3b565b92915050565b5f805f60608486031215610a7a57610a79610939565b5b5f610a8786828701610983565b9350506020610a9886828701610983565b9250506040610aa9868287016109b6565b9150509250925092565b5f60208284031215610ac857610ac7610939565b5b5f610ad584828501610983565b91505092915050565b5f8060408385031215610af457610af3610939565b5b5f610b0185828601610983565b9250506020610b1285828601610983565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610b5382610997565b9150610b5e83610997565b9250828203905081811115610b7657610b75610b1c565b5b92915050565b5f610b8682610997565b9150610b9183610997565b9250828201905080821115610ba957610ba8610b1c565b5b9291505056fea2646970667358221220c9cbd78c4aa2bfc7bfc188ba55121a24d0afb8ca92e156677669edfaeb889b4d64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x142 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0xA22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x25F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0xA63 JUMP JUMPDEST PUSH2 0x264 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0xA22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x109 SWAP2 SWAP1 PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x653 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0xA22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x157 SWAP2 SWAP1 PUSH2 0xADE JUMP JUMPDEST PUSH2 0x870 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x169 SWAP2 SWAP1 PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x29C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x2E8 JUMPI POP PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x2F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x374 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3C4 DUP3 PUSH1 0x1 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x8F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x455 DUP3 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x913 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x521 DUP3 PUSH1 0x2 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x8F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x5FA SWAP2 SWAP1 PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x6D7 JUMPI POP PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x6DF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x72F DUP3 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x8F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x7C0 DUP3 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x913 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x85E SWAP2 SWAP1 PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 GT ISZERO PUSH2 0x8FF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0x90B SWAP2 SWAP1 PUSH2 0xB49 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 DUP5 PUSH2 0x921 SWAP2 SWAP1 PUSH2 0xB7C JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x92F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x966 DUP3 PUSH2 0x93D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x976 DUP2 PUSH2 0x95C JUMP JUMPDEST DUP2 EQ PUSH2 0x980 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x991 DUP2 PUSH2 0x96D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A9 DUP2 PUSH2 0x997 JUMP JUMPDEST DUP2 EQ PUSH2 0x9B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9C4 DUP2 PUSH2 0x9A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9E0 JUMPI PUSH2 0x9DF PUSH2 0x939 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9ED DUP6 DUP3 DUP7 ADD PUSH2 0x983 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9FE DUP6 DUP3 DUP7 ADD PUSH2 0x9B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA1C DUP2 PUSH2 0xA08 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA35 PUSH0 DUP4 ADD DUP5 PUSH2 0xA13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA44 DUP2 PUSH2 0x997 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA5D PUSH0 DUP4 ADD DUP5 PUSH2 0xA3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA7A JUMPI PUSH2 0xA79 PUSH2 0x939 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA87 DUP7 DUP3 DUP8 ADD PUSH2 0x983 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xA98 DUP7 DUP3 DUP8 ADD PUSH2 0x983 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xAA9 DUP7 DUP3 DUP8 ADD PUSH2 0x9B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC8 JUMPI PUSH2 0xAC7 PUSH2 0x939 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAD5 DUP5 DUP3 DUP6 ADD PUSH2 0x983 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAF4 JUMPI PUSH2 0xAF3 PUSH2 0x939 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB01 DUP6 DUP3 DUP7 ADD PUSH2 0x983 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB12 DUP6 DUP3 DUP7 ADD PUSH2 0x983 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB53 DUP3 PUSH2 0x997 JUMP JUMPDEST SWAP2 POP PUSH2 0xB5E DUP4 PUSH2 0x997 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xB76 JUMPI PUSH2 0xB75 PUSH2 0xB1C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB86 DUP3 PUSH2 0x997 JUMP JUMPDEST SWAP2 POP PUSH2 0xB91 DUP4 PUSH2 0x997 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xBA9 JUMPI PUSH2 0xBA8 PUSH2 0xB1C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xCB 0xD7 DUP13 BLOBBASEFEE LOG2 0xBF 0xC7 0xBF 0xC1 DUP9 0xBA SSTORE SLT BYTE 0x24 0xD0 0xAF 0xB8 0xCA SWAP3 0xE1 JUMP PUSH8 0x7669EDFAEB889B4D PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"3426:2250:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:209;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1263:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3860:485;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2531:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1890:424;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5526:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4980:209;5064:4;5109:6;5077:7;:19;5085:10;5077:19;;;;;;;;;;;;;;;:29;5097:8;5077:29;;;;;;;;;;;;;;;:38;;;;5148:8;5127:38;;5136:10;5127:38;;;5158:6;5127:38;;;;;;:::i;:::-;;;;;;;;5179:4;5172:11;;4980:209;;;;:::o;1263:26::-;;;;:::o;3860:485::-;3959:4;3995:1;3980:17;;:3;:17;;;3972:26;;;;;;4022:1;4013:6;:10;:39;;;;;4037:8;:15;4046:5;4037:15;;;;;;;;;;;;;;;;4027:6;:25;;4013:39;4005:48;;;;;;4078:7;:14;4086:5;4078:14;;;;;;;;;;;;;;;:26;4093:10;4078:26;;;;;;;;;;;;;;;;4068:6;:36;;4060:45;;;;;;4132:27;4152:6;4132:8;:15;4141:5;4132:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;4114:8;:15;4123:5;4114:15;;;;;;;;;;;;;;;:45;;;;4182:25;4200:6;4182:8;:13;4191:3;4182:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;4166:8;:13;4175:3;4166:13;;;;;;;;;;;;;;;:41;;;;4243:38;4274:6;4243:7;:14;4251:5;4243:14;;;;;;;;;;;;;;;:26;4258:10;4243:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;4214:7;:14;4222:5;4214:14;;;;;;;;;;;;;;;:26;4229:10;4214:26;;;;;;;;;;;;;;;:67;;;;4309:3;4293:28;;4302:5;4293:28;;;4314:6;4293:28;;;;;;:::i;:::-;;;;;;;;4335:4;4328:11;;3860:485;;;;;:::o;2531:118::-;2596:15;2627:8;:16;2636:6;2627:16;;;;;;;;;;;;;;;;2620:23;;2531:118;;;:::o;1890:424::-;1970:4;2006:1;1991:17;;:3;:17;;;1983:26;;;;;;2033:1;2024:6;:10;:44;;;;;2048:8;:20;2057:10;2048:20;;;;;;;;;;;;;;;;2038:6;:30;;2024:44;2016:53;;;;;;2165:32;2190:6;2165:8;:20;2174:10;2165:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;2142:8;:20;2151:10;2142:20;;;;;;;;;;;;;;;:55;;;;2220:25;2238:6;2220:8;:13;2229:3;2220:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;2204:8;:13;2213:3;2204:13;;;;;;;;;;;;;;;:41;;;;2278:3;2257:33;;2266:10;2257:33;;;2283:6;2257:33;;;;;;:::i;:::-;;;;;;;;2304:4;2297:11;;1890:424;;;;:::o;5526:147::-;5609:17;5642:7;:15;5650:6;5642:15;;;;;;;;;;;;;;;:25;5658:8;5642:25;;;;;;;;;;;;;;;;5635:32;;5526:147;;;;:::o;835:114::-;893:7;922:1;917;:6;;909:15;;;;;;942:1;938;:5;;;;:::i;:::-;931:12;;835:114;;;;:::o;955:134::-;1013:7;1029:9;1045:1;1041;:5;;;;:::i;:::-;1029:17;;1066:1;1061;:6;;1053:15;;;;;;1082:1;1075:8;;;955:134;;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:90::-;1711:7;1754:5;1747:13;1740:21;1729:32;;1677:90;;;:::o;1773:109::-;1854:21;1869:5;1854:21;:::i;:::-;1849:3;1842:34;1773:109;;:::o;1888:210::-;1975:4;2013:2;2002:9;1998:18;1990:26;;2026:65;2088:1;2077:9;2073:17;2064:6;2026:65;:::i;:::-;1888:210;;;;:::o;2104:118::-;2191:24;2209:5;2191:24;:::i;:::-;2186:3;2179:37;2104:118;;:::o;2228:222::-;2321:4;2359:2;2348:9;2344:18;2336:26;;2372:71;2440:1;2429:9;2425:17;2416:6;2372:71;:::i;:::-;2228:222;;;;:::o;2456:619::-;2533:6;2541;2549;2598:2;2586:9;2577:7;2573:23;2569:32;2566:119;;;2604:79;;:::i;:::-;2566:119;2724:1;2749:53;2794:7;2785:6;2774:9;2770:22;2749:53;:::i;:::-;2739:63;;2695:117;2851:2;2877:53;2922:7;2913:6;2902:9;2898:22;2877:53;:::i;:::-;2867:63;;2822:118;2979:2;3005:53;3050:7;3041:6;3030:9;3026:22;3005:53;:::i;:::-;2995:63;;2950:118;2456:619;;;;;:::o;3081:329::-;3140:6;3189:2;3177:9;3168:7;3164:23;3160:32;3157:119;;;3195:79;;:::i;:::-;3157:119;3315:1;3340:53;3385:7;3376:6;3365:9;3361:22;3340:53;:::i;:::-;3330:63;;3286:117;3081:329;;;;:::o;3416:474::-;3484:6;3492;3541:2;3529:9;3520:7;3516:23;3512:32;3509:119;;;3547:79;;:::i;:::-;3509:119;3667:1;3692:53;3737:7;3728:6;3717:9;3713:22;3692:53;:::i;:::-;3682:63;;3638:117;3794:2;3820:53;3865:7;3856:6;3845:9;3841:22;3820:53;:::i;:::-;3810:63;;3765:118;3416:474;;;;;:::o;3896:180::-;3944:77;3941:1;3934:88;4041:4;4038:1;4031:15;4065:4;4062:1;4055:15;4082:194;4122:4;4142:20;4160:1;4142:20;:::i;:::-;4137:25;;4176:20;4194:1;4176:20;:::i;:::-;4171:25;;4220:1;4217;4213:9;4205:17;;4244:1;4238:4;4235:11;4232:37;;;4249:18;;:::i;:::-;4232:37;4082:194;;;;:::o;4282:191::-;4322:3;4341:20;4359:1;4341:20;:::i;:::-;4336:25;;4375:20;4393:1;4375:20;:::i;:::-;4370:25;;4418:1;4415;4411:9;4404:16;;4439:3;4436:1;4433:10;4430:36;;;4446:18;;:::i;:::-;4430:36;4282:191;;;;:::o"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard token.https://github.com/ethereum/EIPs/issues/20Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"_owner\":\"address The address which owns the funds.\",\"_spender\":\"address The address which will spend the funds.\"},\"returns\":{\"remaining\":\"A uint256 specifying the amount of tokens still available for the spender.\"}},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"_owner\":\"The address to query the the balance of.\"},\"returns\":{\"balance\":\"An uint256 representing the amount owned by the passed address.\"}},\"transfer(address,uint256)\":{\"details\":\"transfer token for a specified address\",\"params\":{\"_to\":\"The address to transfer to.\",\"_value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"_from\":\"address The address which you want to send tokens from\",\"_to\":\"address The address which you want to transfer to\",\"_value\":\"uint256 the amount of tokens to be transferred\"}}},\"title\":\"Standard ERC20 token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BecToken.sol\":\"StandardToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BecToken.sol\":{\"content\":\"/*\\r\\n * @source: https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-101#bectokensol\\r\\n * Upgraded from Solidity 0.4 to 0.8, vulnerability may no longer exist\\r\\n * @author: -\\r\\n * @vulnerable_at_lines: 268\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n * @dev Math operations with safety checks that throw on error\\r\\n */\\r\\nlibrary SafeMath {\\r\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a * b;\\r\\n    require(a == 0 || c / a == b);\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    // require(b > 0); // Solidity automatically throws when dividing by 0\\r\\n    uint256 c = a / b;\\r\\n    // require(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    require(b <= a);\\r\\n    return a - b;\\r\\n  }\\r\\n\\r\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a + b;\\r\\n    require(c >= a);\\r\\n    return c;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20Basic\\r\\n * @dev Simpler version of ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/179\\r\\n */\\r\\nabstract contract ERC20Basic {\\r\\n  uint256 public totalSupply;\\r\\n  function balanceOf(address who) public view virtual returns (uint256);\\r\\n  function transfer(address to, uint256 value) public virtual returns (bool);\\r\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Basic token\\r\\n * @dev Basic version of StandardToken, with no allowances.\\r\\n */\\r\\ncontract BasicToken is ERC20Basic {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping(address => uint256) balances;\\r\\n\\r\\n  /**\\r\\n  * @dev transfer token for a specified address\\r\\n  * @param _to The address to transfer to.\\r\\n  * @param _value The amount to be transferred.\\r\\n  */\\r\\n  function transfer(address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[msg.sender]);\\r\\n\\r\\n    // SafeMath.sub will throw if there is not enough balance.\\r\\n    balances[msg.sender] = balances[msg.sender].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    emit Transfer(msg.sender, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev Gets the balance of the specified address.\\r\\n  * @param _owner The address to query the the balance of.\\r\\n  * @return balance An uint256 representing the amount owned by the passed address.\\r\\n  */\\r\\n  function balanceOf(address _owner) public view override returns (uint256 balance) {\\r\\n    return balances[_owner];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\r\\n */\\r\\nabstract contract ERC20 is ERC20Basic {\\r\\n  function allowance(address owner, address spender) public view virtual returns (uint256);\\r\\n  function transferFrom(address from, address to, uint256 value) public virtual returns (bool);\\r\\n  function approve(address spender, uint256 value) public virtual returns (bool);\\r\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * @title Standard ERC20 token\\r\\n *\\r\\n * @dev Implementation of the basic standard token.\\r\\n * @dev https://github.com/ethereum/EIPs/issues/20\\r\\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\r\\n */\\r\\ncontract StandardToken is ERC20, BasicToken {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping (address => mapping (address => uint256)) internal allowed;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Transfer tokens from one address to another\\r\\n   * @param _from address The address which you want to send tokens from\\r\\n   * @param _to address The address which you want to transfer to\\r\\n   * @param _value uint256 the amount of tokens to be transferred\\r\\n   */\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[_from]);\\r\\n    require(_value <= allowed[_from][msg.sender]);\\r\\n\\r\\n    balances[_from] = balances[_from].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\\r\\n    emit Transfer(_from, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r\\n   *\\r\\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\\r\\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r\\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n   * @param _spender The address which will spend the funds.\\r\\n   * @param _value The amount of tokens to be spent.\\r\\n   */\\r\\n  function approve(address _spender, uint256 _value) public override virtual returns (bool) {\\r\\n    allowed[msg.sender][_spender] = _value;\\r\\n    emit Approval(msg.sender, _spender, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n   * @param _owner address The address which owns the funds.\\r\\n   * @param _spender address The address which will spend the funds.\\r\\n   * @return remaining A uint256 specifying the amount of tokens still available for the spender.\\r\\n   */\\r\\n  function allowance(address _owner, address _spender) public view override returns (uint256 remaining) {\\r\\n    return allowed[_owner][_spender];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Ownable\\r\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\r\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\r\\n */\\r\\ncontract Ownable {\\r\\n  address public owner;\\r\\n\\r\\n\\r\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\r\\n   * account.\\r\\n   */\\r\\n  constructor() {\\r\\n    owner = msg.sender;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Throws if called by any account other than the owner.\\r\\n   */\\r\\n  modifier onlyOwner() {\\r\\n    require(msg.sender == owner);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\r\\n   * @param newOwner The address to transfer ownership to.\\r\\n   */\\r\\n  function transferOwnership(address newOwner) onlyOwner public {\\r\\n    require(newOwner != address(0));\\r\\n    emit OwnershipTransferred(owner, newOwner);\\r\\n    owner = newOwner;\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable\\r\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\r\\n */\\r\\ncontract Pausable is Ownable {\\r\\n  event Pause();\\r\\n  event Unpause();\\r\\n\\r\\n  bool public paused = false;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\r\\n   */\\r\\n  modifier whenNotPaused() {\\r\\n    require(!paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is paused.\\r\\n   */\\r\\n  modifier whenPaused() {\\r\\n    require(paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to pause, triggers stopped state\\r\\n   */\\r\\n  function pause() onlyOwner whenNotPaused public {\\r\\n    paused = true;\\r\\n    emit Pause();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to unpause, returns to normal state\\r\\n   */\\r\\n  function unpause() onlyOwner whenPaused public {\\r\\n    paused = false;\\r\\n    emit Unpause();\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable token\\r\\n *\\r\\n * @dev StandardToken modified with pausable transfers.\\r\\n **/\\r\\n\\r\\ncontract PausableToken is StandardToken, Pausable {\\r\\n  using SafeMath for uint256;\\r\\n  \\r\\n  function transfer(address _to, uint256 _value) public whenNotPaused override(BasicToken,ERC20Basic) returns (bool) {\\r\\n    return super.transfer(_to, _value);\\r\\n  }\\r\\n\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.transferFrom(_from, _to, _value);\\r\\n  }\\r\\n\\r\\n  function approve(address _spender, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.approve(_spender, _value);\\r\\n  }\\r\\n\\r\\n  function batchTransfer(address[] memory _receivers, uint256 _value) public whenNotPaused returns (bool) {\\r\\n    uint cnt = _receivers.length;\\r\\n    // <yes> <report> ARITHMETIC\\r\\n    uint256 amount = uint256(cnt) * _value;\\r\\n    require(cnt > 0 && cnt <= 20);\\r\\n    require(_value > 0 && balances[msg.sender] >= amount);\\r\\n\\r\\n    balances[msg.sender] = balances[msg.sender].sub(amount);\\r\\n    for (uint i = 0; i < cnt; i++) {\\r\\n        balances[_receivers[i]] = balances[_receivers[i]].add(_value);\\r\\n        emit Transfer(msg.sender, _receivers[i], _value);\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Bec Token\\r\\n *\\r\\n * @dev Implementation of Bec Token based on the basic standard token.\\r\\n */\\r\\ncontract BecToken is PausableToken {\\r\\n    /**\\r\\n    * Public variables of the token\\r\\n    * The following variables are OPTIONAL vanities. One does not have to include them.\\r\\n    * They allow one to customise the token contract & in no way influences the core functionality.\\r\\n    * Some wallets/interfaces might not even bother to look at this information.\\r\\n    */\\r\\n    string public name = \\\"BeautyChain\\\";\\r\\n    string public symbol = \\\"BEC\\\";\\r\\n    string public version = '1.0.0';\\r\\n    uint8 public decimals = 18;\\r\\n\\r\\n    /**\\r\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n     */\\r\\n    constructor() {\\r\\n      totalSupply = 7000000000 * (10**(uint256(decimals)));\\r\\n      balances[msg.sender] = totalSupply;    // Give the creator all initial tokens\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2716ae512257148b716c05f5e0d13034bae47d0c26ba0381f7241b1776c8fff0\",\"license\":\"UNLICENSED\"}},\"version\":1}"}}},"sources":{"BecToken.sol":{"id":0}}}

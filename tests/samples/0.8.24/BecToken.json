{"contracts":{"BecToken.sol":{"BasicToken":{"evm":{"deployedBytecode":{"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806318160ddd1461004657806370a0823114610064578063a9059cbb14610094575b600080fd5b61004e6100c4565b60405161005b91906103a2565b60405180910390f35b61007e60048036038101906100799190610420565b6100ca565b60405161008b91906103a2565b60405180910390f35b6100ae60048036038101906100a99190610479565b610113565b6040516100bb91906104d4565b60405180910390f35b60005481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361014d57600080fd5b60008211801561019c5750600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211155b6101a557600080fd5b6101f782600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461033e90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061028c82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461036190919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161032c91906103a2565b60405180910390a36001905092915050565b60008282111561034d57600080fd5b8183610359919061051e565b905092915050565b60008082846103709190610552565b90508381101561037f57600080fd5b8091505092915050565b6000819050919050565b61039c81610389565b82525050565b60006020820190506103b76000830184610393565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103ed826103c2565b9050919050565b6103fd816103e2565b811461040857600080fd5b50565b60008135905061041a816103f4565b92915050565b600060208284031215610436576104356103bd565b5b60006104448482850161040b565b91505092915050565b61045681610389565b811461046157600080fd5b50565b6000813590506104738161044d565b92915050565b600080604083850312156104905761048f6103bd565b5b600061049e8582860161040b565b92505060206104af85828601610464565b9150509250929050565b60008115159050919050565b6104ce816104b9565b82525050565b60006020820190506104e960008301846104c5565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061052982610389565b915061053483610389565b925082820390508181111561054c5761054b6104ef565b5b92915050565b600061055d82610389565b915061056883610389565b92508282019050808211156105805761057f6104ef565b5b9291505056fea26469706673582212206a1a3ed2344c3acf810263967748fb92f819480369beec373f8a3262f96a19bd64736f6c634300081a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x18160DDD EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x420 JUMP JUMPDEST PUSH2 0xCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x479 JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x19C JUMPI POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F7 DUP3 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x33E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x28C DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x361 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x51E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x552 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39C DUP2 PUSH2 0x389 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x393 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ED DUP3 PUSH2 0x3C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FD DUP2 PUSH2 0x3E2 JUMP JUMPDEST DUP2 EQ PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x41A DUP2 PUSH2 0x3F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x436 JUMPI PUSH2 0x435 PUSH2 0x3BD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x444 DUP5 DUP3 DUP6 ADD PUSH2 0x40B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x456 DUP2 PUSH2 0x389 JUMP JUMPDEST DUP2 EQ PUSH2 0x461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x473 DUP2 PUSH2 0x44D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x490 JUMPI PUSH2 0x48F PUSH2 0x3BD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x49E DUP6 DUP3 DUP7 ADD PUSH2 0x40B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4AF DUP6 DUP3 DUP7 ADD PUSH2 0x464 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4CE DUP2 PUSH2 0x4B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4E9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x529 DUP3 PUSH2 0x389 JUMP JUMPDEST SWAP2 POP PUSH2 0x534 DUP4 PUSH2 0x389 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x54C JUMPI PUSH2 0x54B PUSH2 0x4EF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55D DUP3 PUSH2 0x389 JUMP JUMPDEST SWAP2 POP PUSH2 0x568 DUP4 PUSH2 0x389 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x580 JUMPI PUSH2 0x57F PUSH2 0x4EF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x1A3ED2344C3ACF81026396 PUSH24 0x48FB92F819480369BEEC373F8A3262F96A19BD64736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ","sourceMap":"1620:1032:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1263:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2531:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1890:424;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1263:26;;;;:::o;2531:118::-;2596:15;2627:8;:16;2636:6;2627:16;;;;;;;;;;;;;;;;2620:23;;2531:118;;;:::o;1890:424::-;1970:4;2006:1;1991:17;;:3;:17;;;1983:26;;;;;;2033:1;2024:6;:10;:44;;;;;2048:8;:20;2057:10;2048:20;;;;;;;;;;;;;;;;2038:6;:30;;2024:44;2016:53;;;;;;2165:32;2190:6;2165:8;:20;2174:10;2165:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;2142:8;:20;2151:10;2142:20;;;;;;;;;;;;;;;:55;;;;2220:25;2238:6;2220:8;:13;2229:3;2220:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;2204:8;:13;2213:3;2204:13;;;;;;;;;;;;;;;:41;;;;2278:3;2257:33;;2266:10;2257:33;;;2283:6;2257:33;;;;;;:::i;:::-;;;;;;;;2304:4;2297:11;;1890:424;;;;:::o;835:114::-;893:7;922:1;917;:6;;909:15;;;;;;942:1;938;:5;;;;:::i;:::-;931:12;;835:114;;;;:::o;955:134::-;1013:7;1029:9;1045:1;1041;:5;;;;:::i;:::-;1029:17;;1066:1;1061;:6;;1053:15;;;;;;1082:1;1075:8;;;955:134;;;;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:474::-;1952:6;1960;2009:2;1997:9;1988:7;1984:23;1980:32;1977:119;;;2015:79;;:::i;:::-;1977:119;2135:1;2160:53;2205:7;2196:6;2185:9;2181:22;2160:53;:::i;:::-;2150:63;;2106:117;2262:2;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2233:118;1884:474;;;;;:::o;2364:90::-;2398:7;2441:5;2434:13;2427:21;2416:32;;2364:90;;;:::o;2460:109::-;2541:21;2556:5;2541:21;:::i;:::-;2536:3;2529:34;2460:109;;:::o;2575:210::-;2662:4;2700:2;2689:9;2685:18;2677:26;;2713:65;2775:1;2764:9;2760:17;2751:6;2713:65;:::i;:::-;2575:210;;;;:::o;2791:180::-;2839:77;2836:1;2829:88;2936:4;2933:1;2926:15;2960:4;2957:1;2950:15;2977:194;3017:4;3037:20;3055:1;3037:20;:::i;:::-;3032:25;;3071:20;3089:1;3071:20;:::i;:::-;3066:25;;3115:1;3112;3108:9;3100:17;;3139:1;3133:4;3130:11;3127:37;;;3144:18;;:::i;:::-;3127:37;2977:194;;;;:::o;3177:191::-;3217:3;3236:20;3254:1;3236:20;:::i;:::-;3231:25;;3270:20;3288:1;3270:20;:::i;:::-;3265:25;;3313:1;3310;3306:9;3299:16;;3334:3;3331:1;3328:10;3325:36;;;3341:18;;:::i;:::-;3325:36;3177:191;;;;:::o"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Basic version of StandardToken, with no allowances.\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"_owner\":\"The address to query the the balance of.\"},\"returns\":{\"balance\":\"An uint256 representing the amount owned by the passed address.\"}},\"transfer(address,uint256)\":{\"details\":\"transfer token for a specified address\",\"params\":{\"_to\":\"The address to transfer to.\",\"_value\":\"The amount to be transferred.\"}}},\"title\":\"Basic token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BecToken.sol\":\"BasicToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BecToken.sol\":{\"content\":\"/*\\r\\n * @source: https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-101#bectokensol\\r\\n * Upgraded from Solidity 0.4 to 0.8, vulnerability may no longer exist\\r\\n * @author: -\\r\\n * @vulnerable_at_lines: 268\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n * @dev Math operations with safety checks that throw on error\\r\\n */\\r\\nlibrary SafeMath {\\r\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a * b;\\r\\n    require(a == 0 || c / a == b);\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    // require(b > 0); // Solidity automatically throws when dividing by 0\\r\\n    uint256 c = a / b;\\r\\n    // require(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    require(b <= a);\\r\\n    return a - b;\\r\\n  }\\r\\n\\r\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a + b;\\r\\n    require(c >= a);\\r\\n    return c;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20Basic\\r\\n * @dev Simpler version of ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/179\\r\\n */\\r\\nabstract contract ERC20Basic {\\r\\n  uint256 public totalSupply;\\r\\n  function balanceOf(address who) public view virtual returns (uint256);\\r\\n  function transfer(address to, uint256 value) public virtual returns (bool);\\r\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Basic token\\r\\n * @dev Basic version of StandardToken, with no allowances.\\r\\n */\\r\\ncontract BasicToken is ERC20Basic {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping(address => uint256) balances;\\r\\n\\r\\n  /**\\r\\n  * @dev transfer token for a specified address\\r\\n  * @param _to The address to transfer to.\\r\\n  * @param _value The amount to be transferred.\\r\\n  */\\r\\n  function transfer(address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[msg.sender]);\\r\\n\\r\\n    // SafeMath.sub will throw if there is not enough balance.\\r\\n    balances[msg.sender] = balances[msg.sender].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    emit Transfer(msg.sender, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev Gets the balance of the specified address.\\r\\n  * @param _owner The address to query the the balance of.\\r\\n  * @return balance An uint256 representing the amount owned by the passed address.\\r\\n  */\\r\\n  function balanceOf(address _owner) public view override returns (uint256 balance) {\\r\\n    return balances[_owner];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\r\\n */\\r\\nabstract contract ERC20 is ERC20Basic {\\r\\n  function allowance(address owner, address spender) public view virtual returns (uint256);\\r\\n  function transferFrom(address from, address to, uint256 value) public virtual returns (bool);\\r\\n  function approve(address spender, uint256 value) public virtual returns (bool);\\r\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * @title Standard ERC20 token\\r\\n *\\r\\n * @dev Implementation of the basic standard token.\\r\\n * @dev https://github.com/ethereum/EIPs/issues/20\\r\\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\r\\n */\\r\\ncontract StandardToken is ERC20, BasicToken {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping (address => mapping (address => uint256)) internal allowed;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Transfer tokens from one address to another\\r\\n   * @param _from address The address which you want to send tokens from\\r\\n   * @param _to address The address which you want to transfer to\\r\\n   * @param _value uint256 the amount of tokens to be transferred\\r\\n   */\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[_from]);\\r\\n    require(_value <= allowed[_from][msg.sender]);\\r\\n\\r\\n    balances[_from] = balances[_from].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\\r\\n    emit Transfer(_from, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r\\n   *\\r\\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\\r\\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r\\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n   * @param _spender The address which will spend the funds.\\r\\n   * @param _value The amount of tokens to be spent.\\r\\n   */\\r\\n  function approve(address _spender, uint256 _value) public override virtual returns (bool) {\\r\\n    allowed[msg.sender][_spender] = _value;\\r\\n    emit Approval(msg.sender, _spender, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n   * @param _owner address The address which owns the funds.\\r\\n   * @param _spender address The address which will spend the funds.\\r\\n   * @return remaining A uint256 specifying the amount of tokens still available for the spender.\\r\\n   */\\r\\n  function allowance(address _owner, address _spender) public view override returns (uint256 remaining) {\\r\\n    return allowed[_owner][_spender];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Ownable\\r\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\r\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\r\\n */\\r\\ncontract Ownable {\\r\\n  address public owner;\\r\\n\\r\\n\\r\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\r\\n   * account.\\r\\n   */\\r\\n  constructor() {\\r\\n    owner = msg.sender;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Throws if called by any account other than the owner.\\r\\n   */\\r\\n  modifier onlyOwner() {\\r\\n    require(msg.sender == owner);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\r\\n   * @param newOwner The address to transfer ownership to.\\r\\n   */\\r\\n  function transferOwnership(address newOwner) onlyOwner public {\\r\\n    require(newOwner != address(0));\\r\\n    emit OwnershipTransferred(owner, newOwner);\\r\\n    owner = newOwner;\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable\\r\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\r\\n */\\r\\ncontract Pausable is Ownable {\\r\\n  event Pause();\\r\\n  event Unpause();\\r\\n\\r\\n  bool public paused = false;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\r\\n   */\\r\\n  modifier whenNotPaused() {\\r\\n    require(!paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is paused.\\r\\n   */\\r\\n  modifier whenPaused() {\\r\\n    require(paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to pause, triggers stopped state\\r\\n   */\\r\\n  function pause() onlyOwner whenNotPaused public {\\r\\n    paused = true;\\r\\n    emit Pause();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to unpause, returns to normal state\\r\\n   */\\r\\n  function unpause() onlyOwner whenPaused public {\\r\\n    paused = false;\\r\\n    emit Unpause();\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable token\\r\\n *\\r\\n * @dev StandardToken modified with pausable transfers.\\r\\n **/\\r\\n\\r\\ncontract PausableToken is StandardToken, Pausable {\\r\\n  using SafeMath for uint256;\\r\\n  \\r\\n  function transfer(address _to, uint256 _value) public whenNotPaused override(BasicToken,ERC20Basic) returns (bool) {\\r\\n    return super.transfer(_to, _value);\\r\\n  }\\r\\n\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.transferFrom(_from, _to, _value);\\r\\n  }\\r\\n\\r\\n  function approve(address _spender, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.approve(_spender, _value);\\r\\n  }\\r\\n\\r\\n  function batchTransfer(address[] memory _receivers, uint256 _value) public whenNotPaused returns (bool) {\\r\\n    uint cnt = _receivers.length;\\r\\n    // <yes> <report> ARITHMETIC\\r\\n    uint256 amount = uint256(cnt) * _value;\\r\\n    require(cnt > 0 && cnt <= 20);\\r\\n    require(_value > 0 && balances[msg.sender] >= amount);\\r\\n\\r\\n    balances[msg.sender] = balances[msg.sender].sub(amount);\\r\\n    for (uint i = 0; i < cnt; i++) {\\r\\n        balances[_receivers[i]] = balances[_receivers[i]].add(_value);\\r\\n        emit Transfer(msg.sender, _receivers[i], _value);\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Bec Token\\r\\n *\\r\\n * @dev Implementation of Bec Token based on the basic standard token.\\r\\n */\\r\\ncontract BecToken is PausableToken {\\r\\n    /**\\r\\n    * Public variables of the token\\r\\n    * The following variables are OPTIONAL vanities. One does not have to include them.\\r\\n    * They allow one to customise the token contract & in no way influences the core functionality.\\r\\n    * Some wallets/interfaces might not even bother to look at this information.\\r\\n    */\\r\\n    string public name = \\\"BeautyChain\\\";\\r\\n    string public symbol = \\\"BEC\\\";\\r\\n    string public version = '1.0.0';\\r\\n    uint8 public decimals = 18;\\r\\n\\r\\n    /**\\r\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n     */\\r\\n    constructor() {\\r\\n      totalSupply = 7000000000 * (10**(uint256(decimals)));\\r\\n      balances[msg.sender] = totalSupply;    // Give the creator all initial tokens\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2716ae512257148b716c05f5e0d13034bae47d0c26ba0381f7241b1776c8fff0\",\"license\":\"UNLICENSED\"}},\"version\":1}"},"BecToken":{"evm":{"deployedBytecode":{"object":"608060405234801561001057600080fd5b50600436106101005760003560e01c806370a082311161009757806395d89b411161006657806395d89b411461028d578063a9059cbb146102ab578063dd62ed3e146102db578063f2fde38b1461030b57610100565b806370a082311461020557806383f12fec146102355780638456cb59146102655780638da5cb5b1461026f57610100565b8063313ce567116100d3578063313ce567146101a15780633f4ba83a146101bf57806354fd4d50146101c95780635c975abb146101e757610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d610327565b60405161011a91906113ad565b60405180910390f35b61013d60048036038101906101389190611477565b6103b5565b60405161014a91906114d2565b60405180910390f35b61015b6103e3565b60405161016891906114fc565b60405180910390f35b61018b60048036038101906101869190611517565b6103e9565b60405161019891906114d2565b60405180910390f35b6101a9610419565b6040516101b69190611586565b60405180910390f35b6101c761042c565b005b6101d16104e8565b6040516101de91906113ad565b60405180910390f35b6101ef610576565b6040516101fc91906114d2565b60405180910390f35b61021f600480360381019061021a91906115a1565b610589565b60405161022c91906114fc565b60405180910390f35b61024f600480360381019061024a9190611716565b6105d2565b60405161025c91906114d2565b60405180910390f35b61026d610878565b005b610277610935565b6040516102849190611781565b60405180910390f35b61029561095b565b6040516102a291906113ad565b60405180910390f35b6102c560048036038101906102c09190611477565b6109e9565b6040516102d291906114d2565b60405180910390f35b6102f560048036038101906102f0919061179c565b610a17565b60405161030291906114fc565b60405180910390f35b610325600480360381019061032091906115a1565b610a9e565b005b600480546103349061180b565b80601f01602080910402602001604051908101604052809291908181526020018280546103609061180b565b80156103ad5780601f10610382576101008083540402835291602001916103ad565b820191906000526020600020905b81548152906001019060200180831161039057829003601f168201915b505050505081565b6000600360149054906101000a900460ff16156103d157600080fd5b6103db8383610bf1565b905092915050565b60005481565b6000600360149054906101000a900460ff161561040557600080fd5b610410848484610ce3565b90509392505050565b600760009054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461048657600080fd5b600360149054906101000a900460ff1661049f57600080fd5b6000600360146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600680546104f59061180b565b80601f01602080910402602001604051908101604052809291908181526020018280546105219061180b565b801561056e5780601f106105435761010080835404028352916020019161056e565b820191906000526020600020905b81548152906001019060200180831161055157829003601f168201915b505050505081565b600360149054906101000a900460ff1681565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600360149054906101000a900460ff16156105ee57600080fd5b60008351905060008382610602919061186b565b9050600082118015610615575060148211155b61061e57600080fd5b60008411801561066d575080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b61067657600080fd5b6106c881600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110a790919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060005b8281101561086b576107828560016000898581518110610731576107306118ad565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110ca90919063ffffffff16565b60016000888481518110610799576107986118ad565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508581815181106107f2576107f16118ad565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8760405161085691906114fc565b60405180910390a3808060010191505061070e565b5060019250505092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108d257600080fd5b600360149054906101000a900460ff16156108ec57600080fd5b6001600360146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600580546109689061180b565b80601f01602080910402602001604051908101604052809291908181526020018280546109949061180b565b80156109e15780601f106109b6576101008083540402835291602001916109e1565b820191906000526020600020905b8154815290600101906020018083116109c457829003601f168201915b505050505081565b6000600360149054906101000a900460ff1615610a0557600080fd5b610a0f83836110f2565b905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610af857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b3157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610cd191906114fc565b60405180910390a36001905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d1d57600080fd5b600082118015610d6c5750600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211155b610d7557600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610dfe57600080fd5b610e5082600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110a790919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ee582600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110ca90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610fb782600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110a790919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161109491906114fc565b60405180910390a3600190509392505050565b6000828211156110b657600080fd5b81836110c291906118dc565b905092915050565b60008082846110d99190611910565b9050838110156110e857600080fd5b8091505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361112c57600080fd5b60008211801561117b5750600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211155b61118457600080fd5b6111d682600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110a790919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061126b82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110ca90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161130b91906114fc565b60405180910390a36001905092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561135757808201518184015260208101905061133c565b60008484015250505050565b6000601f19601f8301169050919050565b600061137f8261131d565b6113898185611328565b9350611399818560208601611339565b6113a281611363565b840191505092915050565b600060208201905081810360008301526113c78184611374565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061140e826113e3565b9050919050565b61141e81611403565b811461142957600080fd5b50565b60008135905061143b81611415565b92915050565b6000819050919050565b61145481611441565b811461145f57600080fd5b50565b6000813590506114718161144b565b92915050565b6000806040838503121561148e5761148d6113d9565b5b600061149c8582860161142c565b92505060206114ad85828601611462565b9150509250929050565b60008115159050919050565b6114cc816114b7565b82525050565b60006020820190506114e760008301846114c3565b92915050565b6114f681611441565b82525050565b600060208201905061151160008301846114ed565b92915050565b6000806000606084860312156115305761152f6113d9565b5b600061153e8682870161142c565b935050602061154f8682870161142c565b925050604061156086828701611462565b9150509250925092565b600060ff82169050919050565b6115808161156a565b82525050565b600060208201905061159b6000830184611577565b92915050565b6000602082840312156115b7576115b66113d9565b5b60006115c58482850161142c565b91505092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61160b82611363565b810181811067ffffffffffffffff8211171561162a576116296115d3565b5b80604052505050565b600061163d6113cf565b90506116498282611602565b919050565b600067ffffffffffffffff821115611669576116686115d3565b5b602082029050602081019050919050565b600080fd5b600061169261168d8461164e565b611633565b905080838252602082019050602084028301858111156116b5576116b461167a565b5b835b818110156116de57806116ca888261142c565b8452602084019350506020810190506116b7565b5050509392505050565b600082601f8301126116fd576116fc6115ce565b5b813561170d84826020860161167f565b91505092915050565b6000806040838503121561172d5761172c6113d9565b5b600083013567ffffffffffffffff81111561174b5761174a6113de565b5b611757858286016116e8565b925050602061176885828601611462565b9150509250929050565b61177b81611403565b82525050565b60006020820190506117966000830184611772565b92915050565b600080604083850312156117b3576117b26113d9565b5b60006117c18582860161142c565b92505060206117d28582860161142c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061182357607f821691505b602082108103611836576118356117dc565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061187682611441565b915061188183611441565b925082820261188f81611441565b915082820484148315176118a6576118a561183c565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006118e782611441565b91506118f283611441565b925082820390508181111561190a5761190961183c565b5b92915050565b600061191b82611441565b915061192683611441565b925082820190508082111561193e5761193d61183c565b5b9291505056fea2646970667358221220e0c671a4e66e589373f52d3e96bd8b99b56d83b64751213ded7115b5d9b0417664736f6c634300081a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30B JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x83F12FEC EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1E7 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x327 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1477 JUMP JUMPDEST PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x14D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x3E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x1517 JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x14D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x1586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0x42C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D1 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH2 0x576 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x14D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x589 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x1716 JUMP JUMPDEST PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x14D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x878 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x277 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x1781 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH2 0x95B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x1477 JUMP JUMPDEST PUSH2 0x9E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x14D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x179C JUMP JUMPDEST PUSH2 0xA17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0xA9E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x334 SWAP1 PUSH2 0x180B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x360 SWAP1 PUSH2 0x180B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x382 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3AD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x390 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3DB DUP4 DUP4 PUSH2 0xBF1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x410 DUP5 DUP5 DUP5 PUSH2 0xCE3 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x4F5 SWAP1 PUSH2 0x180B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x521 SWAP1 PUSH2 0x180B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x56E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x543 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x551 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x5EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD SWAP1 POP PUSH1 0x0 DUP4 DUP3 PUSH2 0x602 SWAP2 SWAP1 PUSH2 0x186B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x615 JUMPI POP PUSH1 0x14 DUP3 GT ISZERO JUMPDEST PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 GT DUP1 ISZERO PUSH2 0x66D JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO JUMPDEST PUSH2 0x676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6C8 DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x10A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x86B JUMPI PUSH2 0x782 DUP6 PUSH1 0x1 PUSH1 0x0 DUP10 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x731 JUMPI PUSH2 0x730 PUSH2 0x18AD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x10CA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x799 JUMPI PUSH2 0x798 PUSH2 0x18AD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x7F2 JUMPI PUSH2 0x7F1 PUSH2 0x18AD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP8 PUSH1 0x40 MLOAD PUSH2 0x856 SWAP2 SWAP1 PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x70E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x968 SWAP1 PUSH2 0x180B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x994 SWAP1 PUSH2 0x180B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0F DUP4 DUP4 PUSH2 0x10F2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCD1 SWAP2 SWAP1 PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0xD6C JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xDFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE50 DUP3 PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x10A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xEE5 DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x10CA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xFB7 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x10A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1094 SWAP2 SWAP1 PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x10B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0x10C2 SWAP2 SWAP1 PUSH2 0x18DC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x10D9 SWAP2 SWAP1 PUSH2 0x1910 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x10E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x112C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x117B JUMPI POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x1184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11D6 DUP3 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x10A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x126B DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x10CA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x130B SWAP2 SWAP1 PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1357 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x133C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x137F DUP3 PUSH2 0x131D JUMP JUMPDEST PUSH2 0x1389 DUP2 DUP6 PUSH2 0x1328 JUMP JUMPDEST SWAP4 POP PUSH2 0x1399 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1339 JUMP JUMPDEST PUSH2 0x13A2 DUP2 PUSH2 0x1363 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13C7 DUP2 DUP5 PUSH2 0x1374 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140E DUP3 PUSH2 0x13E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x141E DUP2 PUSH2 0x1403 JUMP JUMPDEST DUP2 EQ PUSH2 0x1429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x143B DUP2 PUSH2 0x1415 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1454 DUP2 PUSH2 0x1441 JUMP JUMPDEST DUP2 EQ PUSH2 0x145F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1471 DUP2 PUSH2 0x144B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x148E JUMPI PUSH2 0x148D PUSH2 0x13D9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x149C DUP6 DUP3 DUP7 ADD PUSH2 0x142C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14AD DUP6 DUP3 DUP7 ADD PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14CC DUP2 PUSH2 0x14B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14E7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14F6 DUP2 PUSH2 0x1441 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1511 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1530 JUMPI PUSH2 0x152F PUSH2 0x13D9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x153E DUP7 DUP3 DUP8 ADD PUSH2 0x142C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x154F DUP7 DUP3 DUP8 ADD PUSH2 0x142C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1560 DUP7 DUP3 DUP8 ADD PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1580 DUP2 PUSH2 0x156A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x159B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1577 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15B7 JUMPI PUSH2 0x15B6 PUSH2 0x13D9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15C5 DUP5 DUP3 DUP6 ADD PUSH2 0x142C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x160B DUP3 PUSH2 0x1363 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x162A JUMPI PUSH2 0x1629 PUSH2 0x15D3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x163D PUSH2 0x13CF JUMP JUMPDEST SWAP1 POP PUSH2 0x1649 DUP3 DUP3 PUSH2 0x1602 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1669 JUMPI PUSH2 0x1668 PUSH2 0x15D3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1692 PUSH2 0x168D DUP5 PUSH2 0x164E JUMP JUMPDEST PUSH2 0x1633 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x16B5 JUMPI PUSH2 0x16B4 PUSH2 0x167A JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16DE JUMPI DUP1 PUSH2 0x16CA DUP9 DUP3 PUSH2 0x142C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16B7 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16FD JUMPI PUSH2 0x16FC PUSH2 0x15CE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x170D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x167F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x172D JUMPI PUSH2 0x172C PUSH2 0x13D9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x174B JUMPI PUSH2 0x174A PUSH2 0x13DE JUMP JUMPDEST JUMPDEST PUSH2 0x1757 DUP6 DUP3 DUP7 ADD PUSH2 0x16E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1768 DUP6 DUP3 DUP7 ADD PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x177B DUP2 PUSH2 0x1403 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1796 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1772 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17B3 JUMPI PUSH2 0x17B2 PUSH2 0x13D9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17C1 DUP6 DUP3 DUP7 ADD PUSH2 0x142C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17D2 DUP6 DUP3 DUP7 ADD PUSH2 0x142C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1823 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1836 JUMPI PUSH2 0x1835 PUSH2 0x17DC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1876 DUP3 PUSH2 0x1441 JUMP JUMPDEST SWAP2 POP PUSH2 0x1881 DUP4 PUSH2 0x1441 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x188F DUP2 PUSH2 0x1441 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x18A6 JUMPI PUSH2 0x18A5 PUSH2 0x183C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18E7 DUP3 PUSH2 0x1441 JUMP JUMPDEST SWAP2 POP PUSH2 0x18F2 DUP4 PUSH2 0x1441 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x190A JUMPI PUSH2 0x1909 PUSH2 0x183C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x191B DUP3 PUSH2 0x1441 JUMP JUMPDEST SWAP2 POP PUSH2 0x1926 DUP4 PUSH2 0x1441 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x193E JUMPI PUSH2 0x193D PUSH2 0x183C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xC6 PUSH18 0xA4E66E589373F52D3E96BD8B99B56D83B647 MLOAD 0x21 RETURNDATASIZE 0xED PUSH18 0x15B5D9B0417664736F6C634300081A003300 ","sourceMap":"8988:794:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9356:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8143:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1263:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7968:169;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9470:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7508:95;;;:::i;:::-;;9432:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6887:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2531:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8296:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7328:93;;;:::i;:::-;;5897:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9397:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7800:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5526:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6509:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9356:34;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8143:147::-;8233:4;7063:6;;;;;;;;;;;7062:7;7054:16;;;;;;8253:31:::1;8267:8;8277:6;8253:13;:31::i;:::-;8246:38;;8143:147:::0;;;;:::o;1263:26::-;;;;:::o;7968:169::-;8073:4;7063:6;;;;;;;;;;;7062:7;7054:16;;;;;;8093:38:::1;8112:5;8119:3;8124:6;8093:18;:38::i;:::-;8086:45;;7968:169:::0;;;;;:::o;9470:26::-;;;;;;;;;;;;;:::o;7508:95::-;6320:5;;;;;;;;;;;6306:19;;:10;:19;;;6298:28;;;;;;7223:6:::1;;;;;;;;;;;7215:15;;;::::0;::::1;;7571:5:::2;7562:6;;:14;;;;;;;;;;;;;;;;;;7588:9;;;;;;;;;;7508:95::o:0;9432:31::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6887:26::-;;;;;;;;;;;;;:::o;2531:118::-;2596:15;2627:8;:16;2636:6;2627:16;;;;;;;;;;;;;;;;2620:23;;2531:118;;;:::o;8296:578::-;8394:4;7063:6;;;;;;;;;;;7062:7;7054:16;;;;;;8407:8:::1;8418:10;:17;8407:28;;8476:14;8508:6;8501:3;8493:21;;;;:::i;:::-;8476:38;;8535:1;8529:3;:7;:20;;;;;8547:2;8540:3;:9;;8529:20;8521:29;;;::::0;::::1;;8574:1;8565:6;:10;:44;;;;;8603:6;8579:8;:20;8588:10;8579:20;;;;;;;;;;;;;;;;:30;;8565:44;8557:53;;;::::0;::::1;;8642:32;8667:6;8642:8;:20;8651:10;8642:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;8619:8;:20;8628:10;8619:20;;;;;;;;;;;;;;;:55;;;;8686:6;8681:170;8702:3;8698:1;:7;8681:170;;;8749:35;8777:6;8749:8;:23;8758:10;8769:1;8758:13;;;;;;;;:::i;:::-;;;;;;;;8749:23;;;;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;8723:8;:23;8732:10;8743:1;8732:13;;;;;;;;:::i;:::-;;;;;;;;8723:23;;;;;;;;;;;;;;;:61;;;;8821:10;8832:1;8821:13;;;;;;;;:::i;:::-;;;;;;;;8800:43;;8809:10;8800:43;;;8836:6;8800:43;;;;;;:::i;:::-;;;;;;;;8707:3;;;;;;;8681:170;;;;8864:4;8857:11;;;;8296:578:::0;;;;:::o;7328:93::-;6320:5;;;;;;;;;;;6306:19;;:10;:19;;;6298:28;;;;;;7063:6:::1;;;;;;;;;;;7062:7;7054:16;;;::::0;::::1;;7392:4:::2;7383:6;;:13;;;;;;;;;;;;;;;;;;7408:7;;;;;;;;;;7328:93::o:0;5897:20::-;;;;;;;;;;;;;:::o;9397:28::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7800:162::-;7909:4;7063:6;;;;;;;;;;;7062:7;7054:16;;;;;;7929:27:::1;7944:3;7949:6;7929:14;:27::i;:::-;7922:34;;7800:162:::0;;;;:::o;5526:147::-;5609:17;5642:7;:15;5650:6;5642:15;;;;;;;;;;;;;;;:25;5658:8;5642:25;;;;;;;;;;;;;;;;5635:32;;5526:147;;;;:::o;6509:178::-;6320:5;;;;;;;;;;;6306:19;;:10;:19;;;6298:28;;;;;;6606:1:::1;6586:22;;:8;:22;;::::0;6578:31:::1;;;::::0;::::1;;6649:8;6621:37;;6642:5;;;;;;;;;;;6621:37;;;;;;;;;;;;6673:8;6665:5;;:16;;;;;;;;;;;;;;;;;;6509:178:::0;:::o;4980:209::-;5064:4;5109:6;5077:7;:19;5085:10;5077:19;;;;;;;;;;;;;;;:29;5097:8;5077:29;;;;;;;;;;;;;;;:38;;;;5148:8;5127:38;;5136:10;5127:38;;;5158:6;5127:38;;;;;;:::i;:::-;;;;;;;;5179:4;5172:11;;4980:209;;;;:::o;3860:485::-;3959:4;3995:1;3980:17;;:3;:17;;;3972:26;;;;;;4022:1;4013:6;:10;:39;;;;;4037:8;:15;4046:5;4037:15;;;;;;;;;;;;;;;;4027:6;:25;;4013:39;4005:48;;;;;;4078:7;:14;4086:5;4078:14;;;;;;;;;;;;;;;:26;4093:10;4078:26;;;;;;;;;;;;;;;;4068:6;:36;;4060:45;;;;;;4132:27;4152:6;4132:8;:15;4141:5;4132:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;4114:8;:15;4123:5;4114:15;;;;;;;;;;;;;;;:45;;;;4182:25;4200:6;4182:8;:13;4191:3;4182:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;4166:8;:13;4175:3;4166:13;;;;;;;;;;;;;;;:41;;;;4243:38;4274:6;4243:7;:14;4251:5;4243:14;;;;;;;;;;;;;;;:26;4258:10;4243:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;4214:7;:14;4222:5;4214:14;;;;;;;;;;;;;;;:26;4229:10;4214:26;;;;;;;;;;;;;;;:67;;;;4309:3;4293:28;;4302:5;4293:28;;;4314:6;4293:28;;;;;;:::i;:::-;;;;;;;;4335:4;4328:11;;3860:485;;;;;:::o;835:114::-;893:7;922:1;917;:6;;909:15;;;;;;942:1;938;:5;;;;:::i;:::-;931:12;;835:114;;;;:::o;955:134::-;1013:7;1029:9;1045:1;1041;:5;;;;:::i;:::-;1029:17;;1066:1;1061;:6;;1053:15;;;;;;1082:1;1075:8;;;955:134;;;;:::o;1890:424::-;1970:4;2006:1;1991:17;;:3;:17;;;1983:26;;;;;;2033:1;2024:6;:10;:44;;;;;2048:8;:20;2057:10;2048:20;;;;;;;;;;;;;;;;2038:6;:30;;2024:44;2016:53;;;;;;2165:32;2190:6;2165:8;:20;2174:10;2165:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;2142:8;:20;2151:10;2142:20;;;;;;;;;;;;;;;:55;;;;2220:25;2238:6;2220:8;:13;2229:3;2220:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;2204:8;:13;2213:3;2204:13;;;;;;;;;;;;;;;:41;;;;2278:3;2257:33;;2266:10;2257:33;;;2283:6;2257:33;;;;;;:::i;:::-;;;;;;;;2304:4;2297:11;;1890:424;;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1351:75::-;1384:6;1417:2;1411:9;1401:19;;1351:75;:::o;1432:117::-;1541:1;1538;1531:12;1555:117;1664:1;1661;1654:12;1678:126;1715:7;1755:42;1748:5;1744:54;1733:65;;1678:126;;;:::o;1810:96::-;1847:7;1876:24;1894:5;1876:24;:::i;:::-;1865:35;;1810:96;;;:::o;1912:122::-;1985:24;2003:5;1985:24;:::i;:::-;1978:5;1975:35;1965:63;;2024:1;2021;2014:12;1965:63;1912:122;:::o;2040:139::-;2086:5;2124:6;2111:20;2102:29;;2140:33;2167:5;2140:33;:::i;:::-;2040:139;;;;:::o;2185:77::-;2222:7;2251:5;2240:16;;2185:77;;;:::o;2268:122::-;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:474::-;2609:6;2617;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2792:1;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2763:117;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2541:474;;;;;:::o;3021:90::-;3055:7;3098:5;3091:13;3084:21;3073:32;;3021:90;;;:::o;3117:109::-;3198:21;3213:5;3198:21;:::i;:::-;3193:3;3186:34;3117:109;;:::o;3232:210::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:65;3432:1;3421:9;3417:17;3408:6;3370:65;:::i;:::-;3232:210;;;;:::o;3448:118::-;3535:24;3553:5;3535:24;:::i;:::-;3530:3;3523:37;3448:118;;:::o;3572:222::-;3665:4;3703:2;3692:9;3688:18;3680:26;;3716:71;3784:1;3773:9;3769:17;3760:6;3716:71;:::i;:::-;3572:222;;;;:::o;3800:619::-;3877:6;3885;3893;3942:2;3930:9;3921:7;3917:23;3913:32;3910:119;;;3948:79;;:::i;:::-;3910:119;4068:1;4093:53;4138:7;4129:6;4118:9;4114:22;4093:53;:::i;:::-;4083:63;;4039:117;4195:2;4221:53;4266:7;4257:6;4246:9;4242:22;4221:53;:::i;:::-;4211:63;;4166:118;4323:2;4349:53;4394:7;4385:6;4374:9;4370:22;4349:53;:::i;:::-;4339:63;;4294:118;3800:619;;;;;:::o;4425:86::-;4460:7;4500:4;4493:5;4489:16;4478:27;;4425:86;;;:::o;4517:112::-;4600:22;4616:5;4600:22;:::i;:::-;4595:3;4588:35;4517:112;;:::o;4635:214::-;4724:4;4762:2;4751:9;4747:18;4739:26;;4775:67;4839:1;4828:9;4824:17;4815:6;4775:67;:::i;:::-;4635:214;;;;:::o;4855:329::-;4914:6;4963:2;4951:9;4942:7;4938:23;4934:32;4931:119;;;4969:79;;:::i;:::-;4931:119;5089:1;5114:53;5159:7;5150:6;5139:9;5135:22;5114:53;:::i;:::-;5104:63;;5060:117;4855:329;;;;:::o;5190:117::-;5299:1;5296;5289:12;5313:180;5361:77;5358:1;5351:88;5458:4;5455:1;5448:15;5482:4;5479:1;5472:15;5499:281;5582:27;5604:4;5582:27;:::i;:::-;5574:6;5570:40;5712:6;5700:10;5697:22;5676:18;5664:10;5661:34;5658:62;5655:88;;;5723:18;;:::i;:::-;5655:88;5763:10;5759:2;5752:22;5542:238;5499:281;;:::o;5786:129::-;5820:6;5847:20;;:::i;:::-;5837:30;;5876:33;5904:4;5896:6;5876:33;:::i;:::-;5786:129;;;:::o;5921:311::-;5998:4;6088:18;6080:6;6077:30;6074:56;;;6110:18;;:::i;:::-;6074:56;6160:4;6152:6;6148:17;6140:25;;6220:4;6214;6210:15;6202:23;;5921:311;;;:::o;6238:117::-;6347:1;6344;6337:12;6378:710;6474:5;6499:81;6515:64;6572:6;6515:64;:::i;:::-;6499:81;:::i;:::-;6490:90;;6600:5;6629:6;6622:5;6615:21;6663:4;6656:5;6652:16;6645:23;;6716:4;6708:6;6704:17;6696:6;6692:30;6745:3;6737:6;6734:15;6731:122;;;6764:79;;:::i;:::-;6731:122;6879:6;6862:220;6896:6;6891:3;6888:15;6862:220;;;6971:3;7000:37;7033:3;7021:10;7000:37;:::i;:::-;6995:3;6988:50;7067:4;7062:3;7058:14;7051:21;;6938:144;6922:4;6917:3;6913:14;6906:21;;6862:220;;;6866:21;6480:608;;6378:710;;;;;:::o;7111:370::-;7182:5;7231:3;7224:4;7216:6;7212:17;7208:27;7198:122;;7239:79;;:::i;:::-;7198:122;7356:6;7343:20;7381:94;7471:3;7463:6;7456:4;7448:6;7444:17;7381:94;:::i;:::-;7372:103;;7188:293;7111:370;;;;:::o;7487:684::-;7580:6;7588;7637:2;7625:9;7616:7;7612:23;7608:32;7605:119;;;7643:79;;:::i;:::-;7605:119;7791:1;7780:9;7776:17;7763:31;7821:18;7813:6;7810:30;7807:117;;;7843:79;;:::i;:::-;7807:117;7948:78;8018:7;8009:6;7998:9;7994:22;7948:78;:::i;:::-;7938:88;;7734:302;8075:2;8101:53;8146:7;8137:6;8126:9;8122:22;8101:53;:::i;:::-;8091:63;;8046:118;7487:684;;;;;:::o;8177:118::-;8264:24;8282:5;8264:24;:::i;:::-;8259:3;8252:37;8177:118;;:::o;8301:222::-;8394:4;8432:2;8421:9;8417:18;8409:26;;8445:71;8513:1;8502:9;8498:17;8489:6;8445:71;:::i;:::-;8301:222;;;;:::o;8529:474::-;8597:6;8605;8654:2;8642:9;8633:7;8629:23;8625:32;8622:119;;;8660:79;;:::i;:::-;8622:119;8780:1;8805:53;8850:7;8841:6;8830:9;8826:22;8805:53;:::i;:::-;8795:63;;8751:117;8907:2;8933:53;8978:7;8969:6;8958:9;8954:22;8933:53;:::i;:::-;8923:63;;8878:118;8529:474;;;;;:::o;9009:180::-;9057:77;9054:1;9047:88;9154:4;9151:1;9144:15;9178:4;9175:1;9168:15;9195:320;9239:6;9276:1;9270:4;9266:12;9256:22;;9323:1;9317:4;9313:12;9344:18;9334:81;;9400:4;9392:6;9388:17;9378:27;;9334:81;9462:2;9454:6;9451:14;9431:18;9428:38;9425:84;;9481:18;;:::i;:::-;9425:84;9246:269;9195:320;;;:::o;9521:180::-;9569:77;9566:1;9559:88;9666:4;9663:1;9656:15;9690:4;9687:1;9680:15;9707:410;9747:7;9770:20;9788:1;9770:20;:::i;:::-;9765:25;;9804:20;9822:1;9804:20;:::i;:::-;9799:25;;9859:1;9856;9852:9;9881:30;9899:11;9881:30;:::i;:::-;9870:41;;10060:1;10051:7;10047:15;10044:1;10041:22;10021:1;10014:9;9994:83;9971:139;;10090:18;;:::i;:::-;9971:139;9755:362;9707:410;;;;:::o;10123:180::-;10171:77;10168:1;10161:88;10268:4;10265:1;10258:15;10292:4;10289:1;10282:15;10309:194;10349:4;10369:20;10387:1;10369:20;:::i;:::-;10364:25;;10403:20;10421:1;10403:20;:::i;:::-;10398:25;;10447:1;10444;10440:9;10432:17;;10471:1;10465:4;10462:11;10459:37;;;10476:18;;:::i;:::-;10459:37;10309:194;;;;:::o;10509:191::-;10549:3;10568:20;10586:1;10568:20;:::i;:::-;10563:25;;10602:20;10620:1;10602:20;:::i;:::-;10597:25;;10645:1;10642;10638:9;10631:16;;10666:3;10663:1;10660:10;10657:36;;;10673:18;;:::i;:::-;10657:36;10509:191;;;;:::o"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"batchTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of Bec Token based on the basic standard token.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"_owner\":\"address The address which owns the funds.\",\"_spender\":\"address The address which will spend the funds.\"},\"returns\":{\"remaining\":\"A uint256 specifying the amount of tokens still available for the spender.\"}},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"_owner\":\"The address to query the the balance of.\"},\"returns\":{\"balance\":\"An uint256 representing the amount owned by the passed address.\"}},\"constructor\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\"},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"_from\":\"address The address which you want to send tokens from\",\"_to\":\"address The address which you want to transfer to\",\"_value\":\"uint256 the amount of tokens to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}},\"title\":\"Bec Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"name()\":{\"notice\":\"Public variables of the token The following variables are OPTIONAL vanities. One does not have to include them. They allow one to customise the token contract & in no way influences the core functionality. Some wallets/interfaces might not even bother to look at this information.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BecToken.sol\":\"BecToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BecToken.sol\":{\"content\":\"/*\\r\\n * @source: https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-101#bectokensol\\r\\n * Upgraded from Solidity 0.4 to 0.8, vulnerability may no longer exist\\r\\n * @author: -\\r\\n * @vulnerable_at_lines: 268\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n * @dev Math operations with safety checks that throw on error\\r\\n */\\r\\nlibrary SafeMath {\\r\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a * b;\\r\\n    require(a == 0 || c / a == b);\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    // require(b > 0); // Solidity automatically throws when dividing by 0\\r\\n    uint256 c = a / b;\\r\\n    // require(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    require(b <= a);\\r\\n    return a - b;\\r\\n  }\\r\\n\\r\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a + b;\\r\\n    require(c >= a);\\r\\n    return c;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20Basic\\r\\n * @dev Simpler version of ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/179\\r\\n */\\r\\nabstract contract ERC20Basic {\\r\\n  uint256 public totalSupply;\\r\\n  function balanceOf(address who) public view virtual returns (uint256);\\r\\n  function transfer(address to, uint256 value) public virtual returns (bool);\\r\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Basic token\\r\\n * @dev Basic version of StandardToken, with no allowances.\\r\\n */\\r\\ncontract BasicToken is ERC20Basic {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping(address => uint256) balances;\\r\\n\\r\\n  /**\\r\\n  * @dev transfer token for a specified address\\r\\n  * @param _to The address to transfer to.\\r\\n  * @param _value The amount to be transferred.\\r\\n  */\\r\\n  function transfer(address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[msg.sender]);\\r\\n\\r\\n    // SafeMath.sub will throw if there is not enough balance.\\r\\n    balances[msg.sender] = balances[msg.sender].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    emit Transfer(msg.sender, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev Gets the balance of the specified address.\\r\\n  * @param _owner The address to query the the balance of.\\r\\n  * @return balance An uint256 representing the amount owned by the passed address.\\r\\n  */\\r\\n  function balanceOf(address _owner) public view override returns (uint256 balance) {\\r\\n    return balances[_owner];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\r\\n */\\r\\nabstract contract ERC20 is ERC20Basic {\\r\\n  function allowance(address owner, address spender) public view virtual returns (uint256);\\r\\n  function transferFrom(address from, address to, uint256 value) public virtual returns (bool);\\r\\n  function approve(address spender, uint256 value) public virtual returns (bool);\\r\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * @title Standard ERC20 token\\r\\n *\\r\\n * @dev Implementation of the basic standard token.\\r\\n * @dev https://github.com/ethereum/EIPs/issues/20\\r\\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\r\\n */\\r\\ncontract StandardToken is ERC20, BasicToken {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping (address => mapping (address => uint256)) internal allowed;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Transfer tokens from one address to another\\r\\n   * @param _from address The address which you want to send tokens from\\r\\n   * @param _to address The address which you want to transfer to\\r\\n   * @param _value uint256 the amount of tokens to be transferred\\r\\n   */\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[_from]);\\r\\n    require(_value <= allowed[_from][msg.sender]);\\r\\n\\r\\n    balances[_from] = balances[_from].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\\r\\n    emit Transfer(_from, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r\\n   *\\r\\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\\r\\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r\\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n   * @param _spender The address which will spend the funds.\\r\\n   * @param _value The amount of tokens to be spent.\\r\\n   */\\r\\n  function approve(address _spender, uint256 _value) public override virtual returns (bool) {\\r\\n    allowed[msg.sender][_spender] = _value;\\r\\n    emit Approval(msg.sender, _spender, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n   * @param _owner address The address which owns the funds.\\r\\n   * @param _spender address The address which will spend the funds.\\r\\n   * @return remaining A uint256 specifying the amount of tokens still available for the spender.\\r\\n   */\\r\\n  function allowance(address _owner, address _spender) public view override returns (uint256 remaining) {\\r\\n    return allowed[_owner][_spender];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Ownable\\r\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\r\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\r\\n */\\r\\ncontract Ownable {\\r\\n  address public owner;\\r\\n\\r\\n\\r\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\r\\n   * account.\\r\\n   */\\r\\n  constructor() {\\r\\n    owner = msg.sender;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Throws if called by any account other than the owner.\\r\\n   */\\r\\n  modifier onlyOwner() {\\r\\n    require(msg.sender == owner);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\r\\n   * @param newOwner The address to transfer ownership to.\\r\\n   */\\r\\n  function transferOwnership(address newOwner) onlyOwner public {\\r\\n    require(newOwner != address(0));\\r\\n    emit OwnershipTransferred(owner, newOwner);\\r\\n    owner = newOwner;\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable\\r\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\r\\n */\\r\\ncontract Pausable is Ownable {\\r\\n  event Pause();\\r\\n  event Unpause();\\r\\n\\r\\n  bool public paused = false;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\r\\n   */\\r\\n  modifier whenNotPaused() {\\r\\n    require(!paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is paused.\\r\\n   */\\r\\n  modifier whenPaused() {\\r\\n    require(paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to pause, triggers stopped state\\r\\n   */\\r\\n  function pause() onlyOwner whenNotPaused public {\\r\\n    paused = true;\\r\\n    emit Pause();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to unpause, returns to normal state\\r\\n   */\\r\\n  function unpause() onlyOwner whenPaused public {\\r\\n    paused = false;\\r\\n    emit Unpause();\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable token\\r\\n *\\r\\n * @dev StandardToken modified with pausable transfers.\\r\\n **/\\r\\n\\r\\ncontract PausableToken is StandardToken, Pausable {\\r\\n  using SafeMath for uint256;\\r\\n  \\r\\n  function transfer(address _to, uint256 _value) public whenNotPaused override(BasicToken,ERC20Basic) returns (bool) {\\r\\n    return super.transfer(_to, _value);\\r\\n  }\\r\\n\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.transferFrom(_from, _to, _value);\\r\\n  }\\r\\n\\r\\n  function approve(address _spender, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.approve(_spender, _value);\\r\\n  }\\r\\n\\r\\n  function batchTransfer(address[] memory _receivers, uint256 _value) public whenNotPaused returns (bool) {\\r\\n    uint cnt = _receivers.length;\\r\\n    // <yes> <report> ARITHMETIC\\r\\n    uint256 amount = uint256(cnt) * _value;\\r\\n    require(cnt > 0 && cnt <= 20);\\r\\n    require(_value > 0 && balances[msg.sender] >= amount);\\r\\n\\r\\n    balances[msg.sender] = balances[msg.sender].sub(amount);\\r\\n    for (uint i = 0; i < cnt; i++) {\\r\\n        balances[_receivers[i]] = balances[_receivers[i]].add(_value);\\r\\n        emit Transfer(msg.sender, _receivers[i], _value);\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Bec Token\\r\\n *\\r\\n * @dev Implementation of Bec Token based on the basic standard token.\\r\\n */\\r\\ncontract BecToken is PausableToken {\\r\\n    /**\\r\\n    * Public variables of the token\\r\\n    * The following variables are OPTIONAL vanities. One does not have to include them.\\r\\n    * They allow one to customise the token contract & in no way influences the core functionality.\\r\\n    * Some wallets/interfaces might not even bother to look at this information.\\r\\n    */\\r\\n    string public name = \\\"BeautyChain\\\";\\r\\n    string public symbol = \\\"BEC\\\";\\r\\n    string public version = '1.0.0';\\r\\n    uint8 public decimals = 18;\\r\\n\\r\\n    /**\\r\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n     */\\r\\n    constructor() {\\r\\n      totalSupply = 7000000000 * (10**(uint256(decimals)));\\r\\n      balances[msg.sender] = totalSupply;    // Give the creator all initial tokens\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2716ae512257148b716c05f5e0d13034bae47d0c26ba0381f7241b1776c8fff0\",\"license\":\"UNLICENSED\"}},\"version\":1}"},"ERC20":{"evm":{"deployedBytecode":{"object":"","opcodes":"","sourceMap":""}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"see https://github.com/ethereum/EIPs/issues/20\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ERC20 interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BecToken.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BecToken.sol\":{\"content\":\"/*\\r\\n * @source: https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-101#bectokensol\\r\\n * Upgraded from Solidity 0.4 to 0.8, vulnerability may no longer exist\\r\\n * @author: -\\r\\n * @vulnerable_at_lines: 268\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n * @dev Math operations with safety checks that throw on error\\r\\n */\\r\\nlibrary SafeMath {\\r\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a * b;\\r\\n    require(a == 0 || c / a == b);\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    // require(b > 0); // Solidity automatically throws when dividing by 0\\r\\n    uint256 c = a / b;\\r\\n    // require(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    require(b <= a);\\r\\n    return a - b;\\r\\n  }\\r\\n\\r\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a + b;\\r\\n    require(c >= a);\\r\\n    return c;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20Basic\\r\\n * @dev Simpler version of ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/179\\r\\n */\\r\\nabstract contract ERC20Basic {\\r\\n  uint256 public totalSupply;\\r\\n  function balanceOf(address who) public view virtual returns (uint256);\\r\\n  function transfer(address to, uint256 value) public virtual returns (bool);\\r\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Basic token\\r\\n * @dev Basic version of StandardToken, with no allowances.\\r\\n */\\r\\ncontract BasicToken is ERC20Basic {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping(address => uint256) balances;\\r\\n\\r\\n  /**\\r\\n  * @dev transfer token for a specified address\\r\\n  * @param _to The address to transfer to.\\r\\n  * @param _value The amount to be transferred.\\r\\n  */\\r\\n  function transfer(address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[msg.sender]);\\r\\n\\r\\n    // SafeMath.sub will throw if there is not enough balance.\\r\\n    balances[msg.sender] = balances[msg.sender].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    emit Transfer(msg.sender, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev Gets the balance of the specified address.\\r\\n  * @param _owner The address to query the the balance of.\\r\\n  * @return balance An uint256 representing the amount owned by the passed address.\\r\\n  */\\r\\n  function balanceOf(address _owner) public view override returns (uint256 balance) {\\r\\n    return balances[_owner];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\r\\n */\\r\\nabstract contract ERC20 is ERC20Basic {\\r\\n  function allowance(address owner, address spender) public view virtual returns (uint256);\\r\\n  function transferFrom(address from, address to, uint256 value) public virtual returns (bool);\\r\\n  function approve(address spender, uint256 value) public virtual returns (bool);\\r\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * @title Standard ERC20 token\\r\\n *\\r\\n * @dev Implementation of the basic standard token.\\r\\n * @dev https://github.com/ethereum/EIPs/issues/20\\r\\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\r\\n */\\r\\ncontract StandardToken is ERC20, BasicToken {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping (address => mapping (address => uint256)) internal allowed;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Transfer tokens from one address to another\\r\\n   * @param _from address The address which you want to send tokens from\\r\\n   * @param _to address The address which you want to transfer to\\r\\n   * @param _value uint256 the amount of tokens to be transferred\\r\\n   */\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[_from]);\\r\\n    require(_value <= allowed[_from][msg.sender]);\\r\\n\\r\\n    balances[_from] = balances[_from].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\\r\\n    emit Transfer(_from, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r\\n   *\\r\\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\\r\\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r\\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n   * @param _spender The address which will spend the funds.\\r\\n   * @param _value The amount of tokens to be spent.\\r\\n   */\\r\\n  function approve(address _spender, uint256 _value) public override virtual returns (bool) {\\r\\n    allowed[msg.sender][_spender] = _value;\\r\\n    emit Approval(msg.sender, _spender, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n   * @param _owner address The address which owns the funds.\\r\\n   * @param _spender address The address which will spend the funds.\\r\\n   * @return remaining A uint256 specifying the amount of tokens still available for the spender.\\r\\n   */\\r\\n  function allowance(address _owner, address _spender) public view override returns (uint256 remaining) {\\r\\n    return allowed[_owner][_spender];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Ownable\\r\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\r\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\r\\n */\\r\\ncontract Ownable {\\r\\n  address public owner;\\r\\n\\r\\n\\r\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\r\\n   * account.\\r\\n   */\\r\\n  constructor() {\\r\\n    owner = msg.sender;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Throws if called by any account other than the owner.\\r\\n   */\\r\\n  modifier onlyOwner() {\\r\\n    require(msg.sender == owner);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\r\\n   * @param newOwner The address to transfer ownership to.\\r\\n   */\\r\\n  function transferOwnership(address newOwner) onlyOwner public {\\r\\n    require(newOwner != address(0));\\r\\n    emit OwnershipTransferred(owner, newOwner);\\r\\n    owner = newOwner;\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable\\r\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\r\\n */\\r\\ncontract Pausable is Ownable {\\r\\n  event Pause();\\r\\n  event Unpause();\\r\\n\\r\\n  bool public paused = false;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\r\\n   */\\r\\n  modifier whenNotPaused() {\\r\\n    require(!paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is paused.\\r\\n   */\\r\\n  modifier whenPaused() {\\r\\n    require(paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to pause, triggers stopped state\\r\\n   */\\r\\n  function pause() onlyOwner whenNotPaused public {\\r\\n    paused = true;\\r\\n    emit Pause();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to unpause, returns to normal state\\r\\n   */\\r\\n  function unpause() onlyOwner whenPaused public {\\r\\n    paused = false;\\r\\n    emit Unpause();\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable token\\r\\n *\\r\\n * @dev StandardToken modified with pausable transfers.\\r\\n **/\\r\\n\\r\\ncontract PausableToken is StandardToken, Pausable {\\r\\n  using SafeMath for uint256;\\r\\n  \\r\\n  function transfer(address _to, uint256 _value) public whenNotPaused override(BasicToken,ERC20Basic) returns (bool) {\\r\\n    return super.transfer(_to, _value);\\r\\n  }\\r\\n\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.transferFrom(_from, _to, _value);\\r\\n  }\\r\\n\\r\\n  function approve(address _spender, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.approve(_spender, _value);\\r\\n  }\\r\\n\\r\\n  function batchTransfer(address[] memory _receivers, uint256 _value) public whenNotPaused returns (bool) {\\r\\n    uint cnt = _receivers.length;\\r\\n    // <yes> <report> ARITHMETIC\\r\\n    uint256 amount = uint256(cnt) * _value;\\r\\n    require(cnt > 0 && cnt <= 20);\\r\\n    require(_value > 0 && balances[msg.sender] >= amount);\\r\\n\\r\\n    balances[msg.sender] = balances[msg.sender].sub(amount);\\r\\n    for (uint i = 0; i < cnt; i++) {\\r\\n        balances[_receivers[i]] = balances[_receivers[i]].add(_value);\\r\\n        emit Transfer(msg.sender, _receivers[i], _value);\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Bec Token\\r\\n *\\r\\n * @dev Implementation of Bec Token based on the basic standard token.\\r\\n */\\r\\ncontract BecToken is PausableToken {\\r\\n    /**\\r\\n    * Public variables of the token\\r\\n    * The following variables are OPTIONAL vanities. One does not have to include them.\\r\\n    * They allow one to customise the token contract & in no way influences the core functionality.\\r\\n    * Some wallets/interfaces might not even bother to look at this information.\\r\\n    */\\r\\n    string public name = \\\"BeautyChain\\\";\\r\\n    string public symbol = \\\"BEC\\\";\\r\\n    string public version = '1.0.0';\\r\\n    uint8 public decimals = 18;\\r\\n\\r\\n    /**\\r\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n     */\\r\\n    constructor() {\\r\\n      totalSupply = 7000000000 * (10**(uint256(decimals)));\\r\\n      balances[msg.sender] = totalSupply;    // Give the creator all initial tokens\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2716ae512257148b716c05f5e0d13034bae47d0c26ba0381f7241b1776c8fff0\",\"license\":\"UNLICENSED\"}},\"version\":1}"},"ERC20Basic":{"evm":{"deployedBytecode":{"object":"","opcodes":"","sourceMap":""}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Simpler version of ERC20 interfacesee https://github.com/ethereum/EIPs/issues/179\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ERC20Basic\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BecToken.sol\":\"ERC20Basic\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BecToken.sol\":{\"content\":\"/*\\r\\n * @source: https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-101#bectokensol\\r\\n * Upgraded from Solidity 0.4 to 0.8, vulnerability may no longer exist\\r\\n * @author: -\\r\\n * @vulnerable_at_lines: 268\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n * @dev Math operations with safety checks that throw on error\\r\\n */\\r\\nlibrary SafeMath {\\r\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a * b;\\r\\n    require(a == 0 || c / a == b);\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    // require(b > 0); // Solidity automatically throws when dividing by 0\\r\\n    uint256 c = a / b;\\r\\n    // require(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    require(b <= a);\\r\\n    return a - b;\\r\\n  }\\r\\n\\r\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a + b;\\r\\n    require(c >= a);\\r\\n    return c;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20Basic\\r\\n * @dev Simpler version of ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/179\\r\\n */\\r\\nabstract contract ERC20Basic {\\r\\n  uint256 public totalSupply;\\r\\n  function balanceOf(address who) public view virtual returns (uint256);\\r\\n  function transfer(address to, uint256 value) public virtual returns (bool);\\r\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Basic token\\r\\n * @dev Basic version of StandardToken, with no allowances.\\r\\n */\\r\\ncontract BasicToken is ERC20Basic {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping(address => uint256) balances;\\r\\n\\r\\n  /**\\r\\n  * @dev transfer token for a specified address\\r\\n  * @param _to The address to transfer to.\\r\\n  * @param _value The amount to be transferred.\\r\\n  */\\r\\n  function transfer(address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[msg.sender]);\\r\\n\\r\\n    // SafeMath.sub will throw if there is not enough balance.\\r\\n    balances[msg.sender] = balances[msg.sender].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    emit Transfer(msg.sender, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev Gets the balance of the specified address.\\r\\n  * @param _owner The address to query the the balance of.\\r\\n  * @return balance An uint256 representing the amount owned by the passed address.\\r\\n  */\\r\\n  function balanceOf(address _owner) public view override returns (uint256 balance) {\\r\\n    return balances[_owner];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\r\\n */\\r\\nabstract contract ERC20 is ERC20Basic {\\r\\n  function allowance(address owner, address spender) public view virtual returns (uint256);\\r\\n  function transferFrom(address from, address to, uint256 value) public virtual returns (bool);\\r\\n  function approve(address spender, uint256 value) public virtual returns (bool);\\r\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * @title Standard ERC20 token\\r\\n *\\r\\n * @dev Implementation of the basic standard token.\\r\\n * @dev https://github.com/ethereum/EIPs/issues/20\\r\\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\r\\n */\\r\\ncontract StandardToken is ERC20, BasicToken {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping (address => mapping (address => uint256)) internal allowed;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Transfer tokens from one address to another\\r\\n   * @param _from address The address which you want to send tokens from\\r\\n   * @param _to address The address which you want to transfer to\\r\\n   * @param _value uint256 the amount of tokens to be transferred\\r\\n   */\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[_from]);\\r\\n    require(_value <= allowed[_from][msg.sender]);\\r\\n\\r\\n    balances[_from] = balances[_from].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\\r\\n    emit Transfer(_from, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r\\n   *\\r\\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\\r\\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r\\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n   * @param _spender The address which will spend the funds.\\r\\n   * @param _value The amount of tokens to be spent.\\r\\n   */\\r\\n  function approve(address _spender, uint256 _value) public override virtual returns (bool) {\\r\\n    allowed[msg.sender][_spender] = _value;\\r\\n    emit Approval(msg.sender, _spender, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n   * @param _owner address The address which owns the funds.\\r\\n   * @param _spender address The address which will spend the funds.\\r\\n   * @return remaining A uint256 specifying the amount of tokens still available for the spender.\\r\\n   */\\r\\n  function allowance(address _owner, address _spender) public view override returns (uint256 remaining) {\\r\\n    return allowed[_owner][_spender];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Ownable\\r\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\r\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\r\\n */\\r\\ncontract Ownable {\\r\\n  address public owner;\\r\\n\\r\\n\\r\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\r\\n   * account.\\r\\n   */\\r\\n  constructor() {\\r\\n    owner = msg.sender;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Throws if called by any account other than the owner.\\r\\n   */\\r\\n  modifier onlyOwner() {\\r\\n    require(msg.sender == owner);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\r\\n   * @param newOwner The address to transfer ownership to.\\r\\n   */\\r\\n  function transferOwnership(address newOwner) onlyOwner public {\\r\\n    require(newOwner != address(0));\\r\\n    emit OwnershipTransferred(owner, newOwner);\\r\\n    owner = newOwner;\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable\\r\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\r\\n */\\r\\ncontract Pausable is Ownable {\\r\\n  event Pause();\\r\\n  event Unpause();\\r\\n\\r\\n  bool public paused = false;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\r\\n   */\\r\\n  modifier whenNotPaused() {\\r\\n    require(!paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is paused.\\r\\n   */\\r\\n  modifier whenPaused() {\\r\\n    require(paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to pause, triggers stopped state\\r\\n   */\\r\\n  function pause() onlyOwner whenNotPaused public {\\r\\n    paused = true;\\r\\n    emit Pause();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to unpause, returns to normal state\\r\\n   */\\r\\n  function unpause() onlyOwner whenPaused public {\\r\\n    paused = false;\\r\\n    emit Unpause();\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable token\\r\\n *\\r\\n * @dev StandardToken modified with pausable transfers.\\r\\n **/\\r\\n\\r\\ncontract PausableToken is StandardToken, Pausable {\\r\\n  using SafeMath for uint256;\\r\\n  \\r\\n  function transfer(address _to, uint256 _value) public whenNotPaused override(BasicToken,ERC20Basic) returns (bool) {\\r\\n    return super.transfer(_to, _value);\\r\\n  }\\r\\n\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.transferFrom(_from, _to, _value);\\r\\n  }\\r\\n\\r\\n  function approve(address _spender, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.approve(_spender, _value);\\r\\n  }\\r\\n\\r\\n  function batchTransfer(address[] memory _receivers, uint256 _value) public whenNotPaused returns (bool) {\\r\\n    uint cnt = _receivers.length;\\r\\n    // <yes> <report> ARITHMETIC\\r\\n    uint256 amount = uint256(cnt) * _value;\\r\\n    require(cnt > 0 && cnt <= 20);\\r\\n    require(_value > 0 && balances[msg.sender] >= amount);\\r\\n\\r\\n    balances[msg.sender] = balances[msg.sender].sub(amount);\\r\\n    for (uint i = 0; i < cnt; i++) {\\r\\n        balances[_receivers[i]] = balances[_receivers[i]].add(_value);\\r\\n        emit Transfer(msg.sender, _receivers[i], _value);\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Bec Token\\r\\n *\\r\\n * @dev Implementation of Bec Token based on the basic standard token.\\r\\n */\\r\\ncontract BecToken is PausableToken {\\r\\n    /**\\r\\n    * Public variables of the token\\r\\n    * The following variables are OPTIONAL vanities. One does not have to include them.\\r\\n    * They allow one to customise the token contract & in no way influences the core functionality.\\r\\n    * Some wallets/interfaces might not even bother to look at this information.\\r\\n    */\\r\\n    string public name = \\\"BeautyChain\\\";\\r\\n    string public symbol = \\\"BEC\\\";\\r\\n    string public version = '1.0.0';\\r\\n    uint8 public decimals = 18;\\r\\n\\r\\n    /**\\r\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n     */\\r\\n    constructor() {\\r\\n      totalSupply = 7000000000 * (10**(uint256(decimals)));\\r\\n      balances[msg.sender] = totalSupply;    // Give the creator all initial tokens\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2716ae512257148b716c05f5e0d13034bae47d0c26ba0381f7241b1776c8fff0\",\"license\":\"UNLICENSED\"}},\"version\":1}"},"Ownable":{"evm":{"deployedBytecode":{"object":"608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063f2fde38b14610059575b600080fd5b610043610075565b6040516100509190610228565b60405180910390f35b610073600480360381019061006e9190610274565b610099565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100f157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361012a57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610212826101e7565b9050919050565b61022281610207565b82525050565b600060208201905061023d6000830184610219565b92915050565b600080fd5b61025181610207565b811461025c57600080fd5b50565b60008135905061026e81610248565b92915050565b60006020828403121561028a57610289610243565b5b60006102988482850161025f565b9150509291505056fea26469706673582212207cd1b0edd6a18ab7b7cc32864cc82c63e5377b8a53a6366c0fd60215327ae27064736f6c634300081a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x274 JUMP JUMPDEST PUSH2 0x99 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x212 DUP3 PUSH2 0x1E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x222 DUP2 PUSH2 0x207 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x219 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x251 DUP2 PUSH2 0x207 JUMP JUMPDEST DUP2 EQ PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26E DUP2 PUSH2 0x248 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28A JUMPI PUSH2 0x289 PUSH2 0x243 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x298 DUP5 DUP3 DUP6 ADD PUSH2 0x25F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xD1B0EDD6A18AB7B7CC32864CC82C63E5377B8A53A6366C0FD60215327A 0xE2 PUSH17 0x64736F6C634300081A0033000000000000 ","sourceMap":"5875:817:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5897:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6509:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5897:20;;;;;;;;;;;;:::o;6509:178::-;6320:5;;;;;;;;;;6306:19;;:10;:19;;;6298:28;;;;;;6606:1:::1;6586:22;;:8;:22;;::::0;6578:31:::1;;;::::0;::::1;;6649:8;6621:37;;6642:5;::::0;::::1;;;;;;;;6621:37;;;;;;;;;;;;6673:8;6665:5;::::0;:16:::1;;;;;;;;;;;;;;;;;;6509:178:::0;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The Ownable contract has an owner address, and provides basic authorization control functions, this simplifies the implementation of \\\"user permissions\\\".\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"The Ownable constructor sets the original `owner` of the contract to the sender account.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Ownable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BecToken.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BecToken.sol\":{\"content\":\"/*\\r\\n * @source: https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-101#bectokensol\\r\\n * Upgraded from Solidity 0.4 to 0.8, vulnerability may no longer exist\\r\\n * @author: -\\r\\n * @vulnerable_at_lines: 268\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n * @dev Math operations with safety checks that throw on error\\r\\n */\\r\\nlibrary SafeMath {\\r\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a * b;\\r\\n    require(a == 0 || c / a == b);\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    // require(b > 0); // Solidity automatically throws when dividing by 0\\r\\n    uint256 c = a / b;\\r\\n    // require(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    require(b <= a);\\r\\n    return a - b;\\r\\n  }\\r\\n\\r\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a + b;\\r\\n    require(c >= a);\\r\\n    return c;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20Basic\\r\\n * @dev Simpler version of ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/179\\r\\n */\\r\\nabstract contract ERC20Basic {\\r\\n  uint256 public totalSupply;\\r\\n  function balanceOf(address who) public view virtual returns (uint256);\\r\\n  function transfer(address to, uint256 value) public virtual returns (bool);\\r\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Basic token\\r\\n * @dev Basic version of StandardToken, with no allowances.\\r\\n */\\r\\ncontract BasicToken is ERC20Basic {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping(address => uint256) balances;\\r\\n\\r\\n  /**\\r\\n  * @dev transfer token for a specified address\\r\\n  * @param _to The address to transfer to.\\r\\n  * @param _value The amount to be transferred.\\r\\n  */\\r\\n  function transfer(address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[msg.sender]);\\r\\n\\r\\n    // SafeMath.sub will throw if there is not enough balance.\\r\\n    balances[msg.sender] = balances[msg.sender].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    emit Transfer(msg.sender, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev Gets the balance of the specified address.\\r\\n  * @param _owner The address to query the the balance of.\\r\\n  * @return balance An uint256 representing the amount owned by the passed address.\\r\\n  */\\r\\n  function balanceOf(address _owner) public view override returns (uint256 balance) {\\r\\n    return balances[_owner];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\r\\n */\\r\\nabstract contract ERC20 is ERC20Basic {\\r\\n  function allowance(address owner, address spender) public view virtual returns (uint256);\\r\\n  function transferFrom(address from, address to, uint256 value) public virtual returns (bool);\\r\\n  function approve(address spender, uint256 value) public virtual returns (bool);\\r\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * @title Standard ERC20 token\\r\\n *\\r\\n * @dev Implementation of the basic standard token.\\r\\n * @dev https://github.com/ethereum/EIPs/issues/20\\r\\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\r\\n */\\r\\ncontract StandardToken is ERC20, BasicToken {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping (address => mapping (address => uint256)) internal allowed;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Transfer tokens from one address to another\\r\\n   * @param _from address The address which you want to send tokens from\\r\\n   * @param _to address The address which you want to transfer to\\r\\n   * @param _value uint256 the amount of tokens to be transferred\\r\\n   */\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[_from]);\\r\\n    require(_value <= allowed[_from][msg.sender]);\\r\\n\\r\\n    balances[_from] = balances[_from].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\\r\\n    emit Transfer(_from, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r\\n   *\\r\\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\\r\\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r\\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n   * @param _spender The address which will spend the funds.\\r\\n   * @param _value The amount of tokens to be spent.\\r\\n   */\\r\\n  function approve(address _spender, uint256 _value) public override virtual returns (bool) {\\r\\n    allowed[msg.sender][_spender] = _value;\\r\\n    emit Approval(msg.sender, _spender, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n   * @param _owner address The address which owns the funds.\\r\\n   * @param _spender address The address which will spend the funds.\\r\\n   * @return remaining A uint256 specifying the amount of tokens still available for the spender.\\r\\n   */\\r\\n  function allowance(address _owner, address _spender) public view override returns (uint256 remaining) {\\r\\n    return allowed[_owner][_spender];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Ownable\\r\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\r\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\r\\n */\\r\\ncontract Ownable {\\r\\n  address public owner;\\r\\n\\r\\n\\r\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\r\\n   * account.\\r\\n   */\\r\\n  constructor() {\\r\\n    owner = msg.sender;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Throws if called by any account other than the owner.\\r\\n   */\\r\\n  modifier onlyOwner() {\\r\\n    require(msg.sender == owner);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\r\\n   * @param newOwner The address to transfer ownership to.\\r\\n   */\\r\\n  function transferOwnership(address newOwner) onlyOwner public {\\r\\n    require(newOwner != address(0));\\r\\n    emit OwnershipTransferred(owner, newOwner);\\r\\n    owner = newOwner;\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable\\r\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\r\\n */\\r\\ncontract Pausable is Ownable {\\r\\n  event Pause();\\r\\n  event Unpause();\\r\\n\\r\\n  bool public paused = false;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\r\\n   */\\r\\n  modifier whenNotPaused() {\\r\\n    require(!paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is paused.\\r\\n   */\\r\\n  modifier whenPaused() {\\r\\n    require(paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to pause, triggers stopped state\\r\\n   */\\r\\n  function pause() onlyOwner whenNotPaused public {\\r\\n    paused = true;\\r\\n    emit Pause();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to unpause, returns to normal state\\r\\n   */\\r\\n  function unpause() onlyOwner whenPaused public {\\r\\n    paused = false;\\r\\n    emit Unpause();\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable token\\r\\n *\\r\\n * @dev StandardToken modified with pausable transfers.\\r\\n **/\\r\\n\\r\\ncontract PausableToken is StandardToken, Pausable {\\r\\n  using SafeMath for uint256;\\r\\n  \\r\\n  function transfer(address _to, uint256 _value) public whenNotPaused override(BasicToken,ERC20Basic) returns (bool) {\\r\\n    return super.transfer(_to, _value);\\r\\n  }\\r\\n\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.transferFrom(_from, _to, _value);\\r\\n  }\\r\\n\\r\\n  function approve(address _spender, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.approve(_spender, _value);\\r\\n  }\\r\\n\\r\\n  function batchTransfer(address[] memory _receivers, uint256 _value) public whenNotPaused returns (bool) {\\r\\n    uint cnt = _receivers.length;\\r\\n    // <yes> <report> ARITHMETIC\\r\\n    uint256 amount = uint256(cnt) * _value;\\r\\n    require(cnt > 0 && cnt <= 20);\\r\\n    require(_value > 0 && balances[msg.sender] >= amount);\\r\\n\\r\\n    balances[msg.sender] = balances[msg.sender].sub(amount);\\r\\n    for (uint i = 0; i < cnt; i++) {\\r\\n        balances[_receivers[i]] = balances[_receivers[i]].add(_value);\\r\\n        emit Transfer(msg.sender, _receivers[i], _value);\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Bec Token\\r\\n *\\r\\n * @dev Implementation of Bec Token based on the basic standard token.\\r\\n */\\r\\ncontract BecToken is PausableToken {\\r\\n    /**\\r\\n    * Public variables of the token\\r\\n    * The following variables are OPTIONAL vanities. One does not have to include them.\\r\\n    * They allow one to customise the token contract & in no way influences the core functionality.\\r\\n    * Some wallets/interfaces might not even bother to look at this information.\\r\\n    */\\r\\n    string public name = \\\"BeautyChain\\\";\\r\\n    string public symbol = \\\"BEC\\\";\\r\\n    string public version = '1.0.0';\\r\\n    uint8 public decimals = 18;\\r\\n\\r\\n    /**\\r\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n     */\\r\\n    constructor() {\\r\\n      totalSupply = 7000000000 * (10**(uint256(decimals)));\\r\\n      balances[msg.sender] = totalSupply;    // Give the creator all initial tokens\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2716ae512257148b716c05f5e0d13034bae47d0c26ba0381f7241b1776c8fff0\",\"license\":\"UNLICENSED\"}},\"version\":1}"},"Pausable":{"evm":{"deployedBytecode":{"object":"608060405234801561001057600080fd5b50600436106100575760003560e01c80633f4ba83a1461005c5780635c975abb146100665780638456cb59146100845780638da5cb5b1461008e578063f2fde38b146100ac575b600080fd5b6100646100c8565b005b61006e610181565b60405161007b91906103dc565b60405180910390f35b61008c610194565b005b61009661024f565b6040516100a39190610438565b60405180910390f35b6100c660048036038101906100c19190610484565b610273565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461012057600080fd5b600060149054906101000a900460ff1661013957600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600060149054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101ec57600080fd5b600060149054906101000a900460ff161561020657600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102cb57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361030457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008115159050919050565b6103d6816103c1565b82525050565b60006020820190506103f160008301846103cd565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610422826103f7565b9050919050565b61043281610417565b82525050565b600060208201905061044d6000830184610429565b92915050565b600080fd5b61046181610417565b811461046c57600080fd5b50565b60008135905061047e81610458565b92915050565b60006020828403121561049a57610499610453565b5b60006104a88482850161046f565b9150509291505056fea2646970667358221220f96a6290612edbc31a869478bcc403e9f82a4640419f92895279dfa6b2a6210564736f6c634300081a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xC8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8C PUSH2 0x194 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x96 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA3 SWAP2 SWAP1 PUSH2 0x438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x484 JUMP JUMPDEST PUSH2 0x273 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D6 DUP2 PUSH2 0x3C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x422 DUP3 PUSH2 0x3F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x432 DUP2 PUSH2 0x417 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x44D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x429 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x461 DUP2 PUSH2 0x417 JUMP JUMPDEST DUP2 EQ PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x47E DUP2 PUSH2 0x458 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49A JUMPI PUSH2 0x499 PUSH2 0x453 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4A8 DUP5 DUP3 DUP6 ADD PUSH2 0x46F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 PUSH11 0x6290612EDBC31A869478BC 0xC4 SUB 0xE9 0xF8 0x2A CHAINID BLOCKHASH COINBASE SWAP16 SWAP3 DUP10 MSTORE PUSH26 0xDFA6B2A6210564736F6C634300081A0033000000000000000000 ","sourceMap":"6813:793:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7508:95;;;:::i;:::-;;6887:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7328:93;;;:::i;:::-;;5897:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6509:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7508:95;6320:5;;;;;;;;;;6306:19;;:10;:19;;;6298:28;;;;;;7223:6:::1;;;;;;;;;;;7215:15;;;::::0;::::1;;7571:5:::2;7562:6:::0;::::2;:14;;;;;;;;;;;;;;;;;;7588:9;;;;;;;;;;7508:95::o:0;6887:26::-;;;;;;;;;;;;;:::o;7328:93::-;6320:5;;;;;;;;;;6306:19;;:10;:19;;;6298:28;;;;;;7063:6:::1;;;;;;;;;;;7062:7;7054:16;;;::::0;::::1;;7392:4:::2;7383:6;;:13;;;;;;;;;;;;;;;;;;7408:7;;;;;;;;;;7328:93::o:0;5897:20::-;;;;;;;;;;;;:::o;6509:178::-;6320:5;;;;;;;;;;6306:19;;:10;:19;;;6298:28;;;;;;6606:1:::1;6586:22;;:8;:22;;::::0;6578:31:::1;;;::::0;::::1;;6649:8;6621:37;;6642:5;::::0;::::1;;;;;;;;6621:37;;;;;;;;;;;;6673:8;6665:5;::::0;:16:::1;;;;;;;;;;;;;;;;;;6509:178:::0;:::o;7:90:1:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;434:126::-;471:7;511:42;504:5;500:54;489:65;;434:126;;;:::o;566:96::-;603:7;632:24;650:5;632:24;:::i;:::-;621:35;;566:96;;;:::o;668:118::-;755:24;773:5;755:24;:::i;:::-;750:3;743:37;668:118;;:::o;792:222::-;885:4;923:2;912:9;908:18;900:26;;936:71;1004:1;993:9;989:17;980:6;936:71;:::i;:::-;792:222;;;;:::o;1101:117::-;1210:1;1207;1200:12;1347:122;1420:24;1438:5;1420:24;:::i;:::-;1413:5;1410:35;1400:63;;1459:1;1456;1449:12;1400:63;1347:122;:::o;1475:139::-;1521:5;1559:6;1546:20;1537:29;;1575:33;1602:5;1575:33;:::i;:::-;1475:139;;;;:::o;1620:329::-;1679:6;1728:2;1716:9;1707:7;1703:23;1699:32;1696:119;;;1734:79;;:::i;:::-;1696:119;1854:1;1879:53;1924:7;1915:6;1904:9;1900:22;1879:53;:::i;:::-;1869:63;;1825:117;1620:329;;;;:::o"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Base contract which allows children to implement an emergency stop mechanism.\",\"kind\":\"dev\",\"methods\":{\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}},\"title\":\"Pausable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BecToken.sol\":\"Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BecToken.sol\":{\"content\":\"/*\\r\\n * @source: https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-101#bectokensol\\r\\n * Upgraded from Solidity 0.4 to 0.8, vulnerability may no longer exist\\r\\n * @author: -\\r\\n * @vulnerable_at_lines: 268\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n * @dev Math operations with safety checks that throw on error\\r\\n */\\r\\nlibrary SafeMath {\\r\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a * b;\\r\\n    require(a == 0 || c / a == b);\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    // require(b > 0); // Solidity automatically throws when dividing by 0\\r\\n    uint256 c = a / b;\\r\\n    // require(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    require(b <= a);\\r\\n    return a - b;\\r\\n  }\\r\\n\\r\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a + b;\\r\\n    require(c >= a);\\r\\n    return c;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20Basic\\r\\n * @dev Simpler version of ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/179\\r\\n */\\r\\nabstract contract ERC20Basic {\\r\\n  uint256 public totalSupply;\\r\\n  function balanceOf(address who) public view virtual returns (uint256);\\r\\n  function transfer(address to, uint256 value) public virtual returns (bool);\\r\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Basic token\\r\\n * @dev Basic version of StandardToken, with no allowances.\\r\\n */\\r\\ncontract BasicToken is ERC20Basic {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping(address => uint256) balances;\\r\\n\\r\\n  /**\\r\\n  * @dev transfer token for a specified address\\r\\n  * @param _to The address to transfer to.\\r\\n  * @param _value The amount to be transferred.\\r\\n  */\\r\\n  function transfer(address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[msg.sender]);\\r\\n\\r\\n    // SafeMath.sub will throw if there is not enough balance.\\r\\n    balances[msg.sender] = balances[msg.sender].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    emit Transfer(msg.sender, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev Gets the balance of the specified address.\\r\\n  * @param _owner The address to query the the balance of.\\r\\n  * @return balance An uint256 representing the amount owned by the passed address.\\r\\n  */\\r\\n  function balanceOf(address _owner) public view override returns (uint256 balance) {\\r\\n    return balances[_owner];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\r\\n */\\r\\nabstract contract ERC20 is ERC20Basic {\\r\\n  function allowance(address owner, address spender) public view virtual returns (uint256);\\r\\n  function transferFrom(address from, address to, uint256 value) public virtual returns (bool);\\r\\n  function approve(address spender, uint256 value) public virtual returns (bool);\\r\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * @title Standard ERC20 token\\r\\n *\\r\\n * @dev Implementation of the basic standard token.\\r\\n * @dev https://github.com/ethereum/EIPs/issues/20\\r\\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\r\\n */\\r\\ncontract StandardToken is ERC20, BasicToken {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping (address => mapping (address => uint256)) internal allowed;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Transfer tokens from one address to another\\r\\n   * @param _from address The address which you want to send tokens from\\r\\n   * @param _to address The address which you want to transfer to\\r\\n   * @param _value uint256 the amount of tokens to be transferred\\r\\n   */\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[_from]);\\r\\n    require(_value <= allowed[_from][msg.sender]);\\r\\n\\r\\n    balances[_from] = balances[_from].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\\r\\n    emit Transfer(_from, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r\\n   *\\r\\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\\r\\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r\\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n   * @param _spender The address which will spend the funds.\\r\\n   * @param _value The amount of tokens to be spent.\\r\\n   */\\r\\n  function approve(address _spender, uint256 _value) public override virtual returns (bool) {\\r\\n    allowed[msg.sender][_spender] = _value;\\r\\n    emit Approval(msg.sender, _spender, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n   * @param _owner address The address which owns the funds.\\r\\n   * @param _spender address The address which will spend the funds.\\r\\n   * @return remaining A uint256 specifying the amount of tokens still available for the spender.\\r\\n   */\\r\\n  function allowance(address _owner, address _spender) public view override returns (uint256 remaining) {\\r\\n    return allowed[_owner][_spender];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Ownable\\r\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\r\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\r\\n */\\r\\ncontract Ownable {\\r\\n  address public owner;\\r\\n\\r\\n\\r\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\r\\n   * account.\\r\\n   */\\r\\n  constructor() {\\r\\n    owner = msg.sender;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Throws if called by any account other than the owner.\\r\\n   */\\r\\n  modifier onlyOwner() {\\r\\n    require(msg.sender == owner);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\r\\n   * @param newOwner The address to transfer ownership to.\\r\\n   */\\r\\n  function transferOwnership(address newOwner) onlyOwner public {\\r\\n    require(newOwner != address(0));\\r\\n    emit OwnershipTransferred(owner, newOwner);\\r\\n    owner = newOwner;\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable\\r\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\r\\n */\\r\\ncontract Pausable is Ownable {\\r\\n  event Pause();\\r\\n  event Unpause();\\r\\n\\r\\n  bool public paused = false;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\r\\n   */\\r\\n  modifier whenNotPaused() {\\r\\n    require(!paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is paused.\\r\\n   */\\r\\n  modifier whenPaused() {\\r\\n    require(paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to pause, triggers stopped state\\r\\n   */\\r\\n  function pause() onlyOwner whenNotPaused public {\\r\\n    paused = true;\\r\\n    emit Pause();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to unpause, returns to normal state\\r\\n   */\\r\\n  function unpause() onlyOwner whenPaused public {\\r\\n    paused = false;\\r\\n    emit Unpause();\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable token\\r\\n *\\r\\n * @dev StandardToken modified with pausable transfers.\\r\\n **/\\r\\n\\r\\ncontract PausableToken is StandardToken, Pausable {\\r\\n  using SafeMath for uint256;\\r\\n  \\r\\n  function transfer(address _to, uint256 _value) public whenNotPaused override(BasicToken,ERC20Basic) returns (bool) {\\r\\n    return super.transfer(_to, _value);\\r\\n  }\\r\\n\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.transferFrom(_from, _to, _value);\\r\\n  }\\r\\n\\r\\n  function approve(address _spender, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.approve(_spender, _value);\\r\\n  }\\r\\n\\r\\n  function batchTransfer(address[] memory _receivers, uint256 _value) public whenNotPaused returns (bool) {\\r\\n    uint cnt = _receivers.length;\\r\\n    // <yes> <report> ARITHMETIC\\r\\n    uint256 amount = uint256(cnt) * _value;\\r\\n    require(cnt > 0 && cnt <= 20);\\r\\n    require(_value > 0 && balances[msg.sender] >= amount);\\r\\n\\r\\n    balances[msg.sender] = balances[msg.sender].sub(amount);\\r\\n    for (uint i = 0; i < cnt; i++) {\\r\\n        balances[_receivers[i]] = balances[_receivers[i]].add(_value);\\r\\n        emit Transfer(msg.sender, _receivers[i], _value);\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Bec Token\\r\\n *\\r\\n * @dev Implementation of Bec Token based on the basic standard token.\\r\\n */\\r\\ncontract BecToken is PausableToken {\\r\\n    /**\\r\\n    * Public variables of the token\\r\\n    * The following variables are OPTIONAL vanities. One does not have to include them.\\r\\n    * They allow one to customise the token contract & in no way influences the core functionality.\\r\\n    * Some wallets/interfaces might not even bother to look at this information.\\r\\n    */\\r\\n    string public name = \\\"BeautyChain\\\";\\r\\n    string public symbol = \\\"BEC\\\";\\r\\n    string public version = '1.0.0';\\r\\n    uint8 public decimals = 18;\\r\\n\\r\\n    /**\\r\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n     */\\r\\n    constructor() {\\r\\n      totalSupply = 7000000000 * (10**(uint256(decimals)));\\r\\n      balances[msg.sender] = totalSupply;    // Give the creator all initial tokens\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2716ae512257148b716c05f5e0d13034bae47d0c26ba0381f7241b1776c8fff0\",\"license\":\"UNLICENSED\"}},\"version\":1}"},"PausableToken":{"evm":{"deployedBytecode":{"object":"608060405234801561001057600080fd5b50600436106100b45760003560e01c806383f12fec1161007157806383f12fec1461018f5780638456cb59146101bf5780638da5cb5b146101c9578063a9059cbb146101e7578063dd62ed3e14610217578063f2fde38b14610247576100b4565b8063095ea7b3146100b957806318160ddd146100e957806323b872dd146101075780633f4ba83a146101375780635c975abb1461014157806370a082311461015f575b600080fd5b6100d360048036038101906100ce9190611144565b610263565b6040516100e0919061119f565b60405180910390f35b6100f1610291565b6040516100fe91906111c9565b60405180910390f35b610121600480360381019061011c91906111e4565b610297565b60405161012e919061119f565b60405180910390f35b61013f6102c7565b005b610149610383565b604051610156919061119f565b60405180910390f35b61017960048036038101906101749190611237565b610396565b60405161018691906111c9565b60405180910390f35b6101a960048036038101906101a491906113bd565b6103df565b6040516101b6919061119f565b60405180910390f35b6101c7610685565b005b6101d1610742565b6040516101de9190611428565b60405180910390f35b61020160048036038101906101fc9190611144565b610768565b60405161020e919061119f565b60405180910390f35b610231600480360381019061022c9190611443565b610796565b60405161023e91906111c9565b60405180910390f35b610261600480360381019061025c9190611237565b61081d565b005b6000600360149054906101000a900460ff161561027f57600080fd5b6102898383610970565b905092915050565b60005481565b6000600360149054906101000a900460ff16156102b357600080fd5b6102be848484610a62565b90509392505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032157600080fd5b600360149054906101000a900460ff1661033a57600080fd5b6000600360146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600360149054906101000a900460ff1681565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600360149054906101000a900460ff16156103fb57600080fd5b6000835190506000838261040f91906114b2565b9050600082118015610422575060148211155b61042b57600080fd5b60008411801561047a575080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b61048357600080fd5b6104d581600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e2690919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060005b828110156106785761058f856001600089858151811061053e5761053d6114f4565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4990919063ffffffff16565b600160008884815181106105a6576105a56114f4565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508581815181106105ff576105fe6114f4565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8760405161066391906111c9565b60405180910390a3808060010191505061051b565b5060019250505092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106df57600080fd5b600360149054906101000a900460ff16156106f957600080fd5b6001600360146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360149054906101000a900460ff161561078457600080fd5b61078e8383610e71565b905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461087757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108b057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610a5091906111c9565b60405180910390a36001905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a9c57600080fd5b600082118015610aeb5750600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211155b610af457600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610b7d57600080fd5b610bcf82600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e2690919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610c6482600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4990919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d3682600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e2690919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e1391906111c9565b60405180910390a3600190509392505050565b600082821115610e3557600080fd5b8183610e419190611523565b905092915050565b6000808284610e589190611557565b905083811015610e6757600080fd5b8091505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610eab57600080fd5b600082118015610efa5750600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211155b610f0357600080fd5b610f5582600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e2690919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610fea82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4990919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161108a91906111c9565b60405180910390a36001905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110db826110b0565b9050919050565b6110eb816110d0565b81146110f657600080fd5b50565b600081359050611108816110e2565b92915050565b6000819050919050565b6111218161110e565b811461112c57600080fd5b50565b60008135905061113e81611118565b92915050565b6000806040838503121561115b5761115a6110a6565b5b6000611169858286016110f9565b925050602061117a8582860161112f565b9150509250929050565b60008115159050919050565b61119981611184565b82525050565b60006020820190506111b46000830184611190565b92915050565b6111c38161110e565b82525050565b60006020820190506111de60008301846111ba565b92915050565b6000806000606084860312156111fd576111fc6110a6565b5b600061120b868287016110f9565b935050602061121c868287016110f9565b925050604061122d8682870161112f565b9150509250925092565b60006020828403121561124d5761124c6110a6565b5b600061125b848285016110f9565b91505092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112b282611269565b810181811067ffffffffffffffff821117156112d1576112d061127a565b5b80604052505050565b60006112e461109c565b90506112f082826112a9565b919050565b600067ffffffffffffffff8211156113105761130f61127a565b5b602082029050602081019050919050565b600080fd5b6000611339611334846112f5565b6112da565b9050808382526020820190506020840283018581111561135c5761135b611321565b5b835b81811015611385578061137188826110f9565b84526020840193505060208101905061135e565b5050509392505050565b600082601f8301126113a4576113a3611264565b5b81356113b4848260208601611326565b91505092915050565b600080604083850312156113d4576113d36110a6565b5b600083013567ffffffffffffffff8111156113f2576113f16110ab565b5b6113fe8582860161138f565b925050602061140f8582860161112f565b9150509250929050565b611422816110d0565b82525050565b600060208201905061143d6000830184611419565b92915050565b6000806040838503121561145a576114596110a6565b5b6000611468858286016110f9565b9250506020611479858286016110f9565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114bd8261110e565b91506114c88361110e565b92508282026114d68161110e565b915082820484148315176114ed576114ec611483565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061152e8261110e565b91506115398361110e565b925082820390508181111561155157611550611483565b5b92915050565b60006115628261110e565b915061156d8361110e565b925082820190508082111561158557611584611483565b5b9291505056fea2646970667358221220ce37124cec85c8613d0ffb1d6d810b886e0bc04d9a495a7ac97236753cb0415564736f6c634300081a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83F12FEC GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x83F12FEC EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x247 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x15F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x1144 JUMP JUMPDEST PUSH2 0x263 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH2 0x2C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x149 PUSH2 0x383 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x1237 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x13BD JUMP JUMPDEST PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0x685 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D1 PUSH2 0x742 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1144 JUMP JUMPDEST PUSH2 0x768 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1237 JUMP JUMPDEST PUSH2 0x81D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x289 DUP4 DUP4 PUSH2 0x970 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2BE DUP5 DUP5 DUP5 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD SWAP1 POP PUSH1 0x0 DUP4 DUP3 PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x14B2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x422 JUMPI POP PUSH1 0x14 DUP3 GT ISZERO JUMPDEST PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 GT DUP1 ISZERO PUSH2 0x47A JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO JUMPDEST PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4D5 DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE26 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x678 JUMPI PUSH2 0x58F DUP6 PUSH1 0x1 PUSH1 0x0 DUP10 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x53E JUMPI PUSH2 0x53D PUSH2 0x14F4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x5A6 JUMPI PUSH2 0x5A5 PUSH2 0x14F4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x5FF JUMPI PUSH2 0x5FE PUSH2 0x14F4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP8 PUSH1 0x40 MLOAD PUSH2 0x663 SWAP2 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x51B JUMP JUMPDEST POP PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x784 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78E DUP4 DUP4 PUSH2 0xE71 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x877 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA50 SWAP2 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0xAEB JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0xAF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xB7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBCF DUP3 PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE26 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xC64 DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD36 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE26 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xE13 SWAP2 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xE35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0xE41 SWAP2 SWAP1 PUSH2 0x1523 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0xE58 SWAP2 SWAP1 PUSH2 0x1557 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xE67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0xEFA JUMPI POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0xF03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF55 DUP3 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE26 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xFEA DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x108A SWAP2 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10DB DUP3 PUSH2 0x10B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10EB DUP2 PUSH2 0x10D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x10F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1108 DUP2 PUSH2 0x10E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1121 DUP2 PUSH2 0x110E JUMP JUMPDEST DUP2 EQ PUSH2 0x112C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x113E DUP2 PUSH2 0x1118 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x115B JUMPI PUSH2 0x115A PUSH2 0x10A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1169 DUP6 DUP3 DUP7 ADD PUSH2 0x10F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x117A DUP6 DUP3 DUP7 ADD PUSH2 0x112F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1199 DUP2 PUSH2 0x1184 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11B4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1190 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11C3 DUP2 PUSH2 0x110E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11DE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11FD JUMPI PUSH2 0x11FC PUSH2 0x10A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x120B DUP7 DUP3 DUP8 ADD PUSH2 0x10F9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x121C DUP7 DUP3 DUP8 ADD PUSH2 0x10F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x122D DUP7 DUP3 DUP8 ADD PUSH2 0x112F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x124D JUMPI PUSH2 0x124C PUSH2 0x10A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x125B DUP5 DUP3 DUP6 ADD PUSH2 0x10F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x12B2 DUP3 PUSH2 0x1269 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x12D1 JUMPI PUSH2 0x12D0 PUSH2 0x127A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E4 PUSH2 0x109C JUMP JUMPDEST SWAP1 POP PUSH2 0x12F0 DUP3 DUP3 PUSH2 0x12A9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1310 JUMPI PUSH2 0x130F PUSH2 0x127A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1339 PUSH2 0x1334 DUP5 PUSH2 0x12F5 JUMP JUMPDEST PUSH2 0x12DA JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x135C JUMPI PUSH2 0x135B PUSH2 0x1321 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1385 JUMPI DUP1 PUSH2 0x1371 DUP9 DUP3 PUSH2 0x10F9 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x135E JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13A4 JUMPI PUSH2 0x13A3 PUSH2 0x1264 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x13B4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1326 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13D4 JUMPI PUSH2 0x13D3 PUSH2 0x10A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13F2 JUMPI PUSH2 0x13F1 PUSH2 0x10AB JUMP JUMPDEST JUMPDEST PUSH2 0x13FE DUP6 DUP3 DUP7 ADD PUSH2 0x138F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x140F DUP6 DUP3 DUP7 ADD PUSH2 0x112F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1422 DUP2 PUSH2 0x10D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x143D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1419 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x145A JUMPI PUSH2 0x1459 PUSH2 0x10A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1468 DUP6 DUP3 DUP7 ADD PUSH2 0x10F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1479 DUP6 DUP3 DUP7 ADD PUSH2 0x10F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14BD DUP3 PUSH2 0x110E JUMP JUMPDEST SWAP2 POP PUSH2 0x14C8 DUP4 PUSH2 0x110E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x14D6 DUP2 PUSH2 0x110E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x14ED JUMPI PUSH2 0x14EC PUSH2 0x1483 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x152E DUP3 PUSH2 0x110E JUMP JUMPDEST SWAP2 POP PUSH2 0x1539 DUP4 PUSH2 0x110E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1551 JUMPI PUSH2 0x1550 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1562 DUP3 PUSH2 0x110E JUMP JUMPDEST SWAP2 POP PUSH2 0x156D DUP4 PUSH2 0x110E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1585 JUMPI PUSH2 0x1584 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE CALLDATACOPY SLT 0x4C 0xEC DUP6 0xC8 PUSH2 0x3D0F 0xFB SAR PUSH14 0x810B886E0BC04D9A495A7AC97236 PUSH22 0x3CB0415564736F6C634300081A003300000000000000 ","sourceMap":"7710:1167:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8143:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1263:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7968:169;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7508:95;;;:::i;:::-;;6887:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2531:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8296:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7328:93;;;:::i;:::-;;5897:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7800:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5526:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6509:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8143:147;8233:4;7063:6;;;;;;;;;;;7062:7;7054:16;;;;;;8253:31:::1;8267:8;8277:6;8253:13;:31::i;:::-;8246:38;;8143:147:::0;;;;:::o;1263:26::-;;;;:::o;7968:169::-;8073:4;7063:6;;;;;;;;;;;7062:7;7054:16;;;;;;8093:38:::1;8112:5;8119:3;8124:6;8093:18;:38::i;:::-;8086:45;;7968:169:::0;;;;;:::o;7508:95::-;6320:5;;;;;;;;;;;6306:19;;:10;:19;;;6298:28;;;;;;7223:6:::1;;;;;;;;;;;7215:15;;;::::0;::::1;;7571:5:::2;7562:6;;:14;;;;;;;;;;;;;;;;;;7588:9;;;;;;;;;;7508:95::o:0;6887:26::-;;;;;;;;;;;;;:::o;2531:118::-;2596:15;2627:8;:16;2636:6;2627:16;;;;;;;;;;;;;;;;2620:23;;2531:118;;;:::o;8296:578::-;8394:4;7063:6;;;;;;;;;;;7062:7;7054:16;;;;;;8407:8:::1;8418:10;:17;8407:28;;8476:14;8508:6;8501:3;8493:21;;;;:::i;:::-;8476:38;;8535:1;8529:3;:7;:20;;;;;8547:2;8540:3;:9;;8529:20;8521:29;;;::::0;::::1;;8574:1;8565:6;:10;:44;;;;;8603:6;8579:8;:20;8588:10;8579:20;;;;;;;;;;;;;;;;:30;;8565:44;8557:53;;;::::0;::::1;;8642:32;8667:6;8642:8;:20;8651:10;8642:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;8619:8;:20;8628:10;8619:20;;;;;;;;;;;;;;;:55;;;;8686:6;8681:170;8702:3;8698:1;:7;8681:170;;;8749:35;8777:6;8749:8;:23;8758:10;8769:1;8758:13;;;;;;;;:::i;:::-;;;;;;;;8749:23;;;;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;8723:8;:23;8732:10;8743:1;8732:13;;;;;;;;:::i;:::-;;;;;;;;8723:23;;;;;;;;;;;;;;;:61;;;;8821:10;8832:1;8821:13;;;;;;;;:::i;:::-;;;;;;;;8800:43;;8809:10;8800:43;;;8836:6;8800:43;;;;;;:::i;:::-;;;;;;;;8707:3;;;;;;;8681:170;;;;8864:4;8857:11;;;;8296:578:::0;;;;:::o;7328:93::-;6320:5;;;;;;;;;;;6306:19;;:10;:19;;;6298:28;;;;;;7063:6:::1;;;;;;;;;;;7062:7;7054:16;;;::::0;::::1;;7392:4:::2;7383:6;;:13;;;;;;;;;;;;;;;;;;7408:7;;;;;;;;;;7328:93::o:0;5897:20::-;;;;;;;;;;;;;:::o;7800:162::-;7909:4;7063:6;;;;;;;;;;;7062:7;7054:16;;;;;;7929:27:::1;7944:3;7949:6;7929:14;:27::i;:::-;7922:34;;7800:162:::0;;;;:::o;5526:147::-;5609:17;5642:7;:15;5650:6;5642:15;;;;;;;;;;;;;;;:25;5658:8;5642:25;;;;;;;;;;;;;;;;5635:32;;5526:147;;;;:::o;6509:178::-;6320:5;;;;;;;;;;;6306:19;;:10;:19;;;6298:28;;;;;;6606:1:::1;6586:22;;:8;:22;;::::0;6578:31:::1;;;::::0;::::1;;6649:8;6621:37;;6642:5;;;;;;;;;;;6621:37;;;;;;;;;;;;6673:8;6665:5;;:16;;;;;;;;;;;;;;;;;;6509:178:::0;:::o;4980:209::-;5064:4;5109:6;5077:7;:19;5085:10;5077:19;;;;;;;;;;;;;;;:29;5097:8;5077:29;;;;;;;;;;;;;;;:38;;;;5148:8;5127:38;;5136:10;5127:38;;;5158:6;5127:38;;;;;;:::i;:::-;;;;;;;;5179:4;5172:11;;4980:209;;;;:::o;3860:485::-;3959:4;3995:1;3980:17;;:3;:17;;;3972:26;;;;;;4022:1;4013:6;:10;:39;;;;;4037:8;:15;4046:5;4037:15;;;;;;;;;;;;;;;;4027:6;:25;;4013:39;4005:48;;;;;;4078:7;:14;4086:5;4078:14;;;;;;;;;;;;;;;:26;4093:10;4078:26;;;;;;;;;;;;;;;;4068:6;:36;;4060:45;;;;;;4132:27;4152:6;4132:8;:15;4141:5;4132:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;4114:8;:15;4123:5;4114:15;;;;;;;;;;;;;;;:45;;;;4182:25;4200:6;4182:8;:13;4191:3;4182:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;4166:8;:13;4175:3;4166:13;;;;;;;;;;;;;;;:41;;;;4243:38;4274:6;4243:7;:14;4251:5;4243:14;;;;;;;;;;;;;;;:26;4258:10;4243:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;4214:7;:14;4222:5;4214:14;;;;;;;;;;;;;;;:26;4229:10;4214:26;;;;;;;;;;;;;;;:67;;;;4309:3;4293:28;;4302:5;4293:28;;;4314:6;4293:28;;;;;;:::i;:::-;;;;;;;;4335:4;4328:11;;3860:485;;;;;:::o;835:114::-;893:7;922:1;917;:6;;909:15;;;;;;942:1;938;:5;;;;:::i;:::-;931:12;;835:114;;;;:::o;955:134::-;1013:7;1029:9;1045:1;1041;:5;;;;:::i;:::-;1029:17;;1066:1;1061;:6;;1053:15;;;;;;1082:1;1075:8;;;955:134;;;;:::o;1890:424::-;1970:4;2006:1;1991:17;;:3;:17;;;1983:26;;;;;;2033:1;2024:6;:10;:44;;;;;2048:8;:20;2057:10;2048:20;;;;;;;;;;;;;;;;2038:6;:30;;2024:44;2016:53;;;;;;2165:32;2190:6;2165:8;:20;2174:10;2165:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;2142:8;:20;2151:10;2142:20;;;;;;;;;;;;;;;:55;;;;2220:25;2238:6;2220:8;:13;2229:3;2220:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;2204:8;:13;2213:3;2204:13;;;;;;;;;;;;;;;:41;;;;2278:3;2257:33;;2266:10;2257:33;;;2283:6;2257:33;;;;;;:::i;:::-;;;;;;;;2304:4;2297:11;;1890:424;;;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:90::-;1711:7;1754:5;1747:13;1740:21;1729:32;;1677:90;;;:::o;1773:109::-;1854:21;1869:5;1854:21;:::i;:::-;1849:3;1842:34;1773:109;;:::o;1888:210::-;1975:4;2013:2;2002:9;1998:18;1990:26;;2026:65;2088:1;2077:9;2073:17;2064:6;2026:65;:::i;:::-;1888:210;;;;:::o;2104:118::-;2191:24;2209:5;2191:24;:::i;:::-;2186:3;2179:37;2104:118;;:::o;2228:222::-;2321:4;2359:2;2348:9;2344:18;2336:26;;2372:71;2440:1;2429:9;2425:17;2416:6;2372:71;:::i;:::-;2228:222;;;;:::o;2456:619::-;2533:6;2541;2549;2598:2;2586:9;2577:7;2573:23;2569:32;2566:119;;;2604:79;;:::i;:::-;2566:119;2724:1;2749:53;2794:7;2785:6;2774:9;2770:22;2749:53;:::i;:::-;2739:63;;2695:117;2851:2;2877:53;2922:7;2913:6;2902:9;2898:22;2877:53;:::i;:::-;2867:63;;2822:118;2979:2;3005:53;3050:7;3041:6;3030:9;3026:22;3005:53;:::i;:::-;2995:63;;2950:118;2456:619;;;;;:::o;3081:329::-;3140:6;3189:2;3177:9;3168:7;3164:23;3160:32;3157:119;;;3195:79;;:::i;:::-;3157:119;3315:1;3340:53;3385:7;3376:6;3365:9;3361:22;3340:53;:::i;:::-;3330:63;;3286:117;3081:329;;;;:::o;3416:117::-;3525:1;3522;3515:12;3539:102;3580:6;3631:2;3627:7;3622:2;3615:5;3611:14;3607:28;3597:38;;3539:102;;;:::o;3647:180::-;3695:77;3692:1;3685:88;3792:4;3789:1;3782:15;3816:4;3813:1;3806:15;3833:281;3916:27;3938:4;3916:27;:::i;:::-;3908:6;3904:40;4046:6;4034:10;4031:22;4010:18;3998:10;3995:34;3992:62;3989:88;;;4057:18;;:::i;:::-;3989:88;4097:10;4093:2;4086:22;3876:238;3833:281;;:::o;4120:129::-;4154:6;4181:20;;:::i;:::-;4171:30;;4210:33;4238:4;4230:6;4210:33;:::i;:::-;4120:129;;;:::o;4255:311::-;4332:4;4422:18;4414:6;4411:30;4408:56;;;4444:18;;:::i;:::-;4408:56;4494:4;4486:6;4482:17;4474:25;;4554:4;4548;4544:15;4536:23;;4255:311;;;:::o;4572:117::-;4681:1;4678;4671:12;4712:710;4808:5;4833:81;4849:64;4906:6;4849:64;:::i;:::-;4833:81;:::i;:::-;4824:90;;4934:5;4963:6;4956:5;4949:21;4997:4;4990:5;4986:16;4979:23;;5050:4;5042:6;5038:17;5030:6;5026:30;5079:3;5071:6;5068:15;5065:122;;;5098:79;;:::i;:::-;5065:122;5213:6;5196:220;5230:6;5225:3;5222:15;5196:220;;;5305:3;5334:37;5367:3;5355:10;5334:37;:::i;:::-;5329:3;5322:50;5401:4;5396:3;5392:14;5385:21;;5272:144;5256:4;5251:3;5247:14;5240:21;;5196:220;;;5200:21;4814:608;;4712:710;;;;;:::o;5445:370::-;5516:5;5565:3;5558:4;5550:6;5546:17;5542:27;5532:122;;5573:79;;:::i;:::-;5532:122;5690:6;5677:20;5715:94;5805:3;5797:6;5790:4;5782:6;5778:17;5715:94;:::i;:::-;5706:103;;5522:293;5445:370;;;;:::o;5821:684::-;5914:6;5922;5971:2;5959:9;5950:7;5946:23;5942:32;5939:119;;;5977:79;;:::i;:::-;5939:119;6125:1;6114:9;6110:17;6097:31;6155:18;6147:6;6144:30;6141:117;;;6177:79;;:::i;:::-;6141:117;6282:78;6352:7;6343:6;6332:9;6328:22;6282:78;:::i;:::-;6272:88;;6068:302;6409:2;6435:53;6480:7;6471:6;6460:9;6456:22;6435:53;:::i;:::-;6425:63;;6380:118;5821:684;;;;;:::o;6511:118::-;6598:24;6616:5;6598:24;:::i;:::-;6593:3;6586:37;6511:118;;:::o;6635:222::-;6728:4;6766:2;6755:9;6751:18;6743:26;;6779:71;6847:1;6836:9;6832:17;6823:6;6779:71;:::i;:::-;6635:222;;;;:::o;6863:474::-;6931:6;6939;6988:2;6976:9;6967:7;6963:23;6959:32;6956:119;;;6994:79;;:::i;:::-;6956:119;7114:1;7139:53;7184:7;7175:6;7164:9;7160:22;7139:53;:::i;:::-;7129:63;;7085:117;7241:2;7267:53;7312:7;7303:6;7292:9;7288:22;7267:53;:::i;:::-;7257:63;;7212:118;6863:474;;;;;:::o;7343:180::-;7391:77;7388:1;7381:88;7488:4;7485:1;7478:15;7512:4;7509:1;7502:15;7529:410;7569:7;7592:20;7610:1;7592:20;:::i;:::-;7587:25;;7626:20;7644:1;7626:20;:::i;:::-;7621:25;;7681:1;7678;7674:9;7703:30;7721:11;7703:30;:::i;:::-;7692:41;;7882:1;7873:7;7869:15;7866:1;7863:22;7843:1;7836:9;7816:83;7793:139;;7912:18;;:::i;:::-;7793:139;7577:362;7529:410;;;;:::o;7945:180::-;7993:77;7990:1;7983:88;8090:4;8087:1;8080:15;8114:4;8111:1;8104:15;8131:194;8171:4;8191:20;8209:1;8191:20;:::i;:::-;8186:25;;8225:20;8243:1;8225:20;:::i;:::-;8220:25;;8269:1;8266;8262:9;8254:17;;8293:1;8287:4;8284:11;8281:37;;;8298:18;;:::i;:::-;8281:37;8131:194;;;;:::o;8331:191::-;8371:3;8390:20;8408:1;8390:20;:::i;:::-;8385:25;;8424:20;8442:1;8424:20;:::i;:::-;8419:25;;8467:1;8464;8460:9;8453:16;;8488:3;8485:1;8482:10;8479:36;;;8495:18;;:::i;:::-;8479:36;8331:191;;;;:::o"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"batchTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"StandardToken modified with pausable transfers.*\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"_owner\":\"address The address which owns the funds.\",\"_spender\":\"address The address which will spend the funds.\"},\"returns\":{\"remaining\":\"A uint256 specifying the amount of tokens still available for the spender.\"}},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"_owner\":\"The address to query the the balance of.\"},\"returns\":{\"balance\":\"An uint256 representing the amount owned by the passed address.\"}},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"_from\":\"address The address which you want to send tokens from\",\"_to\":\"address The address which you want to transfer to\",\"_value\":\"uint256 the amount of tokens to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}},\"title\":\"Pausable token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BecToken.sol\":\"PausableToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BecToken.sol\":{\"content\":\"/*\\r\\n * @source: https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-101#bectokensol\\r\\n * Upgraded from Solidity 0.4 to 0.8, vulnerability may no longer exist\\r\\n * @author: -\\r\\n * @vulnerable_at_lines: 268\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n * @dev Math operations with safety checks that throw on error\\r\\n */\\r\\nlibrary SafeMath {\\r\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a * b;\\r\\n    require(a == 0 || c / a == b);\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    // require(b > 0); // Solidity automatically throws when dividing by 0\\r\\n    uint256 c = a / b;\\r\\n    // require(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    require(b <= a);\\r\\n    return a - b;\\r\\n  }\\r\\n\\r\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a + b;\\r\\n    require(c >= a);\\r\\n    return c;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20Basic\\r\\n * @dev Simpler version of ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/179\\r\\n */\\r\\nabstract contract ERC20Basic {\\r\\n  uint256 public totalSupply;\\r\\n  function balanceOf(address who) public view virtual returns (uint256);\\r\\n  function transfer(address to, uint256 value) public virtual returns (bool);\\r\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Basic token\\r\\n * @dev Basic version of StandardToken, with no allowances.\\r\\n */\\r\\ncontract BasicToken is ERC20Basic {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping(address => uint256) balances;\\r\\n\\r\\n  /**\\r\\n  * @dev transfer token for a specified address\\r\\n  * @param _to The address to transfer to.\\r\\n  * @param _value The amount to be transferred.\\r\\n  */\\r\\n  function transfer(address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[msg.sender]);\\r\\n\\r\\n    // SafeMath.sub will throw if there is not enough balance.\\r\\n    balances[msg.sender] = balances[msg.sender].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    emit Transfer(msg.sender, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev Gets the balance of the specified address.\\r\\n  * @param _owner The address to query the the balance of.\\r\\n  * @return balance An uint256 representing the amount owned by the passed address.\\r\\n  */\\r\\n  function balanceOf(address _owner) public view override returns (uint256 balance) {\\r\\n    return balances[_owner];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\r\\n */\\r\\nabstract contract ERC20 is ERC20Basic {\\r\\n  function allowance(address owner, address spender) public view virtual returns (uint256);\\r\\n  function transferFrom(address from, address to, uint256 value) public virtual returns (bool);\\r\\n  function approve(address spender, uint256 value) public virtual returns (bool);\\r\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * @title Standard ERC20 token\\r\\n *\\r\\n * @dev Implementation of the basic standard token.\\r\\n * @dev https://github.com/ethereum/EIPs/issues/20\\r\\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\r\\n */\\r\\ncontract StandardToken is ERC20, BasicToken {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping (address => mapping (address => uint256)) internal allowed;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Transfer tokens from one address to another\\r\\n   * @param _from address The address which you want to send tokens from\\r\\n   * @param _to address The address which you want to transfer to\\r\\n   * @param _value uint256 the amount of tokens to be transferred\\r\\n   */\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[_from]);\\r\\n    require(_value <= allowed[_from][msg.sender]);\\r\\n\\r\\n    balances[_from] = balances[_from].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\\r\\n    emit Transfer(_from, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r\\n   *\\r\\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\\r\\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r\\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n   * @param _spender The address which will spend the funds.\\r\\n   * @param _value The amount of tokens to be spent.\\r\\n   */\\r\\n  function approve(address _spender, uint256 _value) public override virtual returns (bool) {\\r\\n    allowed[msg.sender][_spender] = _value;\\r\\n    emit Approval(msg.sender, _spender, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n   * @param _owner address The address which owns the funds.\\r\\n   * @param _spender address The address which will spend the funds.\\r\\n   * @return remaining A uint256 specifying the amount of tokens still available for the spender.\\r\\n   */\\r\\n  function allowance(address _owner, address _spender) public view override returns (uint256 remaining) {\\r\\n    return allowed[_owner][_spender];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Ownable\\r\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\r\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\r\\n */\\r\\ncontract Ownable {\\r\\n  address public owner;\\r\\n\\r\\n\\r\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\r\\n   * account.\\r\\n   */\\r\\n  constructor() {\\r\\n    owner = msg.sender;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Throws if called by any account other than the owner.\\r\\n   */\\r\\n  modifier onlyOwner() {\\r\\n    require(msg.sender == owner);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\r\\n   * @param newOwner The address to transfer ownership to.\\r\\n   */\\r\\n  function transferOwnership(address newOwner) onlyOwner public {\\r\\n    require(newOwner != address(0));\\r\\n    emit OwnershipTransferred(owner, newOwner);\\r\\n    owner = newOwner;\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable\\r\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\r\\n */\\r\\ncontract Pausable is Ownable {\\r\\n  event Pause();\\r\\n  event Unpause();\\r\\n\\r\\n  bool public paused = false;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\r\\n   */\\r\\n  modifier whenNotPaused() {\\r\\n    require(!paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is paused.\\r\\n   */\\r\\n  modifier whenPaused() {\\r\\n    require(paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to pause, triggers stopped state\\r\\n   */\\r\\n  function pause() onlyOwner whenNotPaused public {\\r\\n    paused = true;\\r\\n    emit Pause();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to unpause, returns to normal state\\r\\n   */\\r\\n  function unpause() onlyOwner whenPaused public {\\r\\n    paused = false;\\r\\n    emit Unpause();\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable token\\r\\n *\\r\\n * @dev StandardToken modified with pausable transfers.\\r\\n **/\\r\\n\\r\\ncontract PausableToken is StandardToken, Pausable {\\r\\n  using SafeMath for uint256;\\r\\n  \\r\\n  function transfer(address _to, uint256 _value) public whenNotPaused override(BasicToken,ERC20Basic) returns (bool) {\\r\\n    return super.transfer(_to, _value);\\r\\n  }\\r\\n\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.transferFrom(_from, _to, _value);\\r\\n  }\\r\\n\\r\\n  function approve(address _spender, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.approve(_spender, _value);\\r\\n  }\\r\\n\\r\\n  function batchTransfer(address[] memory _receivers, uint256 _value) public whenNotPaused returns (bool) {\\r\\n    uint cnt = _receivers.length;\\r\\n    // <yes> <report> ARITHMETIC\\r\\n    uint256 amount = uint256(cnt) * _value;\\r\\n    require(cnt > 0 && cnt <= 20);\\r\\n    require(_value > 0 && balances[msg.sender] >= amount);\\r\\n\\r\\n    balances[msg.sender] = balances[msg.sender].sub(amount);\\r\\n    for (uint i = 0; i < cnt; i++) {\\r\\n        balances[_receivers[i]] = balances[_receivers[i]].add(_value);\\r\\n        emit Transfer(msg.sender, _receivers[i], _value);\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Bec Token\\r\\n *\\r\\n * @dev Implementation of Bec Token based on the basic standard token.\\r\\n */\\r\\ncontract BecToken is PausableToken {\\r\\n    /**\\r\\n    * Public variables of the token\\r\\n    * The following variables are OPTIONAL vanities. One does not have to include them.\\r\\n    * They allow one to customise the token contract & in no way influences the core functionality.\\r\\n    * Some wallets/interfaces might not even bother to look at this information.\\r\\n    */\\r\\n    string public name = \\\"BeautyChain\\\";\\r\\n    string public symbol = \\\"BEC\\\";\\r\\n    string public version = '1.0.0';\\r\\n    uint8 public decimals = 18;\\r\\n\\r\\n    /**\\r\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n     */\\r\\n    constructor() {\\r\\n      totalSupply = 7000000000 * (10**(uint256(decimals)));\\r\\n      balances[msg.sender] = totalSupply;    // Give the creator all initial tokens\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2716ae512257148b716c05f5e0d13034bae47d0c26ba0381f7241b1776c8fff0\",\"license\":\"UNLICENSED\"}},\"version\":1}"},"SafeMath":{"evm":{"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122069292c7656f5df14069d87cf34325b5cd843298e2c4bc2fbe8540de60bcd4e7c64736f6c634300081a0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x292C7656F5DF14069D87 0xCF CALLVALUE ORIGIN JUMPDEST TLOAD 0xD8 NUMBER 0x29 DUP15 0x2C 0x4B 0xC2 0xFB 0xE8 SLOAD 0xD 0xE6 SIGNEXTEND 0xCD 0x4E PUSH29 0x64736F6C634300081A0033000000000000000000000000000000000000 ","sourceMap":"381:711:0:-:0;;;;;;;;"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations with safety checks that throw on error\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BecToken.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BecToken.sol\":{\"content\":\"/*\\r\\n * @source: https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-101#bectokensol\\r\\n * Upgraded from Solidity 0.4 to 0.8, vulnerability may no longer exist\\r\\n * @author: -\\r\\n * @vulnerable_at_lines: 268\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n * @dev Math operations with safety checks that throw on error\\r\\n */\\r\\nlibrary SafeMath {\\r\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a * b;\\r\\n    require(a == 0 || c / a == b);\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    // require(b > 0); // Solidity automatically throws when dividing by 0\\r\\n    uint256 c = a / b;\\r\\n    // require(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    require(b <= a);\\r\\n    return a - b;\\r\\n  }\\r\\n\\r\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a + b;\\r\\n    require(c >= a);\\r\\n    return c;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20Basic\\r\\n * @dev Simpler version of ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/179\\r\\n */\\r\\nabstract contract ERC20Basic {\\r\\n  uint256 public totalSupply;\\r\\n  function balanceOf(address who) public view virtual returns (uint256);\\r\\n  function transfer(address to, uint256 value) public virtual returns (bool);\\r\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Basic token\\r\\n * @dev Basic version of StandardToken, with no allowances.\\r\\n */\\r\\ncontract BasicToken is ERC20Basic {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping(address => uint256) balances;\\r\\n\\r\\n  /**\\r\\n  * @dev transfer token for a specified address\\r\\n  * @param _to The address to transfer to.\\r\\n  * @param _value The amount to be transferred.\\r\\n  */\\r\\n  function transfer(address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[msg.sender]);\\r\\n\\r\\n    // SafeMath.sub will throw if there is not enough balance.\\r\\n    balances[msg.sender] = balances[msg.sender].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    emit Transfer(msg.sender, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev Gets the balance of the specified address.\\r\\n  * @param _owner The address to query the the balance of.\\r\\n  * @return balance An uint256 representing the amount owned by the passed address.\\r\\n  */\\r\\n  function balanceOf(address _owner) public view override returns (uint256 balance) {\\r\\n    return balances[_owner];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\r\\n */\\r\\nabstract contract ERC20 is ERC20Basic {\\r\\n  function allowance(address owner, address spender) public view virtual returns (uint256);\\r\\n  function transferFrom(address from, address to, uint256 value) public virtual returns (bool);\\r\\n  function approve(address spender, uint256 value) public virtual returns (bool);\\r\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * @title Standard ERC20 token\\r\\n *\\r\\n * @dev Implementation of the basic standard token.\\r\\n * @dev https://github.com/ethereum/EIPs/issues/20\\r\\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\r\\n */\\r\\ncontract StandardToken is ERC20, BasicToken {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping (address => mapping (address => uint256)) internal allowed;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Transfer tokens from one address to another\\r\\n   * @param _from address The address which you want to send tokens from\\r\\n   * @param _to address The address which you want to transfer to\\r\\n   * @param _value uint256 the amount of tokens to be transferred\\r\\n   */\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[_from]);\\r\\n    require(_value <= allowed[_from][msg.sender]);\\r\\n\\r\\n    balances[_from] = balances[_from].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\\r\\n    emit Transfer(_from, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r\\n   *\\r\\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\\r\\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r\\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n   * @param _spender The address which will spend the funds.\\r\\n   * @param _value The amount of tokens to be spent.\\r\\n   */\\r\\n  function approve(address _spender, uint256 _value) public override virtual returns (bool) {\\r\\n    allowed[msg.sender][_spender] = _value;\\r\\n    emit Approval(msg.sender, _spender, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n   * @param _owner address The address which owns the funds.\\r\\n   * @param _spender address The address which will spend the funds.\\r\\n   * @return remaining A uint256 specifying the amount of tokens still available for the spender.\\r\\n   */\\r\\n  function allowance(address _owner, address _spender) public view override returns (uint256 remaining) {\\r\\n    return allowed[_owner][_spender];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Ownable\\r\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\r\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\r\\n */\\r\\ncontract Ownable {\\r\\n  address public owner;\\r\\n\\r\\n\\r\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\r\\n   * account.\\r\\n   */\\r\\n  constructor() {\\r\\n    owner = msg.sender;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Throws if called by any account other than the owner.\\r\\n   */\\r\\n  modifier onlyOwner() {\\r\\n    require(msg.sender == owner);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\r\\n   * @param newOwner The address to transfer ownership to.\\r\\n   */\\r\\n  function transferOwnership(address newOwner) onlyOwner public {\\r\\n    require(newOwner != address(0));\\r\\n    emit OwnershipTransferred(owner, newOwner);\\r\\n    owner = newOwner;\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable\\r\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\r\\n */\\r\\ncontract Pausable is Ownable {\\r\\n  event Pause();\\r\\n  event Unpause();\\r\\n\\r\\n  bool public paused = false;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\r\\n   */\\r\\n  modifier whenNotPaused() {\\r\\n    require(!paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is paused.\\r\\n   */\\r\\n  modifier whenPaused() {\\r\\n    require(paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to pause, triggers stopped state\\r\\n   */\\r\\n  function pause() onlyOwner whenNotPaused public {\\r\\n    paused = true;\\r\\n    emit Pause();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to unpause, returns to normal state\\r\\n   */\\r\\n  function unpause() onlyOwner whenPaused public {\\r\\n    paused = false;\\r\\n    emit Unpause();\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable token\\r\\n *\\r\\n * @dev StandardToken modified with pausable transfers.\\r\\n **/\\r\\n\\r\\ncontract PausableToken is StandardToken, Pausable {\\r\\n  using SafeMath for uint256;\\r\\n  \\r\\n  function transfer(address _to, uint256 _value) public whenNotPaused override(BasicToken,ERC20Basic) returns (bool) {\\r\\n    return super.transfer(_to, _value);\\r\\n  }\\r\\n\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.transferFrom(_from, _to, _value);\\r\\n  }\\r\\n\\r\\n  function approve(address _spender, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.approve(_spender, _value);\\r\\n  }\\r\\n\\r\\n  function batchTransfer(address[] memory _receivers, uint256 _value) public whenNotPaused returns (bool) {\\r\\n    uint cnt = _receivers.length;\\r\\n    // <yes> <report> ARITHMETIC\\r\\n    uint256 amount = uint256(cnt) * _value;\\r\\n    require(cnt > 0 && cnt <= 20);\\r\\n    require(_value > 0 && balances[msg.sender] >= amount);\\r\\n\\r\\n    balances[msg.sender] = balances[msg.sender].sub(amount);\\r\\n    for (uint i = 0; i < cnt; i++) {\\r\\n        balances[_receivers[i]] = balances[_receivers[i]].add(_value);\\r\\n        emit Transfer(msg.sender, _receivers[i], _value);\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Bec Token\\r\\n *\\r\\n * @dev Implementation of Bec Token based on the basic standard token.\\r\\n */\\r\\ncontract BecToken is PausableToken {\\r\\n    /**\\r\\n    * Public variables of the token\\r\\n    * The following variables are OPTIONAL vanities. One does not have to include them.\\r\\n    * They allow one to customise the token contract & in no way influences the core functionality.\\r\\n    * Some wallets/interfaces might not even bother to look at this information.\\r\\n    */\\r\\n    string public name = \\\"BeautyChain\\\";\\r\\n    string public symbol = \\\"BEC\\\";\\r\\n    string public version = '1.0.0';\\r\\n    uint8 public decimals = 18;\\r\\n\\r\\n    /**\\r\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n     */\\r\\n    constructor() {\\r\\n      totalSupply = 7000000000 * (10**(uint256(decimals)));\\r\\n      balances[msg.sender] = totalSupply;    // Give the creator all initial tokens\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2716ae512257148b716c05f5e0d13034bae47d0c26ba0381f7241b1776c8fff0\",\"license\":\"UNLICENSED\"}},\"version\":1}"},"StandardToken":{"evm":{"deployedBytecode":{"object":"608060405234801561001057600080fd5b50600436106100625760003560e01c8063095ea7b31461006757806318160ddd1461009757806323b872dd146100b557806370a08231146100e5578063a9059cbb14610115578063dd62ed3e14610145575b600080fd5b610081600480360381019061007c9190610a10565b610175565b60405161008e9190610a6b565b60405180910390f35b61009f610267565b6040516100ac9190610a95565b60405180910390f35b6100cf60048036038101906100ca9190610ab0565b61026d565b6040516100dc9190610a6b565b60405180910390f35b6100ff60048036038101906100fa9190610b03565b610631565b60405161010c9190610a95565b60405180910390f35b61012f600480360381019061012a9190610a10565b61067a565b60405161013c9190610a6b565b60405180910390f35b61015f600480360381019061015a9190610b30565b6108a5565b60405161016c9190610a95565b60405180910390f35b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516102559190610a95565b60405180910390a36001905092915050565b60005481565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036102a757600080fd5b6000821180156102f65750600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211155b6102ff57600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561038857600080fd5b6103da82600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461092c90919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061046f82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461094f90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061054182600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461092c90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161061e9190610a95565b60405180910390a3600190509392505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106b457600080fd5b6000821180156107035750600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211155b61070c57600080fd5b61075e82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461092c90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506107f382600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461094f90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108939190610a95565b60405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008282111561093b57600080fd5b81836109479190610b9f565b905092915050565b600080828461095e9190610bd3565b90508381101561096d57600080fd5b8091505092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109a78261097c565b9050919050565b6109b78161099c565b81146109c257600080fd5b50565b6000813590506109d4816109ae565b92915050565b6000819050919050565b6109ed816109da565b81146109f857600080fd5b50565b600081359050610a0a816109e4565b92915050565b60008060408385031215610a2757610a26610977565b5b6000610a35858286016109c5565b9250506020610a46858286016109fb565b9150509250929050565b60008115159050919050565b610a6581610a50565b82525050565b6000602082019050610a806000830184610a5c565b92915050565b610a8f816109da565b82525050565b6000602082019050610aaa6000830184610a86565b92915050565b600080600060608486031215610ac957610ac8610977565b5b6000610ad7868287016109c5565b9350506020610ae8868287016109c5565b9250506040610af9868287016109fb565b9150509250925092565b600060208284031215610b1957610b18610977565b5b6000610b27848285016109c5565b91505092915050565b60008060408385031215610b4757610b46610977565b5b6000610b55858286016109c5565b9250506020610b66858286016109c5565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610baa826109da565b9150610bb5836109da565b9250828203905081811115610bcd57610bcc610b70565b5b92915050565b6000610bde826109da565b9150610be9836109da565b9250828201905080821115610c0157610c00610b70565b5b9291505056fea26469706673582212204c42a185dda00b81565325403a0efdf8ee8852585efc3bcc7e4c2f626aea30ab64736f6c634300081a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x145 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0xA10 JUMP JUMPDEST PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x267 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCA SWAP2 SWAP1 PUSH2 0xAB0 JUMP JUMPDEST PUSH2 0x26D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC SWAP2 SWAP1 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFA SWAP2 SWAP1 PUSH2 0xB03 JUMP JUMPDEST PUSH2 0x631 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0xA10 JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0xB30 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x2F6 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3DA DUP3 PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x92C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x46F DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x94F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x541 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x92C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x61E SWAP2 SWAP1 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x703 JUMPI POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x70C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75E DUP3 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x92C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x7F3 DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x94F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x893 SWAP2 SWAP1 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x93B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0x947 SWAP2 SWAP1 PUSH2 0xB9F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x95E SWAP2 SWAP1 PUSH2 0xBD3 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x96D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A7 DUP3 PUSH2 0x97C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9B7 DUP2 PUSH2 0x99C JUMP JUMPDEST DUP2 EQ PUSH2 0x9C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9D4 DUP2 PUSH2 0x9AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9ED DUP2 PUSH2 0x9DA JUMP JUMPDEST DUP2 EQ PUSH2 0x9F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA0A DUP2 PUSH2 0x9E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA27 JUMPI PUSH2 0xA26 PUSH2 0x977 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA35 DUP6 DUP3 DUP7 ADD PUSH2 0x9C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA46 DUP6 DUP3 DUP7 ADD PUSH2 0x9FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA65 DUP2 PUSH2 0xA50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA80 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA8F DUP2 PUSH2 0x9DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAAA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAC9 JUMPI PUSH2 0xAC8 PUSH2 0x977 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAD7 DUP7 DUP3 DUP8 ADD PUSH2 0x9C5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xAE8 DUP7 DUP3 DUP8 ADD PUSH2 0x9C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xAF9 DUP7 DUP3 DUP8 ADD PUSH2 0x9FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB19 JUMPI PUSH2 0xB18 PUSH2 0x977 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB27 DUP5 DUP3 DUP6 ADD PUSH2 0x9C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB47 JUMPI PUSH2 0xB46 PUSH2 0x977 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB55 DUP6 DUP3 DUP7 ADD PUSH2 0x9C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB66 DUP6 DUP3 DUP7 ADD PUSH2 0x9C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBAA DUP3 PUSH2 0x9DA JUMP JUMPDEST SWAP2 POP PUSH2 0xBB5 DUP4 PUSH2 0x9DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xBCD JUMPI PUSH2 0xBCC PUSH2 0xB70 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBDE DUP3 PUSH2 0x9DA JUMP JUMPDEST SWAP2 POP PUSH2 0xBE9 DUP4 PUSH2 0x9DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC01 JUMPI PUSH2 0xC00 PUSH2 0xB70 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C TIMESTAMP LOG1 DUP6 0xDD LOG0 SIGNEXTEND DUP2 JUMP MSTORE8 0x25 BLOCKHASH GASPRICE 0xE REVERT 0xF8 0xEE DUP9 MSTORE PC MCOPY 0xFC EXTCODESIZE 0xCC PUSH31 0x4C2F626AEA30AB64736F6C634300081A003300000000000000000000000000 ","sourceMap":"3426:2250:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:209;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1263:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3860:485;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2531:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1890:424;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5526:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4980:209;5064:4;5109:6;5077:7;:19;5085:10;5077:19;;;;;;;;;;;;;;;:29;5097:8;5077:29;;;;;;;;;;;;;;;:38;;;;5148:8;5127:38;;5136:10;5127:38;;;5158:6;5127:38;;;;;;:::i;:::-;;;;;;;;5179:4;5172:11;;4980:209;;;;:::o;1263:26::-;;;;:::o;3860:485::-;3959:4;3995:1;3980:17;;:3;:17;;;3972:26;;;;;;4022:1;4013:6;:10;:39;;;;;4037:8;:15;4046:5;4037:15;;;;;;;;;;;;;;;;4027:6;:25;;4013:39;4005:48;;;;;;4078:7;:14;4086:5;4078:14;;;;;;;;;;;;;;;:26;4093:10;4078:26;;;;;;;;;;;;;;;;4068:6;:36;;4060:45;;;;;;4132:27;4152:6;4132:8;:15;4141:5;4132:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;4114:8;:15;4123:5;4114:15;;;;;;;;;;;;;;;:45;;;;4182:25;4200:6;4182:8;:13;4191:3;4182:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;4166:8;:13;4175:3;4166:13;;;;;;;;;;;;;;;:41;;;;4243:38;4274:6;4243:7;:14;4251:5;4243:14;;;;;;;;;;;;;;;:26;4258:10;4243:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;4214:7;:14;4222:5;4214:14;;;;;;;;;;;;;;;:26;4229:10;4214:26;;;;;;;;;;;;;;;:67;;;;4309:3;4293:28;;4302:5;4293:28;;;4314:6;4293:28;;;;;;:::i;:::-;;;;;;;;4335:4;4328:11;;3860:485;;;;;:::o;2531:118::-;2596:15;2627:8;:16;2636:6;2627:16;;;;;;;;;;;;;;;;2620:23;;2531:118;;;:::o;1890:424::-;1970:4;2006:1;1991:17;;:3;:17;;;1983:26;;;;;;2033:1;2024:6;:10;:44;;;;;2048:8;:20;2057:10;2048:20;;;;;;;;;;;;;;;;2038:6;:30;;2024:44;2016:53;;;;;;2165:32;2190:6;2165:8;:20;2174:10;2165:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;2142:8;:20;2151:10;2142:20;;;;;;;;;;;;;;;:55;;;;2220:25;2238:6;2220:8;:13;2229:3;2220:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;2204:8;:13;2213:3;2204:13;;;;;;;;;;;;;;;:41;;;;2278:3;2257:33;;2266:10;2257:33;;;2283:6;2257:33;;;;;;:::i;:::-;;;;;;;;2304:4;2297:11;;1890:424;;;;:::o;5526:147::-;5609:17;5642:7;:15;5650:6;5642:15;;;;;;;;;;;;;;;:25;5658:8;5642:25;;;;;;;;;;;;;;;;5635:32;;5526:147;;;;:::o;835:114::-;893:7;922:1;917;:6;;909:15;;;;;;942:1;938;:5;;;;:::i;:::-;931:12;;835:114;;;;:::o;955:134::-;1013:7;1029:9;1045:1;1041;:5;;;;:::i;:::-;1029:17;;1066:1;1061;:6;;1053:15;;;;;;1082:1;1075:8;;;955:134;;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:90::-;1711:7;1754:5;1747:13;1740:21;1729:32;;1677:90;;;:::o;1773:109::-;1854:21;1869:5;1854:21;:::i;:::-;1849:3;1842:34;1773:109;;:::o;1888:210::-;1975:4;2013:2;2002:9;1998:18;1990:26;;2026:65;2088:1;2077:9;2073:17;2064:6;2026:65;:::i;:::-;1888:210;;;;:::o;2104:118::-;2191:24;2209:5;2191:24;:::i;:::-;2186:3;2179:37;2104:118;;:::o;2228:222::-;2321:4;2359:2;2348:9;2344:18;2336:26;;2372:71;2440:1;2429:9;2425:17;2416:6;2372:71;:::i;:::-;2228:222;;;;:::o;2456:619::-;2533:6;2541;2549;2598:2;2586:9;2577:7;2573:23;2569:32;2566:119;;;2604:79;;:::i;:::-;2566:119;2724:1;2749:53;2794:7;2785:6;2774:9;2770:22;2749:53;:::i;:::-;2739:63;;2695:117;2851:2;2877:53;2922:7;2913:6;2902:9;2898:22;2877:53;:::i;:::-;2867:63;;2822:118;2979:2;3005:53;3050:7;3041:6;3030:9;3026:22;3005:53;:::i;:::-;2995:63;;2950:118;2456:619;;;;;:::o;3081:329::-;3140:6;3189:2;3177:9;3168:7;3164:23;3160:32;3157:119;;;3195:79;;:::i;:::-;3157:119;3315:1;3340:53;3385:7;3376:6;3365:9;3361:22;3340:53;:::i;:::-;3330:63;;3286:117;3081:329;;;;:::o;3416:474::-;3484:6;3492;3541:2;3529:9;3520:7;3516:23;3512:32;3509:119;;;3547:79;;:::i;:::-;3509:119;3667:1;3692:53;3737:7;3728:6;3717:9;3713:22;3692:53;:::i;:::-;3682:63;;3638:117;3794:2;3820:53;3865:7;3856:6;3845:9;3841:22;3820:53;:::i;:::-;3810:63;;3765:118;3416:474;;;;;:::o;3896:180::-;3944:77;3941:1;3934:88;4041:4;4038:1;4031:15;4065:4;4062:1;4055:15;4082:194;4122:4;4142:20;4160:1;4142:20;:::i;:::-;4137:25;;4176:20;4194:1;4176:20;:::i;:::-;4171:25;;4220:1;4217;4213:9;4205:17;;4244:1;4238:4;4235:11;4232:37;;;4249:18;;:::i;:::-;4232:37;4082:194;;;;:::o;4282:191::-;4322:3;4341:20;4359:1;4341:20;:::i;:::-;4336:25;;4375:20;4393:1;4375:20;:::i;:::-;4370:25;;4418:1;4415;4411:9;4404:16;;4439:3;4436:1;4433:10;4430:36;;;4446:18;;:::i;:::-;4430:36;4282:191;;;;:::o"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard token.https://github.com/ethereum/EIPs/issues/20Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"_owner\":\"address The address which owns the funds.\",\"_spender\":\"address The address which will spend the funds.\"},\"returns\":{\"remaining\":\"A uint256 specifying the amount of tokens still available for the spender.\"}},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"_owner\":\"The address to query the the balance of.\"},\"returns\":{\"balance\":\"An uint256 representing the amount owned by the passed address.\"}},\"transfer(address,uint256)\":{\"details\":\"transfer token for a specified address\",\"params\":{\"_to\":\"The address to transfer to.\",\"_value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"_from\":\"address The address which you want to send tokens from\",\"_to\":\"address The address which you want to transfer to\",\"_value\":\"uint256 the amount of tokens to be transferred\"}}},\"title\":\"Standard ERC20 token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BecToken.sol\":\"StandardToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BecToken.sol\":{\"content\":\"/*\\r\\n * @source: https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-101#bectokensol\\r\\n * Upgraded from Solidity 0.4 to 0.8, vulnerability may no longer exist\\r\\n * @author: -\\r\\n * @vulnerable_at_lines: 268\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n * @dev Math operations with safety checks that throw on error\\r\\n */\\r\\nlibrary SafeMath {\\r\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a * b;\\r\\n    require(a == 0 || c / a == b);\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    // require(b > 0); // Solidity automatically throws when dividing by 0\\r\\n    uint256 c = a / b;\\r\\n    // require(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    require(b <= a);\\r\\n    return a - b;\\r\\n  }\\r\\n\\r\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a + b;\\r\\n    require(c >= a);\\r\\n    return c;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20Basic\\r\\n * @dev Simpler version of ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/179\\r\\n */\\r\\nabstract contract ERC20Basic {\\r\\n  uint256 public totalSupply;\\r\\n  function balanceOf(address who) public view virtual returns (uint256);\\r\\n  function transfer(address to, uint256 value) public virtual returns (bool);\\r\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Basic token\\r\\n * @dev Basic version of StandardToken, with no allowances.\\r\\n */\\r\\ncontract BasicToken is ERC20Basic {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping(address => uint256) balances;\\r\\n\\r\\n  /**\\r\\n  * @dev transfer token for a specified address\\r\\n  * @param _to The address to transfer to.\\r\\n  * @param _value The amount to be transferred.\\r\\n  */\\r\\n  function transfer(address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[msg.sender]);\\r\\n\\r\\n    // SafeMath.sub will throw if there is not enough balance.\\r\\n    balances[msg.sender] = balances[msg.sender].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    emit Transfer(msg.sender, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev Gets the balance of the specified address.\\r\\n  * @param _owner The address to query the the balance of.\\r\\n  * @return balance An uint256 representing the amount owned by the passed address.\\r\\n  */\\r\\n  function balanceOf(address _owner) public view override returns (uint256 balance) {\\r\\n    return balances[_owner];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20 interface\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\r\\n */\\r\\nabstract contract ERC20 is ERC20Basic {\\r\\n  function allowance(address owner, address spender) public view virtual returns (uint256);\\r\\n  function transferFrom(address from, address to, uint256 value) public virtual returns (bool);\\r\\n  function approve(address spender, uint256 value) public virtual returns (bool);\\r\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * @title Standard ERC20 token\\r\\n *\\r\\n * @dev Implementation of the basic standard token.\\r\\n * @dev https://github.com/ethereum/EIPs/issues/20\\r\\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\r\\n */\\r\\ncontract StandardToken is ERC20, BasicToken {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping (address => mapping (address => uint256)) internal allowed;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Transfer tokens from one address to another\\r\\n   * @param _from address The address which you want to send tokens from\\r\\n   * @param _to address The address which you want to transfer to\\r\\n   * @param _value uint256 the amount of tokens to be transferred\\r\\n   */\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public override virtual returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value > 0 && _value <= balances[_from]);\\r\\n    require(_value <= allowed[_from][msg.sender]);\\r\\n\\r\\n    balances[_from] = balances[_from].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\\r\\n    emit Transfer(_from, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r\\n   *\\r\\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\\r\\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r\\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n   * @param _spender The address which will spend the funds.\\r\\n   * @param _value The amount of tokens to be spent.\\r\\n   */\\r\\n  function approve(address _spender, uint256 _value) public override virtual returns (bool) {\\r\\n    allowed[msg.sender][_spender] = _value;\\r\\n    emit Approval(msg.sender, _spender, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n   * @param _owner address The address which owns the funds.\\r\\n   * @param _spender address The address which will spend the funds.\\r\\n   * @return remaining A uint256 specifying the amount of tokens still available for the spender.\\r\\n   */\\r\\n  function allowance(address _owner, address _spender) public view override returns (uint256 remaining) {\\r\\n    return allowed[_owner][_spender];\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Ownable\\r\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\r\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\r\\n */\\r\\ncontract Ownable {\\r\\n  address public owner;\\r\\n\\r\\n\\r\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\r\\n   * account.\\r\\n   */\\r\\n  constructor() {\\r\\n    owner = msg.sender;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Throws if called by any account other than the owner.\\r\\n   */\\r\\n  modifier onlyOwner() {\\r\\n    require(msg.sender == owner);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\r\\n   * @param newOwner The address to transfer ownership to.\\r\\n   */\\r\\n  function transferOwnership(address newOwner) onlyOwner public {\\r\\n    require(newOwner != address(0));\\r\\n    emit OwnershipTransferred(owner, newOwner);\\r\\n    owner = newOwner;\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable\\r\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\r\\n */\\r\\ncontract Pausable is Ownable {\\r\\n  event Pause();\\r\\n  event Unpause();\\r\\n\\r\\n  bool public paused = false;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\r\\n   */\\r\\n  modifier whenNotPaused() {\\r\\n    require(!paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Modifier to make a function callable only when the contract is paused.\\r\\n   */\\r\\n  modifier whenPaused() {\\r\\n    require(paused);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to pause, triggers stopped state\\r\\n   */\\r\\n  function pause() onlyOwner whenNotPaused public {\\r\\n    paused = true;\\r\\n    emit Pause();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev called by the owner to unpause, returns to normal state\\r\\n   */\\r\\n  function unpause() onlyOwner whenPaused public {\\r\\n    paused = false;\\r\\n    emit Unpause();\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable token\\r\\n *\\r\\n * @dev StandardToken modified with pausable transfers.\\r\\n **/\\r\\n\\r\\ncontract PausableToken is StandardToken, Pausable {\\r\\n  using SafeMath for uint256;\\r\\n  \\r\\n  function transfer(address _to, uint256 _value) public whenNotPaused override(BasicToken,ERC20Basic) returns (bool) {\\r\\n    return super.transfer(_to, _value);\\r\\n  }\\r\\n\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.transferFrom(_from, _to, _value);\\r\\n  }\\r\\n\\r\\n  function approve(address _spender, uint256 _value) public whenNotPaused override returns (bool) {\\r\\n    return super.approve(_spender, _value);\\r\\n  }\\r\\n\\r\\n  function batchTransfer(address[] memory _receivers, uint256 _value) public whenNotPaused returns (bool) {\\r\\n    uint cnt = _receivers.length;\\r\\n    // <yes> <report> ARITHMETIC\\r\\n    uint256 amount = uint256(cnt) * _value;\\r\\n    require(cnt > 0 && cnt <= 20);\\r\\n    require(_value > 0 && balances[msg.sender] >= amount);\\r\\n\\r\\n    balances[msg.sender] = balances[msg.sender].sub(amount);\\r\\n    for (uint i = 0; i < cnt; i++) {\\r\\n        balances[_receivers[i]] = balances[_receivers[i]].add(_value);\\r\\n        emit Transfer(msg.sender, _receivers[i], _value);\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Bec Token\\r\\n *\\r\\n * @dev Implementation of Bec Token based on the basic standard token.\\r\\n */\\r\\ncontract BecToken is PausableToken {\\r\\n    /**\\r\\n    * Public variables of the token\\r\\n    * The following variables are OPTIONAL vanities. One does not have to include them.\\r\\n    * They allow one to customise the token contract & in no way influences the core functionality.\\r\\n    * Some wallets/interfaces might not even bother to look at this information.\\r\\n    */\\r\\n    string public name = \\\"BeautyChain\\\";\\r\\n    string public symbol = \\\"BEC\\\";\\r\\n    string public version = '1.0.0';\\r\\n    uint8 public decimals = 18;\\r\\n\\r\\n    /**\\r\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n     */\\r\\n    constructor() {\\r\\n      totalSupply = 7000000000 * (10**(uint256(decimals)));\\r\\n      balances[msg.sender] = totalSupply;    // Give the creator all initial tokens\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2716ae512257148b716c05f5e0d13034bae47d0c26ba0381f7241b1776c8fff0\",\"license\":\"UNLICENSED\"}},\"version\":1}"}}},"sources":{"BecToken.sol":{"id":0}}}

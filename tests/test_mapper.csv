id,compiler_output_json,contract_node,contract_name,address_hex,source_line,source_code
BeerBar require 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x18AB,54,"hasRole(OWNER, msg.sender)"
BeerBar PUSH32 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x193F,56,BarkeeperAdded(account)
BeerBar after PUSH32 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1940,56,BarkeeperAdded(account)
EtherLotto exception_state 0.5.17,tests/compiler0517/compiled/EtherLotto.json,compiler0517/EtherLotto.sol,EtherLotto,0x00F9,37,assert(msg.value == TICKET_AMOUNT)
EtherLotto dependence_on_predictable_environment_variable 0.5.17,tests/compiler0517/compiled/EtherLotto.json,compiler0517/EtherLotto.sol,EtherLotto,0x014B,47,if (random == 0) {\r\n\r\n            // Send fee to bank account.\r\n            bank.transfer(FEE_AMOUNT);\r\n\r\n            // Send jackpot to winner.\r\n            msg.sender.transfer(pot - FEE_AMOUNT);\r\n\r\n            // Restart jackpot.\r\n            pot = 0;\r\n        }
EtherLotto multiple_calls_in_a_single_transaction 0.5.17,tests/compiler0517/compiled/EtherLotto.json,compiler0517/EtherLotto.sol,EtherLotto,0x01E8,53,msg.sender.transfer(pot - FEE_AMOUNT)
EtherLotto exception_state 0.6.12,tests/compiler0612/compiled/EtherLotto.json,compiler0612/contracts/EtherLotto.sol,EtherLotto,0x0271,38,assert(msg.value == TICKET_AMOUNT)
EtherLotto dependence_on_predictable_environment_variable 0.6.12,tests/compiler0612/compiled/EtherLotto.json,compiler0612/contracts/EtherLotto.sol,EtherLotto,0x02C3,48,if (random == 0) {\n\n            // Send fee to bank account.\n            bank.transfer(FEE_AMOUNT);\n\n            // Send jackpot to winner.\n            msg.sender.transfer(pot - FEE_AMOUNT);\n\n            // Restart jackpot.\n            pot = 0;\n        }
EtherLotto multiple_calls_in_a_single_transaction 0.6.12,tests/compiler0612/compiled/EtherLotto.json,compiler0612/contracts/EtherLotto.sol,EtherLotto,0x035F,54,msg.sender.transfer(pot - FEE_AMOUNT)
EtherLotto exception_state 0.7.6,tests/compiler076/compiled/EtherLotto.json,compiler076/EtherLotto.sol,EtherLotto,0x0271,38,assert(msg.value == TICKET_AMOUNT)
EtherLotto dependence_on_predictable_environment_variable 0.7.6,tests/compiler076/compiled/EtherLotto.json,compiler076/EtherLotto.sol,EtherLotto,0x02C3,48,if (random == 0) {\n\n            // Send fee to bank account.\n            bank.transfer(FEE_AMOUNT);\n\n            // Send jackpot to winner.\n            msg.sender.transfer(pot - FEE_AMOUNT);\n\n            // Restart jackpot.\n            pot = 0;\n        }
EtherLotto multiple_calls_in_a_single_transaction 0.7.6,tests/compiler076/compiled/EtherLotto.json,compiler076/EtherLotto.sol,EtherLotto,0x035F,54,msg.sender.transfer(pot - FEE_AMOUNT)
ArtithmeticTestContract last_instruction_before_return 0.8.26,tests/compiler0826/compiled/ArtithmeticTestContract.json,ArtithmeticTestContract.sol,ArtithmeticTestContract,0x01C8,7,uint256 div = b != 0 ? a / b : 0
BeerBar method 0xD86BB313 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x15E4,59,"function revokeBarkeeper(address account) external {\n        require(hasRole(OWNER, msg.sender), ""Barkeepers can be revoked by owners"");\n        _revokeRole(BARKEEPER, msg.sender);\n        emit BarkeeperRemoved(account);\n    }"
BeerBar method 0xDA252947 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1699,17,uint public _beerPrice
BeerBar method 0xDA9017DC 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1750,85,"function openBar() external {\n        require(hasRole(BARKEEPER, msg.sender), "" The bar is opened and closed by barkeepers"");\n        _barIsOpen = true;\n        emit BarOpened();\n    }"
BeerBar method 0xE61A0DB4 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x17F3,15,"bytes32 public constant BARKEEPER = keccak256(""BARKEEPER"")"
BeerBar method 0xCB1560E5 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x130C,65,"function renounceBarkeeper() external {\n        require(hasRole(BARKEEPER, msg.sender), ""Barkeepers can renounce themselves"");\n        _revokeRole(BARKEEPER, msg.sender);\n        emit BarkeeperRemoved(msg.sender);\n    }"
BeerBar method 0xCF45D7D5 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x13AF,49,"function isBarkeeper(address account) external view returns (bool) {\n        return hasRole(BARKEEPER, account);\n    }"
BeerBar method 0xD547741F 0.8.26,tests/compiler0826/compiled/BeerBar.json,@openzeppelin/contracts/access/AccessControl.sol,BeerBar,0x1478,137,"function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }"
BeerBar method 0xD7464019 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x152D,16,bool public _barIsOpen
BeerBar method 0x91D14854 0.8.26,tests/compiler0826/compiled/BeerBar.json,@openzeppelin/contracts/access/AccessControl.sol,BeerBar,0x10CD,78,"function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }"
BeerBar method 0xA217FDDF 0.8.26,tests/compiler0826/compiled/BeerBar.json,@openzeppelin/contracts/access/AccessControl.sol,BeerBar,0x1196,57,bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00
BeerBar method 0xA4821719 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x124D,161,"function buyToken() external payable {\n        require(_beerPrice > 0, "" Beer price has not been set"");\n        require(beerTokenContract.transfer(msg.sender, (msg.value-(msg.value % _beerPrice))/_beerPrice),""Failed to transfer"");\n        //require(beerTokenContract.mint(msg.sender, (msg.value-(msg.value % _beerPrice))/_beerPrice),""Failed to mint"");\n    }"
BeerBar method 0xC2893A95 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1257,120,"function serveBeer(address customer, uint amount) external {\n        require(_barIsOpen, "" Beer can only be served while the bar is open"");\n        require(hasRole(BARKEEPER, msg.sender), "" Only barkeepers can serve beer"");\n        require(orders[customer] >= amount, "" The customer did not order that much!"");\n        orders[customer] -= amount;\n        beerTokenContract.burn(amount);\n    }"
BeerBar method 0x7065CB48 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x0DE5,34,"function addOwner(address account) external {\n        require(hasRole(OWNER, msg.sender), ""Only owners can add new owners"");\n        _grantRole(OWNER, account);\n        emit OwnerAdded(account);\n    }"
BeerBar method 0x79320FE2 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x0E9A,74,"function setBeerTokenContractAddress(address addr) external {\n        require(hasRole(OWNER, msg.sender), ""This can only be done by owners"");\n        beerTokenContract = BeerToken(addr);\n    }"
BeerBar method 0x8124020E 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x0F4F,142,function pendingBeer(address customer) external view returns (uint256) {\n        return orders[customer];\n    }
BeerBar method 0x8943EC02 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1018,104,"function tokenReceived(address _from, uint _value, bytes memory _data) public virtual {\n        require(msg.sender == address(beerTokenContract),""Wrong token"");\n        if(keccak256(_data) == hex""b308cfbb7d2d38db3a215f9728501ac69445a6afbee328cdeae4e23db54b850a"") {\n            require(hasRole(OWNER, tx.origin) ,""Only the token owner can supply"");\n            emit BeerSupplied(_from, _value);\n        } else if(keccak256(_data) == hex""e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c"") {\n            require(!hasRole(BARKEEPER, msg.sender) && !hasRole(OWNER, msg.sender), ""Only customers can order"");\n            require(_barIsOpen, ""Bar is closed"");\n            orders[_from] += _value;\n            emit BeerOrdered(_from, _value);\n        }\n    }"
BeerBar method 0x2F54BF6E 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x0AFD,30,"function isOwner(address account) external view returns (bool) {\n        return hasRole(OWNER, account);\n    }"
BeerBar method 0x36568ABE 0.8.26,tests/compiler0826/compiled/BeerBar.json,@openzeppelin/contracts/access/AccessControl.sol,BeerBar,0x0BC6,157,"function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }"
BeerBar method 0x4C2E589D 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x0C7B,147,"function setBeerPrice(uint256 price) external {\n        require(!_barIsOpen, "" Beer price can only be changed when the bar is closed"");\n        require(hasRole(OWNER, msg.sender), "" Beer price can only be changed by owners "");\n        _beerPrice = price;\n    }"
BeerBar method 0x514FCAC7 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x0D30,132,"function cancelOrder(uint amount) external {\n        require(orders[msg.sender] >= amount);\n        require(beerTokenContract.transfer(msg.sender, amount),""Failed to transfer tokens"");\n        orders[msg.sender] -= amount;\n        emit BeerCanceled(msg.sender, amount);\n\n    }"
BeerBar method 0x28CE8031 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x0837,153,function getBeerPrice() external view returns(uint256) {\n        return _beerPrice;\n    }
BeerBar method 0x28EF8946 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x08EE,91,"function closeBar() external virtual {\n        require(hasRole(BARKEEPER, msg.sender), "" The bar is opened and closed by barkeepers"");\n        _barIsOpen = false;\n        emit BarClosed();\n    }"
BeerBar method 0x2B585821 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x0991,97,function barIsOpen() external view returns (bool) {\n        return _barIsOpen;\n    }
BeerBar method 0x2F2FF15D 0.8.26,tests/compiler0826/compiled/BeerBar.json,@openzeppelin/contracts/access/AccessControl.sol,BeerBar,0x0A48,122,"function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }"
BeerBar method 0x1BC73E3A 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x055D,13,BeerToken public beerTokenContract
BeerBar method 0x1C0E7B8A 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x0614,79,function beerTokenContractAddress() external view returns(address) {\n        return address(beerTokenContract);\n    }
BeerBar method 0x248A9CA3 0.8.26,tests/compiler0826/compiled/BeerBar.json,@openzeppelin/contracts/access/AccessControl.sol,BeerBar,0x06CB,106,function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }
BeerBar method 0x28C23A45 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x0794,40,"function renounceOwner() external {\n        require(hasRole(OWNER, msg.sender), ""Owners can only renounce themselves again"");\n        _revokeRole(OWNER, msg.sender);\n        emit OwnerRemoved(msg.sender);\n    }"
BeerBar method 0x01B05336 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x0273,53,"function addBarkeeper(address account) external {\n        require(hasRole(OWNER, msg.sender), ""Barkeepers have to be set by owners"");\n         _grantRole(BARKEEPER, account);\n         emit BarkeeperAdded(account);\n    }"
BeerBar method 0x01FFC9A7 0.8.26,tests/compiler0826/compiled/BeerBar.json,@openzeppelin/contracts/access/AccessControl.sol,BeerBar,0x0328,71,function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }
BeerBar method 0x117803E3 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x03F1,14,"bytes32 public constant OWNER = keccak256(""OWNER"")"
BeerBar method 0x117DE2FD 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x04A8,170,"function payout(address payable receiver, uint256 amount) external {\n        require(hasRole(OWNER, msg.sender), ""  Only owners are allowed to do this"");\n        (bool success, ) = receiver.call{value: amount}("""");\n        require(success, ""Failed to send Ether"");\n    }"
BeerBar CALL 1 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1AAF,172,"receiver.call{value: amount}("""")"
BeerBar CALL 2 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x2010,134,"beerTokenContract.transfer(msg.sender, amount)"
BeerBar CALL 3 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x27F7,163,"beerTokenContract.transfer(msg.sender, (msg.value-(msg.value % _beerPrice))/_beerPrice)"
BeerBar CALL 4 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x2AF7,125,beerTokenContract.burn(amount)
BeerBar LOG1 1 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1975,56,BarkeeperAdded(account)
BeerBar LOG1 2 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1C5F,43,OwnerRemoved(msg.sender)
BeerBar LOG1 3 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1d19,94,BarClosed()
BeerBar LOG2 1 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x2123,136,"BeerCanceled(msg.sender, amount)"
BeerBar LOG1 4 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x21f1,37,OwnerAdded(account)
BeerBar LOG2 2 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x245a,108,"BeerSupplied(_from, _value)"
BeerBar LOG2 3 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x261a,113,"BeerOrdered(_from, _value)"
BeerBar LOG1 5 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x2bd9,68,BarkeeperRemoved(msg.sender)
BeerBar LOG1 6 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x2d0d,62,BarkeeperRemoved(account)
BeerBar LOG1 7 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x2dc5,88,BarOpened()
BeerBar LOG4 1 0.8.26,tests/compiler0826/compiled/BeerBar.json,@openzeppelin/contracts/access/AccessControl.sol,BeerBar,0x2ec1,186,"RoleGranted(role, account, _msgSender())"
BeerBar LOG4 2 0.8.26,tests/compiler0826/compiled/BeerBar.json,@openzeppelin/contracts/access/AccessControl.sol,BeerBar,0x3013,203,"RoleRevoked(role, account, _msgSender())"
BeerBar SSTORE 1 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1cec,93,_barIsOpen = false
BeerBar SSTORE 2 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1ebf,150,_beerPrice = price
BeerBar SSTORE 3 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x20d4,135,orders[msg.sender] -= amount
BeerBar SSTORE 4 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x229c,76,beerTokenContract = BeerToken(addr)
BeerBar SSTORE 5 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x25cb,112,orders[_from] += _value
BeerBar SSTORE 6 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x29f5,124,orders[customer] -= amount
BeerBar SSTORE 7 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x2d98,87,_barIsOpen = true
BeerBar SSTORE 8 0.8.26,tests/compiler0826/compiled/BeerBar.json,@openzeppelin/contracts/access/AccessControl.sol,BeerBar,0x2e5e,185,_roles[role].hasRole[account] = true
BeerBar SSTORE 9 0.8.26,tests/compiler0826/compiled/BeerBar.json,@openzeppelin/contracts/access/AccessControl.sol,BeerBar,0x2fb0,202,_roles[role].hasRole[account] = false
BeerBar SLOAD 1 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1b30,13,BeerToken public beerTokenContract
BeerBar SLOAD 2 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1b56,80,beerTokenContract
BeerBar SLOAD 3 0.8.26,tests/compiler0826/compiled/BeerBar.json,@openzeppelin/contracts/access/AccessControl.sol,BeerBar,0x1b8d,107,_roles[role].adminRole
BeerBar SLOAD 4 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1c65,154,_beerPrice
BeerBar SLOAD 5 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1cde,93,_barIsOpen = false
BeerBar SLOAD 6 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1d22,98,_barIsOpen
BeerBar SLOAD 7 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1e06,148,_barIsOpen
BeerBar SLOAD 8 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1f02,133,orders[msg.sender]
BeerBar SLOAD 9 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1f11,134,beerTokenContract
BeerBar SLOAD 10 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x20c4,135,orders[msg.sender] -= amount
BeerBar SLOAD 11 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x2267,76,beerTokenContract = BeerToken(addr)
BeerBar SLOAD 12 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x22df,143,orders[customer]
BeerBar SLOAD 13 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x22eb,105,beerTokenContract
BeerBar SLOAD 14 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x2530,111,_barIsOpen
BeerBar SLOAD 15 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x25bb,112,orders[_from] += _value
BeerBar SLOAD 16 0.8.26,tests/compiler0826/compiled/BeerBar.json,@openzeppelin/contracts/access/AccessControl.sol,BeerBar,0x2672,79,_roles[role].hasRole[account]
BeerBar SLOAD 17 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x268e,162,_beerPrice
BeerBar SLOAD 18 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x26d3,163,beerTokenContract
BeerBar SLOAD 19 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x270f,163,_beerPrice
BeerBar SLOAD 20 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x2712,163,_beerPrice
BeerBar SLOAD 21 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x2871,121,_barIsOpen
BeerBar SLOAD 22 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x2962,123,orders[customer]
BeerBar SLOAD 23 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x29e5,124,orders[customer] -= amount
BeerBar SLOAD 24 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x29fb,125,beerTokenContract
BeerBar SLOAD 25 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x2c35,16,bool public _barIsOpen
BeerBar SLOAD 26 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x2d13,17,uint public _beerPrice
BeerBar SLOAD 27 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x2d8a,87,_barIsOpen = true
BeerBar SLOAD 28 0.8.26,tests/compiler0826/compiled/BeerBar.json,@openzeppelin/contracts/access/AccessControl.sol,BeerBar,0x2e50,185,_roles[role].hasRole[account] = true
BeerBar SLOAD 29 0.8.26,tests/compiler0826/compiled/BeerBar.json,@openzeppelin/contracts/access/AccessControl.sol,BeerBar,0x2fa2,202,_roles[role].hasRole[account] = false
BeerBar CALLER 1 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x18cf,54,msg.sender
BeerBar CALLER 2 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1a3a,171,msg.sender
BeerBar CALLER 3 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1bb9,41,msg.sender
BeerBar CALLER 4 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1c22,42,msg.sender
BeerBar CALLER 5 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1c4a,43,msg.sender
BeerBar CALLER 6 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1c8f,92,msg.sender
BeerBar CALLER 7 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1e75,149,msg.sender
BeerBar CALLER 8 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1ec8,133,msg.sender
BeerBar CALLER 9 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x1f4a,134,msg.sender
BeerBar CALLER 10 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x2087,135,msg.sender
BeerBar CALLER 11 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x20d6,136,msg.sender
BeerBar CALLER 12 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x214b,35,msg.sender
BeerBar CALLER 13 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x2219,75,msg.sender
BeerBar CALLER 14 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x231f,105,msg.sender
BeerBar CALLER 15 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x24b2,110,msg.sender
BeerBar CALLER 16 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x24e4,110,msg.sender
BeerBar CALLER 17 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x270c,163,msg.sender
BeerBar CALLER 18 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x28df,122,msg.sender
BeerBar CALLER 19 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x2b33,66,msg.sender
BeerBar CALLER 20 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x2b9c,67,msg.sender
BeerBar CALLER 21 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x2bc4,68,msg.sender
BeerBar CALLER 22 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x2c67,60,msg.sender
BeerBar CALLER 23 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x2cd0,61,msg.sender
BeerBar CALLER 24 0.8.26,tests/compiler0826/compiled/BeerBar.json,contracts/BeerBar.sol,BeerBar,0x2d3b,86,msg.sender
BeerBar CALLER 25 0.8.26,tests/compiler0826/compiled/BeerBar.json,@openzeppelin/contracts/utils/Context.sol,BeerBar,0x303c,18,msg.sender

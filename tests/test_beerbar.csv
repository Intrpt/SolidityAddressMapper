id,compiler_output_json,address_hex,contract_name,filename,source_code,source_line,info
BeerBar method 0xD86BB313 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x15E4,BeerBar,contracts/BeerBar.sol,"function revokeBarkeeper(address account) external {\n        require(hasRole(OWNER, msg.sender), ""Barkeepers can be revoked by owners"");\n        _revokeRole(BARKEEPER, msg.sender);\n        emit BarkeeperRemoved(account);\n    }",59,
BeerBar method 0xDA252947 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1699,BeerBar,contracts/BeerBar.sol,uint public _beerPrice,17,
BeerBar method 0xDA9017DC 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1750,BeerBar,contracts/BeerBar.sol,"function openBar() external {\n        require(hasRole(BARKEEPER, msg.sender), "" The bar is opened and closed by barkeepers"");\n        _barIsOpen = true;\n        emit BarOpened();\n    }",85,
BeerBar method 0xE61A0DB4 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x17F3,BeerBar,contracts/BeerBar.sol,"bytes32 public constant BARKEEPER = keccak256(""BARKEEPER"")",15,
BeerBar method 0xCB1560E5 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x130C,BeerBar,contracts/BeerBar.sol,"function renounceBarkeeper() external {\n        require(hasRole(BARKEEPER, msg.sender), ""Barkeepers can renounce themselves"");\n        _revokeRole(BARKEEPER, msg.sender);\n        emit BarkeeperRemoved(msg.sender);\n    }",65,
BeerBar method 0xCF45D7D5 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x13AF,BeerBar,contracts/BeerBar.sol,"function isBarkeeper(address account) external view returns (bool) {\n        return hasRole(BARKEEPER, account);\n    }",49,
BeerBar method 0xD547741F 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1478,BeerBar,contracts/BeerBar.sol,"function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }",137,
BeerBar method 0xD7464019 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x152D,BeerBar,contracts/BeerBar.sol,bool public _barIsOpen,16,
BeerBar method 0x91D14854 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x10CD,BeerBar,contracts/BeerBar.sol,"function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }",78,
BeerBar method 0xA217FDDF 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1196,BeerBar,contracts/BeerBar.sol,bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00,57,
BeerBar method 0xA4821719 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x124D,BeerBar,contracts/BeerBar.sol,"function buyToken() external payable {\n        require(_beerPrice > 0, "" Beer price has not been set"");\n        require(beerTokenContract.transfer(msg.sender, (msg.value-(msg.value % _beerPrice))/_beerPrice),""Failed to transfer"");\n        //require(beerTokenContract.mint(msg.sender, (msg.value-(msg.value % _beerPrice))/_beerPrice),""Failed to mint"");\n    }",161,
BeerBar method 0xC2893A95 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1257,BeerBar,contracts/BeerBar.sol,"function serveBeer(address customer, uint amount) external {\n        require(_barIsOpen, "" Beer can only be served while the bar is open"");\n        require(hasRole(BARKEEPER, msg.sender), "" Only barkeepers can serve beer"");\n        require(orders[customer] >= amount, "" The customer did not order that much!"");\n        orders[customer] -= amount;\n        beerTokenContract.burn(amount);\n    }",120,
BeerBar method 0x7065CB48 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x0DE5,BeerBar,contracts/BeerBar.sol,"function addOwner(address account) external {\n        require(hasRole(OWNER, msg.sender), ""Only owners can add new owners"");\n        _grantRole(OWNER, account);\n        emit OwnerAdded(account);\n    }",34,
BeerBar method 0x79320FE2 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x0E9A,BeerBar,contracts/BeerBar.sol,"function setBeerTokenContractAddress(address addr) external {\n        require(hasRole(OWNER, msg.sender), ""This can only be done by owners"");\n        beerTokenContract = BeerToken(addr);\n    }",74,
BeerBar method 0x8124020E 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x0F4F,BeerBar,contracts/BeerBar.sol,function pendingBeer(address customer) external view returns (uint256) {\n        return orders[customer];\n    },142,
BeerBar method 0x8943EC02 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1018,BeerBar,contracts/BeerBar.sol,"function tokenReceived(address _from, uint _value, bytes memory _data) public virtual {\n        require(msg.sender == address(beerTokenContract),""Wrong token"");\n        if(keccak256(_data) == hex""b308cfbb7d2d38db3a215f9728501ac69445a6afbee328cdeae4e23db54b850a"") {\n            require(hasRole(OWNER, tx.origin) ,""Only the token owner can supply"");\n            emit BeerSupplied(_from, _value);\n        } else if(keccak256(_data) == hex""e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c"") {\n            require(!hasRole(BARKEEPER, msg.sender) && !hasRole(OWNER, msg.sender), ""Only customers can order"");\n            require(_barIsOpen, ""Bar is closed"");\n            orders[_from] += _value;\n            emit BeerOrdered(_from, _value);\n        }\n    }",104,
BeerBar method 0x2F54BF6E 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x0AFD,BeerBar,contracts/BeerBar.sol,"function isOwner(address account) external view returns (bool) {\n        return hasRole(OWNER, account);\n    }",30,
BeerBar method 0x36568ABE 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x0BC6,BeerBar,contracts/BeerBar.sol,"function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }",157,
BeerBar method 0x4C2E589D 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x0C7B,BeerBar,contracts/BeerBar.sol,"function setBeerPrice(uint256 price) external {\n        require(!_barIsOpen, "" Beer price can only be changed when the bar is closed"");\n        require(hasRole(OWNER, msg.sender), "" Beer price can only be changed by owners "");\n        _beerPrice = price;\n    }",147,
BeerBar method 0x514FCAC7 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x0D30,BeerBar,contracts/BeerBar.sol,"function cancelOrder(uint amount) external {\n        require(orders[msg.sender] >= amount);\n        require(beerTokenContract.transfer(msg.sender, amount),""Failed to transfer tokens"");\n        orders[msg.sender] -= amount;\n        emit BeerCanceled(msg.sender, amount);\n\n    }",132,
BeerBar method 0x28CE8031 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x0837,BeerBar,contracts/BeerBar.sol,function getBeerPrice() external view returns(uint256) {\n        return _beerPrice;\n    },153,
BeerBar method 0x28EF8946 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x08EE,BeerBar,contracts/BeerBar.sol,"function closeBar() external virtual {\n        require(hasRole(BARKEEPER, msg.sender), "" The bar is opened and closed by barkeepers"");\n        _barIsOpen = false;\n        emit BarClosed();\n    }",91,
BeerBar method 0x2B585821 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x0991,BeerBar,contracts/BeerBar.sol,function barIsOpen() external view returns (bool) {\n        return _barIsOpen;\n    },97,
BeerBar method 0x2F2FF15D 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x0A48,BeerBar,contracts/BeerBar.sol,"function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }",122,
BeerBar method 0x1BC73E3A 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x055D,BeerBar,contracts/BeerBar.sol,BeerToken public beerTokenContract,13,
BeerBar method 0x1C0E7B8A 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x0614,BeerBar,contracts/BeerBar.sol,function beerTokenContractAddress() external view returns(address) {\n        return address(beerTokenContract);\n    },79,
BeerBar method 0x248A9CA3 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x06CB,BeerBar,contracts/BeerBar.sol,function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    },106,
BeerBar method 0x28C23A45 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x0794,BeerBar,contracts/BeerBar.sol,"function renounceOwner() external {\n        require(hasRole(OWNER, msg.sender), ""Owners can only renounce themselves again"");\n        _revokeRole(OWNER, msg.sender);\n        emit OwnerRemoved(msg.sender);\n    }",40,
BeerBar method 0x01B05336 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x0273,BeerBar,contracts/BeerBar.sol,"function addBarkeeper(address account) external {\n        require(hasRole(OWNER, msg.sender), ""Barkeepers have to be set by owners"");\n         _grantRole(BARKEEPER, account);\n         emit BarkeeperAdded(account);\n    }",53,
BeerBar method 0x01FFC9A7 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x0328,BeerBar,contracts/BeerBar.sol,function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    },71,
BeerBar method 0x117803E3 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x03F1,BeerBar,contracts/BeerBar.sol,"bytes32 public constant OWNER = keccak256(""OWNER"")",14,
BeerBar method 0x117DE2FD 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x04A8,BeerBar,contracts/BeerBar.sol,"function payout(address payable receiver, uint256 amount) external {\n        require(hasRole(OWNER, msg.sender), ""  Only owners are allowed to do this"");\n        (bool success, ) = receiver.call{value: amount}("""");\n        require(success, ""Failed to send Ether"");\n    }",170,
BeerBar CALL 1 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1AAF,BeerBar,contracts/BeerBar.sol,"receiver.call{value: amount}("""")",172,
BeerBar CALL 2 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2010,BeerBar,contracts/BeerBar.sol,"beerTokenContract.transfer(msg.sender, amount)",134,
BeerBar CALL 3 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x27F7,BeerBar,contracts/BeerBar.sol,"beerTokenContract.transfer(msg.sender, (msg.value-(msg.value % _beerPrice))/_beerPrice)",163,
BeerBar CALL 4 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2AF7,BeerBar,contracts/BeerBar.sol,beerTokenContract.burn(amount),125,
BeerBar LOG1 1 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1975,BeerBar,contracts/BeerBar.sol,BarkeeperAdded(account),56,
BeerBar LOG1 2 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1C5F,BeerBar,contracts/BeerBar.sol,OwnerRemoved(msg.sender),43,
BeerBar LOG1 3 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1d19,BeerBar,contracts/BeerBar.sol,BarClosed(),94,
BeerBar LOG2 1 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2123,BeerBar,contracts/BeerBar.sol,"BeerCanceled(msg.sender, amount)",136,
BeerBar LOG1 4 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x21f1,BeerBar,contracts/BeerBar.sol,OwnerAdded(account),37,
BeerBar LOG2 2 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x245a,BeerBar,contracts/BeerBar.sol,"BeerSupplied(_from, _value)",108,
BeerBar LOG2 3 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x261a,BeerBar,contracts/BeerBar.sol,"BeerOrdered(_from, _value)",113,
BeerBar LOG1 5 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2bd9,BeerBar,contracts/BeerBar.sol,BarkeeperRemoved(msg.sender),68,
BeerBar LOG1 6 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2d0d,BeerBar,contracts/BeerBar.sol,BarkeeperRemoved(account),62,
BeerBar LOG1 7 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2dc5,BeerBar,contracts/BeerBar.sol,BarOpened(),88,
BeerBar LOG4 1 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2ec1,BeerBar,contracts/BeerBar.sol,"RoleGranted(role, account, _msgSender())",186,
BeerBar LOG4 2 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x3013,BeerBar,contracts/BeerBar.sol,"RoleRevoked(role, account, _msgSender())",203,
BeerBar SSTORE 1 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1cec,BeerBar,contracts/BeerBar.sol,_barIsOpen = false,93,
BeerBar SSTORE 2 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1ebf,BeerBar,contracts/BeerBar.sol,_beerPrice = price,150,
BeerBar SSTORE 3 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x20d4,BeerBar,contracts/BeerBar.sol,orders[msg.sender] -= amount,135,
BeerBar SSTORE 4 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x229c,BeerBar,contracts/BeerBar.sol,beerTokenContract = BeerToken(addr),76,
BeerBar SSTORE 5 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x25cb,BeerBar,contracts/BeerBar.sol,orders[_from] += _value,112,
BeerBar SSTORE 6 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x29f5,BeerBar,contracts/BeerBar.sol,orders[customer] -= amount,124,
BeerBar SSTORE 7 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2d98,BeerBar,contracts/BeerBar.sol,_barIsOpen = true,87,
BeerBar SSTORE 8 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2e5e,BeerBar,contracts/BeerBar.sol,_roles[role].hasRole[account] = true,185,
BeerBar SSTORE 9 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2fb0,BeerBar,contracts/BeerBar.sol,_roles[role].hasRole[account] = false,202,
BeerBar SLOAD 1 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1b30,BeerBar,contracts/BeerBar.sol,BeerToken public beerTokenContract,13,
BeerBar SLOAD 2 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1b56,BeerBar,contracts/BeerBar.sol,beerTokenContract,80,
BeerBar SLOAD 3 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1b8d,BeerBar,contracts/BeerBar.sol,_roles[role].adminRole,107,
BeerBar SLOAD 4 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1c65,BeerBar,contracts/BeerBar.sol,_beerPrice,154,
BeerBar SLOAD 5 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1cde,BeerBar,contracts/BeerBar.sol,_barIsOpen = false,93,
BeerBar SLOAD 6 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1d22,BeerBar,contracts/BeerBar.sol,_barIsOpen,98,
BeerBar SLOAD 7 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1e06,BeerBar,contracts/BeerBar.sol,_barIsOpen,148,
BeerBar SLOAD 8 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1f02,BeerBar,contracts/BeerBar.sol,orders[msg.sender],133,
BeerBar SLOAD 9 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1f11,BeerBar,contracts/BeerBar.sol,beerTokenContract,134,
BeerBar SLOAD 10 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x20c4,BeerBar,contracts/BeerBar.sol,orders[msg.sender] -= amount,135,
BeerBar SLOAD 11 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2267,BeerBar,contracts/BeerBar.sol,beerTokenContract = BeerToken(addr),76,
BeerBar SLOAD 12 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x22df,BeerBar,contracts/BeerBar.sol,orders[customer],143,
BeerBar SLOAD 13 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x22eb,BeerBar,contracts/BeerBar.sol,beerTokenContract,105,
BeerBar SLOAD 14 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2530,BeerBar,contracts/BeerBar.sol,_barIsOpen,111,
BeerBar SLOAD 15 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x25bb,BeerBar,contracts/BeerBar.sol,orders[_from] += _value,112,
BeerBar SLOAD 16 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2672,BeerBar,contracts/BeerBar.sol,_roles[role].hasRole[account],79,
BeerBar SLOAD 17 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x268e,BeerBar,contracts/BeerBar.sol,_beerPrice,162,
BeerBar SLOAD 18 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x26d3,BeerBar,contracts/BeerBar.sol,beerTokenContract,163,
BeerBar SLOAD 19 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x270f,BeerBar,contracts/BeerBar.sol,_beerPrice,163,
BeerBar SLOAD 20 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2712,BeerBar,contracts/BeerBar.sol,_beerPrice,163,
BeerBar SLOAD 21 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2871,BeerBar,contracts/BeerBar.sol,_barIsOpen,121,
BeerBar SLOAD 22 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2962,BeerBar,contracts/BeerBar.sol,orders[customer],123,
BeerBar SLOAD 23 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x29e5,BeerBar,contracts/BeerBar.sol,orders[customer] -= amount,124,
BeerBar SLOAD 24 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x29fb,BeerBar,contracts/BeerBar.sol,beerTokenContract,125,
BeerBar SLOAD 25 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2c35,BeerBar,contracts/BeerBar.sol,bool public _barIsOpen,16,
BeerBar SLOAD 26 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2d13,BeerBar,contracts/BeerBar.sol,uint public _beerPrice,17,
BeerBar SLOAD 27 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2d8a,BeerBar,contracts/BeerBar.sol,_barIsOpen = true,87,
BeerBar SLOAD 28 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2e50,BeerBar,contracts/BeerBar.sol,_roles[role].hasRole[account] = true,185,
BeerBar SLOAD 29 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2fa2,BeerBar,contracts/BeerBar.sol,_roles[role].hasRole[account] = false,202,
BeerBar CALLER 1 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x18cf,BeerBar,contracts/BeerBar.sol,msg.sender,54,
BeerBar CALLER 2 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1a3a,BeerBar,contracts/BeerBar.sol,msg.sender,171,
BeerBar CALLER 3 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1bb9,BeerBar,contracts/BeerBar.sol,msg.sender,41,
BeerBar CALLER 4 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1c22,BeerBar,contracts/BeerBar.sol,msg.sender,42,
BeerBar CALLER 5 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1c4a,BeerBar,contracts/BeerBar.sol,msg.sender,43,
BeerBar CALLER 6 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1c8f,BeerBar,contracts/BeerBar.sol,msg.sender,92,
BeerBar CALLER 7 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1e75,BeerBar,contracts/BeerBar.sol,msg.sender,149,
BeerBar CALLER 8 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1ec8,BeerBar,contracts/BeerBar.sol,msg.sender,133,
BeerBar CALLER 9 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x1f4a,BeerBar,contracts/BeerBar.sol,msg.sender,134,
BeerBar CALLER 10 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2087,BeerBar,contracts/BeerBar.sol,msg.sender,135,
BeerBar CALLER 11 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x20d6,BeerBar,contracts/BeerBar.sol,msg.sender,136,
BeerBar CALLER 12 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x214b,BeerBar,contracts/BeerBar.sol,msg.sender,35,
BeerBar CALLER 13 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2219,BeerBar,contracts/BeerBar.sol,msg.sender,75,
BeerBar CALLER 14 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x231f,BeerBar,contracts/BeerBar.sol,msg.sender,105,
BeerBar CALLER 15 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x24b2,BeerBar,contracts/BeerBar.sol,msg.sender,110,
BeerBar CALLER 16 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x24e4,BeerBar,contracts/BeerBar.sol,msg.sender,110,
BeerBar CALLER 17 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x270c,BeerBar,contracts/BeerBar.sol,msg.sender,163,
BeerBar CALLER 18 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x28df,BeerBar,contracts/BeerBar.sol,msg.sender,122,
BeerBar CALLER 19 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2b33,BeerBar,contracts/BeerBar.sol,msg.sender,66,
BeerBar CALLER 20 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2b9c,BeerBar,contracts/BeerBar.sol,msg.sender,67,
BeerBar CALLER 21 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2bc4,BeerBar,contracts/BeerBar.sol,msg.sender,68,
BeerBar CALLER 22 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2c67,BeerBar,contracts/BeerBar.sol,msg.sender,60,
BeerBar CALLER 23 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2cd0,BeerBar,contracts/BeerBar.sol,msg.sender,61,
BeerBar CALLER 24 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x2d3b,BeerBar,contracts/BeerBar.sol,msg.sender,86,
BeerBar CALLER 25 0.8.26,tests/compiler0826/compiled/BeerBar.json,0x303c,BeerBar,contracts/BeerBar.sol,msg.sender,18,

{
  "language": "Solidity",
  "settings": {
    "debug": {
      "revertStrings": "debug",
      "debugInfo": [
        "*"
      ]
    },
    "optimizer": {
      "enabled": false
    },
    "viaIR": false,
    "evmVersion": "cancun",
    "metadata": {
      "bytecodeHash": "none",
      "useLiteralContent": true,
      "appendCBOR": true
    },
    "modelChecker": {
      "engine": "none",
      "invariants": [
        "contract",
        "reentrancy"
      ],
      "showUnproved": true,
      "showUnsupported": true,
      "timeout": 0
    },
    "outputSelection": {
      "*": {
        "": [
          "*"
        ],
        "*": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "ArtithmeticTestContract.sol": {
      "content": "pragma solidity ^0.8.0;\r\ncontract ArtithmeticTestContract {\r\n    function arithmeticOps(uint256 a, uint256 b) public pure returns (uint256, uint256, uint256, uint256) {\r\n        uint256 add = a + b;\r\n        uint256 sub = a - b;\r\n        uint256 mul = a * b;\r\n        uint256 div = b != 0 ? a / b : 0;\r\n        return (add, sub, mul, div);\r\n    }\r\n}"
    }
  }
}
{
  "contracts": {
    "compiler076/EtherLotto.sol": {
      "EtherLotto": {
        "abi": [
          {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "inputs": [],
            "name": "bank",
            "outputs": [
              {
                "internalType": "address payable",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "play",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "pot",
            "outputs": [
              { "internalType": "uint256", "name": "", "type": "uint256" }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "devdoc": {
          "kind": "dev",
          "methods": {},
          "title": "Ethereum Lottery Game.",
          "version": 1
        },
        "evm": {
          "assembly": "    /* \"compiler076/EtherLotto.sol\":416:1823  contract EtherLotto {... */\n  mstore(0x40, 0x80)\n    /* \"compiler076/EtherLotto.sol\":859:907  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  mstore(0x00, 0x08c379a000000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x20)\n  mstore(add(0x04, 0x20), 0x22)\n  add(0x04, 0x40)\n  0x45746865722073656e7420746f206e6f6e2d70617961626c652066756e637469\n  0x00\n  dup3\n  add\n  mstore\n  0x6f6e000000000000000000000000000000000000000000000000000000000000\n  0x20\n  dup3\n  add\n  mstore\n  0x40\n  dup2\n  add\n  0x00\n  revert\ntag_1:\n  pop\n    /* \"compiler076/EtherLotto.sol\":890:900  msg.sender */\n  caller\n    /* \"compiler076/EtherLotto.sol\":883:887  bank */\n  0x00\n  dup1\n    /* \"compiler076/EtherLotto.sol\":883:900  bank = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"compiler076/EtherLotto.sol\":416:1823  contract EtherLotto {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"compiler076/EtherLotto.sol\":416:1823  contract EtherLotto {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4ba2363a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x76cdb03b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x93e84cd9\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      mstore(0x00, 0x08c379a000000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x20)\n      mstore(add(0x04, 0x20), 0x35)\n      add(0x04, 0x40)\n      0x436f6e747261637420646f6573206e6f7420686176652066616c6c6261636b20\n      0x00\n      dup3\n      add\n      mstore\n      0x6e6f7220726563656976652066756e6374696f6e730000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      0x40\n      dup2\n      add\n      0x00\n      revert\n        /* \"compiler076/EtherLotto.sol\":761:776  uint public pot */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_5\n      jumpi\n      mstore(0x00, 0x08c379a000000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x20)\n      mstore(add(0x04, 0x20), 0x22)\n      add(0x04, 0x40)\n      0x45746865722073656e7420746f206e6f6e2d70617961626c652066756e637469\n      0x00\n      dup3\n      add\n      mstore\n      0x6f6e000000000000000000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      0x40\n      dup2\n      add\n      0x00\n      revert\n    tag_5:\n      pop\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"compiler076/EtherLotto.sol\":662:689  address payable public bank */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      mstore(0x00, 0x08c379a000000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x20)\n      mstore(add(0x04, 0x20), 0x22)\n      add(0x04, 0x40)\n      0x45746865722073656e7420746f206e6f6e2d70617961626c652066756e637469\n      0x00\n      dup3\n      add\n      mstore\n      0x6f6e000000000000000000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      0x40\n      dup2\n      add\n      0x00\n      revert\n    tag_8:\n      pop\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"compiler076/EtherLotto.sol\":1046:1820  function play() public payable {... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"compiler076/EtherLotto.sol\":761:776  uint public pot */\n    tag_7:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"compiler076/EtherLotto.sol\":662:689  address payable public bank */\n    tag_10:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"compiler076/EtherLotto.sol\":1046:1820  function play() public payable {... */\n    tag_12:\n        /* \"compiler076/EtherLotto.sol\":537:539  10 */\n      0x0a\n        /* \"compiler076/EtherLotto.sol\":1171:1180  msg.value */\n      callvalue\n        /* \"compiler076/EtherLotto.sol\":1171:1197  msg.value == TICKET_AMOUNT */\n      eq\n        /* \"compiler076/EtherLotto.sol\":1164:1198  assert(msg.value == TICKET_AMOUNT) */\n      tag_14\n      jumpi\n      invalid\n    tag_14:\n        /* \"compiler076/EtherLotto.sol\":1262:1271  msg.value */\n      callvalue\n        /* \"compiler076/EtherLotto.sol\":1255:1258  pot */\n      0x01\n      0x00\n        /* \"compiler076/EtherLotto.sol\":1255:1271  pot += msg.value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"compiler076/EtherLotto.sol\":1419:1430  uint random */\n      0x00\n        /* \"compiler076/EtherLotto.sol\":1486:1487  2 */\n      0x02\n        /* \"compiler076/EtherLotto.sol\":1465:1480  block.timestamp */\n      timestamp\n        /* \"compiler076/EtherLotto.sol\":1448:1481  abi.encodePacked(block.timestamp) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"compiler076/EtherLotto.sol\":1438:1482  keccak256(abi.encodePacked(block.timestamp)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"compiler076/EtherLotto.sol\":1433:1483  uint(keccak256(abi.encodePacked(block.timestamp))) */\n      0x00\n      shr\n        /* \"compiler076/EtherLotto.sol\":1433:1487  uint(keccak256(abi.encodePacked(block.timestamp))) % 2 */\n      dup2\n      tag_15\n      jumpi\n      invalid\n    tag_15:\n      mod\n        /* \"compiler076/EtherLotto.sol\":1419:1487  uint random = uint(keccak256(abi.encodePacked(block.timestamp))) % 2 */\n      swap1\n      pop\n        /* \"compiler076/EtherLotto.sol\":1574:1575  0 */\n      0x00\n        /* \"compiler076/EtherLotto.sol\":1564:1570  random */\n      dup2\n        /* \"compiler076/EtherLotto.sol\":1564:1575  random == 0 */\n      eq\n        /* \"compiler076/EtherLotto.sol\":1560:1814  if (random == 0) {... */\n      iszero\n      tag_16\n      jumpi\n        /* \"compiler076/EtherLotto.sol\":1633:1637  bank */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"compiler076/EtherLotto.sol\":1633:1646  bank.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"compiler076/EtherLotto.sol\":1633:1658  bank.transfer(FEE_AMOUNT) */\n      0x08fc\n        /* \"compiler076/EtherLotto.sol\":620:621  1 */\n      0x01\n        /* \"compiler076/EtherLotto.sol\":1633:1658  bank.transfer(FEE_AMOUNT) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_18\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_18:\n      pop\n        /* \"compiler076/EtherLotto.sol\":1712:1722  msg.sender */\n      caller\n        /* \"compiler076/EtherLotto.sol\":1712:1731  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"compiler076/EtherLotto.sol\":1712:1749  msg.sender.transfer(pot - FEE_AMOUNT) */\n      0x08fc\n        /* \"compiler076/EtherLotto.sol\":620:621  1 */\n      0x01\n        /* \"compiler076/EtherLotto.sol\":1732:1735  pot */\n      dup1\n      sload\n        /* \"compiler076/EtherLotto.sol\":1732:1748  pot - FEE_AMOUNT */\n      sub\n        /* \"compiler076/EtherLotto.sol\":1712:1749  msg.sender.transfer(pot - FEE_AMOUNT) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_20\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_20:\n      pop\n        /* \"compiler076/EtherLotto.sol\":1802:1803  0 */\n      0x00\n        /* \"compiler076/EtherLotto.sol\":1796:1799  pot */\n      0x01\n        /* \"compiler076/EtherLotto.sol\":1796:1803  pot = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"compiler076/EtherLotto.sol\":1560:1814  if (random == 0) {... */\n    tag_16:\n        /* \"compiler076/EtherLotto.sol\":1046:1820  function play() public payable {... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa164736f6c6343000706000a\n}\n",
          "bytecode": {
            "generatedSources": [],
            "linkReferences": {},
            "object": "6080604052348015610095577f08c379a0000000000000000000000000000000000000000000000000000000006000526020600452602260206004015260406004017f45746865722073656e7420746f206e6f6e2d70617961626c652066756e63746960008201527f6f6e0000000000000000000000000000000000000000000000000000000000006020820152604081016000fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061038f806100e56000396000f3fe6080604052600436106100345760003560e01c80634ba2363a146100be57806376cdb03b1461016e57806393e84cd914610234575b7f08c379a0000000000000000000000000000000000000000000000000000000006000526020600452603560206004015260406004017f436f6e747261637420646f6573206e6f7420686176652066616c6c6261636b2060008201527f6e6f7220726563656976652066756e6374696f6e7300000000000000000000006020820152604081016000fd5b34801561014f577f08c379a0000000000000000000000000000000000000000000000000000000006000526020600452602260206004015260406004017f45746865722073656e7420746f206e6f6e2d70617961626c652066756e63746960008201527f6f6e0000000000000000000000000000000000000000000000000000000000006020820152604081016000fd5b5061015861023e565b6040518082815260200191505060405180910390f35b3480156101ff577f08c379a0000000000000000000000000000000000000000000000000000000006000526020600452602260206004015260406004017f45746865722073656e7420746f206e6f6e2d70617961626c652066756e63746960008201527f6f6e0000000000000000000000000000000000000000000000000000000000006020820152604081016000fd5b50610208610244565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61023c610268565b005b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a341461027257fe5b346001600082825401925050819055506000600242604051602001808281526020019150506040516020818303038152906040528051906020012060001c816102b757fe5b069050600081141561037f5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60019081150290604051600060405180830381858888f1935050505015801561032a573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc60018054039081150290604051600060405180830381858888f19350505050158015610375573d6000803e3d6000fd5b5060006001819055505b5056fea164736f6c6343000706000a",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x95 JUMPI PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x22 PUSH1 0x20 PUSH1 0x4 ADD MSTORE PUSH1 0x40 PUSH1 0x4 ADD PUSH32 0x45746865722073656E7420746F206E6F6E2D70617961626C652066756E637469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x38F DUP1 PUSH2 0xE5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4BA2363A EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x76CDB03B EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x93E84CD9 EQ PUSH2 0x234 JUMPI JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x35 PUSH1 0x20 PUSH1 0x4 ADD MSTORE PUSH1 0x40 PUSH1 0x4 ADD PUSH32 0x436F6E747261637420646F6573206E6F7420686176652066616C6C6261636B20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6F7220726563656976652066756E6374696F6E730000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x22 PUSH1 0x20 PUSH1 0x4 ADD MSTORE PUSH1 0x40 PUSH1 0x4 ADD PUSH32 0x45746865722073656E7420746F206E6F6E2D70617961626C652066756E637469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x23E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x22 PUSH1 0x20 PUSH1 0x4 ADD MSTORE PUSH1 0x40 PUSH1 0x4 ADD PUSH32 0x45746865722073656E7420746F206E6F6E2D70617961626C652066756E637469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH2 0x268 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA CALLVALUE EQ PUSH2 0x272 JUMPI INVALID JUMPDEST CALLVALUE PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP2 PUSH2 0x2B7 JUMPI INVALID JUMPDEST MOD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x1 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x32A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x1 DUP1 SLOAD SUB SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x375 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ",
            "sourceMap": "416:1407:0:-:0;;;859:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;890:10;883:4;;:17;;;;;;;;;;;;;;;;;;416:1407;;;;;;"
          },
          "deployedBytecode": {
            "generatedSources": [],
            "immutableReferences": {},
            "linkReferences": {},
            "object": "6080604052600436106100345760003560e01c80634ba2363a146100be57806376cdb03b1461016e57806393e84cd914610234575b7f08c379a0000000000000000000000000000000000000000000000000000000006000526020600452603560206004015260406004017f436f6e747261637420646f6573206e6f7420686176652066616c6c6261636b2060008201527f6e6f7220726563656976652066756e6374696f6e7300000000000000000000006020820152604081016000fd5b34801561014f577f08c379a0000000000000000000000000000000000000000000000000000000006000526020600452602260206004015260406004017f45746865722073656e7420746f206e6f6e2d70617961626c652066756e63746960008201527f6f6e0000000000000000000000000000000000000000000000000000000000006020820152604081016000fd5b5061015861023e565b6040518082815260200191505060405180910390f35b3480156101ff577f08c379a0000000000000000000000000000000000000000000000000000000006000526020600452602260206004015260406004017f45746865722073656e7420746f206e6f6e2d70617961626c652066756e63746960008201527f6f6e0000000000000000000000000000000000000000000000000000000000006020820152604081016000fd5b50610208610244565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61023c610268565b005b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a341461027257fe5b346001600082825401925050819055506000600242604051602001808281526020019150506040516020818303038152906040528051906020012060001c816102b757fe5b069050600081141561037f5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60019081150290604051600060405180830381858888f1935050505015801561032a573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc60018054039081150290604051600060405180830381858888f19350505050158015610375573d6000803e3d6000fd5b5060006001819055505b5056fea164736f6c6343000706000a",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4BA2363A EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x76CDB03B EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x93E84CD9 EQ PUSH2 0x234 JUMPI JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x35 PUSH1 0x20 PUSH1 0x4 ADD MSTORE PUSH1 0x40 PUSH1 0x4 ADD PUSH32 0x436F6E747261637420646F6573206E6F7420686176652066616C6C6261636B20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6F7220726563656976652066756E6374696F6E730000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x22 PUSH1 0x20 PUSH1 0x4 ADD MSTORE PUSH1 0x40 PUSH1 0x4 ADD PUSH32 0x45746865722073656E7420746F206E6F6E2D70617961626C652066756E637469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x23E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x22 PUSH1 0x20 PUSH1 0x4 ADD MSTORE PUSH1 0x40 PUSH1 0x4 ADD PUSH32 0x45746865722073656E7420746F206E6F6E2D70617961626C652066756E637469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH2 0x268 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA CALLVALUE EQ PUSH2 0x272 JUMPI INVALID JUMPDEST CALLVALUE PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP2 PUSH2 0x2B7 JUMPI INVALID JUMPDEST MOD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x1 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x32A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x1 DUP1 SLOAD SUB SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x375 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ",
            "sourceMap": "416:1407:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;761:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;662:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1046:774;;;:::i;:::-;;761:15;;;;:::o;662:27::-;;;;;;;;;;;;:::o;1046:774::-;537:2;1171:9;:26;1164:34;;;;1262:9;1255:3;;:16;;;;;;;;;;;1419:11;1486:1;1465:15;1448:33;;;;;;;;;;;;;;;;;;;;;;;;;1438:44;;;;;;1433:50;;:54;;;;;;1419:68;;1574:1;1564:6;:11;1560:254;;;1633:4;;;;;;;;;;:13;;:25;620:1;1633:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1712:10;:19;;:37;620:1;1732:3;;:16;1712:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:1;1796:3;:7;;;;1560:254;1046:774;:::o"
          },
          "gasEstimates": {
            "creation": {
              "codeDepositCost": "182200",
              "executionCost": "21092",
              "totalCost": "203292"
            },
            "external": {
              "bank()": "1044",
              "play()": "infinite",
              "pot()": "983"
            }
          },
          "legacyAssembly": {
            ".code": [
              {
                "begin": 416,
                "end": 1823,
                "name": "PUSH",
                "source": 0,
                "value": "80"
              },
              {
                "begin": 416,
                "end": 1823,
                "name": "PUSH",
                "source": 0,
                "value": "40"
              },
              { "begin": 416, "end": 1823, "name": "MSTORE", "source": 0 },
              { "begin": 859, "end": 907, "name": "CALLVALUE", "source": 0 },
              { "begin": 859, "end": 907, "name": "DUP1", "source": 0 },
              { "begin": 859, "end": 907, "name": "ISZERO", "source": 0 },
              {
                "begin": 859,
                "end": 907,
                "name": "PUSH [tag]",
                "source": 0,
                "value": "1"
              },
              { "begin": 859, "end": 907, "name": "JUMPI", "source": 0 },
              {
                "begin": 859,
                "end": 907,
                "name": "PUSH",
                "source": 0,
                "value": "8C379A000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 859,
                "end": 907,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 859, "end": 907, "name": "MSTORE", "source": 0 },
              {
                "begin": 859,
                "end": 907,
                "name": "PUSH",
                "source": 0,
                "value": "20"
              },
              {
                "begin": 859,
                "end": 907,
                "name": "PUSH",
                "source": 0,
                "value": "4"
              },
              { "begin": 859, "end": 907, "name": "MSTORE", "source": 0 },
              {
                "begin": 859,
                "end": 907,
                "name": "PUSH",
                "source": 0,
                "value": "22"
              },
              {
                "begin": 859,
                "end": 907,
                "name": "PUSH",
                "source": 0,
                "value": "20"
              },
              {
                "begin": 859,
                "end": 907,
                "name": "PUSH",
                "source": 0,
                "value": "4"
              },
              { "begin": 859, "end": 907, "name": "ADD", "source": 0 },
              { "begin": 859, "end": 907, "name": "MSTORE", "source": 0 },
              {
                "begin": 859,
                "end": 907,
                "name": "PUSH",
                "source": 0,
                "value": "40"
              },
              {
                "begin": 859,
                "end": 907,
                "name": "PUSH",
                "source": 0,
                "value": "4"
              },
              { "begin": 859, "end": 907, "name": "ADD", "source": 0 },
              {
                "begin": 859,
                "end": 907,
                "name": "PUSH",
                "source": 0,
                "value": "45746865722073656E7420746F206E6F6E2D70617961626C652066756E637469"
              },
              {
                "begin": 859,
                "end": 907,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 859, "end": 907, "name": "DUP3", "source": 0 },
              { "begin": 859, "end": 907, "name": "ADD", "source": 0 },
              { "begin": 859, "end": 907, "name": "MSTORE", "source": 0 },
              {
                "begin": 859,
                "end": 907,
                "name": "PUSH",
                "source": 0,
                "value": "6F6E000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 859,
                "end": 907,
                "name": "PUSH",
                "source": 0,
                "value": "20"
              },
              { "begin": 859, "end": 907, "name": "DUP3", "source": 0 },
              { "begin": 859, "end": 907, "name": "ADD", "source": 0 },
              { "begin": 859, "end": 907, "name": "MSTORE", "source": 0 },
              {
                "begin": 859,
                "end": 907,
                "name": "PUSH",
                "source": 0,
                "value": "40"
              },
              { "begin": 859, "end": 907, "name": "DUP2", "source": 0 },
              { "begin": 859, "end": 907, "name": "ADD", "source": 0 },
              {
                "begin": 859,
                "end": 907,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 859, "end": 907, "name": "REVERT", "source": 0 },
              {
                "begin": 859,
                "end": 907,
                "name": "tag",
                "source": 0,
                "value": "1"
              },
              { "begin": 859, "end": 907, "name": "JUMPDEST", "source": 0 },
              { "begin": 859, "end": 907, "name": "POP", "source": 0 },
              { "begin": 890, "end": 900, "name": "CALLER", "source": 0 },
              {
                "begin": 883,
                "end": 887,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 883, "end": 887, "name": "DUP1", "source": 0 },
              {
                "begin": 883,
                "end": 900,
                "name": "PUSH",
                "source": 0,
                "value": "100"
              },
              { "begin": 883, "end": 900, "name": "EXP", "source": 0 },
              { "begin": 883, "end": 900, "name": "DUP2", "source": 0 },
              { "begin": 883, "end": 900, "name": "SLOAD", "source": 0 },
              { "begin": 883, "end": 900, "name": "DUP2", "source": 0 },
              {
                "begin": 883,
                "end": 900,
                "name": "PUSH",
                "source": 0,
                "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
              },
              { "begin": 883, "end": 900, "name": "MUL", "source": 0 },
              { "begin": 883, "end": 900, "name": "NOT", "source": 0 },
              { "begin": 883, "end": 900, "name": "AND", "source": 0 },
              { "begin": 883, "end": 900, "name": "SWAP1", "source": 0 },
              { "begin": 883, "end": 900, "name": "DUP4", "source": 0 },
              {
                "begin": 883,
                "end": 900,
                "name": "PUSH",
                "source": 0,
                "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
              },
              { "begin": 883, "end": 900, "name": "AND", "source": 0 },
              { "begin": 883, "end": 900, "name": "MUL", "source": 0 },
              { "begin": 883, "end": 900, "name": "OR", "source": 0 },
              { "begin": 883, "end": 900, "name": "SWAP1", "source": 0 },
              { "begin": 883, "end": 900, "name": "SSTORE", "source": 0 },
              { "begin": 883, "end": 900, "name": "POP", "source": 0 },
              {
                "begin": 416,
                "end": 1823,
                "name": "PUSH #[$]",
                "source": 0,
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              { "begin": 416, "end": 1823, "name": "DUP1", "source": 0 },
              {
                "begin": 416,
                "end": 1823,
                "name": "PUSH [$]",
                "source": 0,
                "value": "0000000000000000000000000000000000000000000000000000000000000000"
              },
              {
                "begin": 416,
                "end": 1823,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 416, "end": 1823, "name": "CODECOPY", "source": 0 },
              {
                "begin": 416,
                "end": 1823,
                "name": "PUSH",
                "source": 0,
                "value": "0"
              },
              { "begin": 416, "end": 1823, "name": "RETURN", "source": 0 }
            ],
            ".data": {
              "0": {
                ".auxdata": "a164736f6c6343000706000a",
                ".code": [
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH",
                    "source": 0,
                    "value": "80"
                  },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  { "begin": 416, "end": 1823, "name": "MSTORE", "source": 0 },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "CALLDATASIZE",
                    "source": 0
                  },
                  { "begin": 416, "end": 1823, "name": "LT", "source": 0 },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "1"
                  },
                  { "begin": 416, "end": 1823, "name": "JUMPI", "source": 0 },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "CALLDATALOAD",
                    "source": 0
                  },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH",
                    "source": 0,
                    "value": "E0"
                  },
                  { "begin": 416, "end": 1823, "name": "SHR", "source": 0 },
                  { "begin": 416, "end": 1823, "name": "DUP1", "source": 0 },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4BA2363A"
                  },
                  { "begin": 416, "end": 1823, "name": "EQ", "source": 0 },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "2"
                  },
                  { "begin": 416, "end": 1823, "name": "JUMPI", "source": 0 },
                  { "begin": 416, "end": 1823, "name": "DUP1", "source": 0 },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH",
                    "source": 0,
                    "value": "76CDB03B"
                  },
                  { "begin": 416, "end": 1823, "name": "EQ", "source": 0 },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "3"
                  },
                  { "begin": 416, "end": 1823, "name": "JUMPI", "source": 0 },
                  { "begin": 416, "end": 1823, "name": "DUP1", "source": 0 },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH",
                    "source": 0,
                    "value": "93E84CD9"
                  },
                  { "begin": 416, "end": 1823, "name": "EQ", "source": 0 },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "4"
                  },
                  { "begin": 416, "end": 1823, "name": "JUMPI", "source": 0 },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "tag",
                    "source": 0,
                    "value": "1"
                  },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH",
                    "source": 0,
                    "value": "8C379A000000000000000000000000000000000000000000000000000000000"
                  },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  { "begin": 416, "end": 1823, "name": "MSTORE", "source": 0 },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  { "begin": 416, "end": 1823, "name": "MSTORE", "source": 0 },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH",
                    "source": 0,
                    "value": "35"
                  },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  { "begin": 416, "end": 1823, "name": "ADD", "source": 0 },
                  { "begin": 416, "end": 1823, "name": "MSTORE", "source": 0 },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  { "begin": 416, "end": 1823, "name": "ADD", "source": 0 },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH",
                    "source": 0,
                    "value": "436F6E747261637420646F6573206E6F7420686176652066616C6C6261636B20"
                  },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  { "begin": 416, "end": 1823, "name": "DUP3", "source": 0 },
                  { "begin": 416, "end": 1823, "name": "ADD", "source": 0 },
                  { "begin": 416, "end": 1823, "name": "MSTORE", "source": 0 },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH",
                    "source": 0,
                    "value": "6E6F7220726563656976652066756E6374696F6E730000000000000000000000"
                  },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  { "begin": 416, "end": 1823, "name": "DUP3", "source": 0 },
                  { "begin": 416, "end": 1823, "name": "ADD", "source": 0 },
                  { "begin": 416, "end": 1823, "name": "MSTORE", "source": 0 },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  { "begin": 416, "end": 1823, "name": "DUP2", "source": 0 },
                  { "begin": 416, "end": 1823, "name": "ADD", "source": 0 },
                  {
                    "begin": 416,
                    "end": 1823,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  { "begin": 416, "end": 1823, "name": "REVERT", "source": 0 },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "tag",
                    "source": 0,
                    "value": "2"
                  },
                  { "begin": 761, "end": 776, "name": "JUMPDEST", "source": 0 },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "CALLVALUE",
                    "source": 0
                  },
                  { "begin": 761, "end": 776, "name": "DUP1", "source": 0 },
                  { "begin": 761, "end": 776, "name": "ISZERO", "source": 0 },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "5"
                  },
                  { "begin": 761, "end": 776, "name": "JUMPI", "source": 0 },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "PUSH",
                    "source": 0,
                    "value": "8C379A000000000000000000000000000000000000000000000000000000000"
                  },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  { "begin": 761, "end": 776, "name": "MSTORE", "source": 0 },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  { "begin": 761, "end": 776, "name": "MSTORE", "source": 0 },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "PUSH",
                    "source": 0,
                    "value": "22"
                  },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  { "begin": 761, "end": 776, "name": "ADD", "source": 0 },
                  { "begin": 761, "end": 776, "name": "MSTORE", "source": 0 },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  { "begin": 761, "end": 776, "name": "ADD", "source": 0 },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "PUSH",
                    "source": 0,
                    "value": "45746865722073656E7420746F206E6F6E2D70617961626C652066756E637469"
                  },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  { "begin": 761, "end": 776, "name": "DUP3", "source": 0 },
                  { "begin": 761, "end": 776, "name": "ADD", "source": 0 },
                  { "begin": 761, "end": 776, "name": "MSTORE", "source": 0 },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "PUSH",
                    "source": 0,
                    "value": "6F6E000000000000000000000000000000000000000000000000000000000000"
                  },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  { "begin": 761, "end": 776, "name": "DUP3", "source": 0 },
                  { "begin": 761, "end": 776, "name": "ADD", "source": 0 },
                  { "begin": 761, "end": 776, "name": "MSTORE", "source": 0 },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  { "begin": 761, "end": 776, "name": "DUP2", "source": 0 },
                  { "begin": 761, "end": 776, "name": "ADD", "source": 0 },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  { "begin": 761, "end": 776, "name": "REVERT", "source": 0 },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "tag",
                    "source": 0,
                    "value": "5"
                  },
                  { "begin": 761, "end": 776, "name": "JUMPDEST", "source": 0 },
                  { "begin": 761, "end": 776, "name": "POP", "source": 0 },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "6"
                  },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "7"
                  },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "tag",
                    "source": 0,
                    "value": "6"
                  },
                  { "begin": 761, "end": 776, "name": "JUMPDEST", "source": 0 },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  { "begin": 761, "end": 776, "name": "MLOAD", "source": 0 },
                  { "begin": 761, "end": 776, "name": "DUP1", "source": 0 },
                  { "begin": 761, "end": 776, "name": "DUP3", "source": 0 },
                  { "begin": 761, "end": 776, "name": "DUP2", "source": 0 },
                  { "begin": 761, "end": 776, "name": "MSTORE", "source": 0 },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  { "begin": 761, "end": 776, "name": "ADD", "source": 0 },
                  { "begin": 761, "end": 776, "name": "SWAP2", "source": 0 },
                  { "begin": 761, "end": 776, "name": "POP", "source": 0 },
                  { "begin": 761, "end": 776, "name": "POP", "source": 0 },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  { "begin": 761, "end": 776, "name": "MLOAD", "source": 0 },
                  { "begin": 761, "end": 776, "name": "DUP1", "source": 0 },
                  { "begin": 761, "end": 776, "name": "SWAP2", "source": 0 },
                  { "begin": 761, "end": 776, "name": "SUB", "source": 0 },
                  { "begin": 761, "end": 776, "name": "SWAP1", "source": 0 },
                  { "begin": 761, "end": 776, "name": "RETURN", "source": 0 },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "tag",
                    "source": 0,
                    "value": "3"
                  },
                  { "begin": 662, "end": 689, "name": "JUMPDEST", "source": 0 },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "CALLVALUE",
                    "source": 0
                  },
                  { "begin": 662, "end": 689, "name": "DUP1", "source": 0 },
                  { "begin": 662, "end": 689, "name": "ISZERO", "source": 0 },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "8"
                  },
                  { "begin": 662, "end": 689, "name": "JUMPI", "source": 0 },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "PUSH",
                    "source": 0,
                    "value": "8C379A000000000000000000000000000000000000000000000000000000000"
                  },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  { "begin": 662, "end": 689, "name": "MSTORE", "source": 0 },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  { "begin": 662, "end": 689, "name": "MSTORE", "source": 0 },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "PUSH",
                    "source": 0,
                    "value": "22"
                  },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  { "begin": 662, "end": 689, "name": "ADD", "source": 0 },
                  { "begin": 662, "end": 689, "name": "MSTORE", "source": 0 },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "PUSH",
                    "source": 0,
                    "value": "4"
                  },
                  { "begin": 662, "end": 689, "name": "ADD", "source": 0 },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "PUSH",
                    "source": 0,
                    "value": "45746865722073656E7420746F206E6F6E2D70617961626C652066756E637469"
                  },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  { "begin": 662, "end": 689, "name": "DUP3", "source": 0 },
                  { "begin": 662, "end": 689, "name": "ADD", "source": 0 },
                  { "begin": 662, "end": 689, "name": "MSTORE", "source": 0 },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "PUSH",
                    "source": 0,
                    "value": "6F6E000000000000000000000000000000000000000000000000000000000000"
                  },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  { "begin": 662, "end": 689, "name": "DUP3", "source": 0 },
                  { "begin": 662, "end": 689, "name": "ADD", "source": 0 },
                  { "begin": 662, "end": 689, "name": "MSTORE", "source": 0 },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  { "begin": 662, "end": 689, "name": "DUP2", "source": 0 },
                  { "begin": 662, "end": 689, "name": "ADD", "source": 0 },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  { "begin": 662, "end": 689, "name": "REVERT", "source": 0 },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "tag",
                    "source": 0,
                    "value": "8"
                  },
                  { "begin": 662, "end": 689, "name": "JUMPDEST", "source": 0 },
                  { "begin": 662, "end": 689, "name": "POP", "source": 0 },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "9"
                  },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "10"
                  },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "tag",
                    "source": 0,
                    "value": "9"
                  },
                  { "begin": 662, "end": 689, "name": "JUMPDEST", "source": 0 },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  { "begin": 662, "end": 689, "name": "MLOAD", "source": 0 },
                  { "begin": 662, "end": 689, "name": "DUP1", "source": 0 },
                  { "begin": 662, "end": 689, "name": "DUP3", "source": 0 },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "PUSH",
                    "source": 0,
                    "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                  },
                  { "begin": 662, "end": 689, "name": "AND", "source": 0 },
                  { "begin": 662, "end": 689, "name": "DUP2", "source": 0 },
                  { "begin": 662, "end": 689, "name": "MSTORE", "source": 0 },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  { "begin": 662, "end": 689, "name": "ADD", "source": 0 },
                  { "begin": 662, "end": 689, "name": "SWAP2", "source": 0 },
                  { "begin": 662, "end": 689, "name": "POP", "source": 0 },
                  { "begin": 662, "end": 689, "name": "POP", "source": 0 },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  { "begin": 662, "end": 689, "name": "MLOAD", "source": 0 },
                  { "begin": 662, "end": 689, "name": "DUP1", "source": 0 },
                  { "begin": 662, "end": 689, "name": "SWAP2", "source": 0 },
                  { "begin": 662, "end": 689, "name": "SUB", "source": 0 },
                  { "begin": 662, "end": 689, "name": "SWAP1", "source": 0 },
                  { "begin": 662, "end": 689, "name": "RETURN", "source": 0 },
                  {
                    "begin": 1046,
                    "end": 1820,
                    "name": "tag",
                    "source": 0,
                    "value": "4"
                  },
                  {
                    "begin": 1046,
                    "end": 1820,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 1046,
                    "end": 1820,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "11"
                  },
                  {
                    "begin": 1046,
                    "end": 1820,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "12"
                  },
                  {
                    "begin": 1046,
                    "end": 1820,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[in]"
                  },
                  {
                    "begin": 1046,
                    "end": 1820,
                    "name": "tag",
                    "source": 0,
                    "value": "11"
                  },
                  {
                    "begin": 1046,
                    "end": 1820,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  { "begin": 1046, "end": 1820, "name": "STOP", "source": 0 },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "tag",
                    "source": 0,
                    "value": "7"
                  },
                  { "begin": 761, "end": 776, "name": "JUMPDEST", "source": 0 },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "PUSH",
                    "source": 0,
                    "value": "1"
                  },
                  { "begin": 761, "end": 776, "name": "SLOAD", "source": 0 },
                  { "begin": 761, "end": 776, "name": "DUP2", "source": 0 },
                  {
                    "begin": 761,
                    "end": 776,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[out]"
                  },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "tag",
                    "source": 0,
                    "value": "10"
                  },
                  { "begin": 662, "end": 689, "name": "JUMPDEST", "source": 0 },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  { "begin": 662, "end": 689, "name": "DUP1", "source": 0 },
                  { "begin": 662, "end": 689, "name": "SLOAD", "source": 0 },
                  { "begin": 662, "end": 689, "name": "SWAP1", "source": 0 },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "PUSH",
                    "source": 0,
                    "value": "100"
                  },
                  { "begin": 662, "end": 689, "name": "EXP", "source": 0 },
                  { "begin": 662, "end": 689, "name": "SWAP1", "source": 0 },
                  { "begin": 662, "end": 689, "name": "DIV", "source": 0 },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "PUSH",
                    "source": 0,
                    "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                  },
                  { "begin": 662, "end": 689, "name": "AND", "source": 0 },
                  { "begin": 662, "end": 689, "name": "DUP2", "source": 0 },
                  {
                    "begin": 662,
                    "end": 689,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[out]"
                  },
                  {
                    "begin": 1046,
                    "end": 1820,
                    "name": "tag",
                    "source": 0,
                    "value": "12"
                  },
                  {
                    "begin": 1046,
                    "end": 1820,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 537,
                    "end": 539,
                    "name": "PUSH",
                    "source": 0,
                    "value": "A"
                  },
                  {
                    "begin": 1171,
                    "end": 1180,
                    "name": "CALLVALUE",
                    "source": 0
                  },
                  { "begin": 1171, "end": 1197, "name": "EQ", "source": 0 },
                  {
                    "begin": 1164,
                    "end": 1198,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "14"
                  },
                  { "begin": 1164, "end": 1198, "name": "JUMPI", "source": 0 },
                  {
                    "begin": 1164,
                    "end": 1198,
                    "name": "INVALID",
                    "source": 0
                  },
                  {
                    "begin": 1164,
                    "end": 1198,
                    "name": "tag",
                    "source": 0,
                    "value": "14"
                  },
                  {
                    "begin": 1164,
                    "end": 1198,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  {
                    "begin": 1262,
                    "end": 1271,
                    "name": "CALLVALUE",
                    "source": 0
                  },
                  {
                    "begin": 1255,
                    "end": 1258,
                    "name": "PUSH",
                    "source": 0,
                    "value": "1"
                  },
                  {
                    "begin": 1255,
                    "end": 1258,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  { "begin": 1255, "end": 1271, "name": "DUP3", "source": 0 },
                  { "begin": 1255, "end": 1271, "name": "DUP3", "source": 0 },
                  { "begin": 1255, "end": 1271, "name": "SLOAD", "source": 0 },
                  { "begin": 1255, "end": 1271, "name": "ADD", "source": 0 },
                  { "begin": 1255, "end": 1271, "name": "SWAP3", "source": 0 },
                  { "begin": 1255, "end": 1271, "name": "POP", "source": 0 },
                  { "begin": 1255, "end": 1271, "name": "POP", "source": 0 },
                  { "begin": 1255, "end": 1271, "name": "DUP2", "source": 0 },
                  { "begin": 1255, "end": 1271, "name": "SWAP1", "source": 0 },
                  { "begin": 1255, "end": 1271, "name": "SSTORE", "source": 0 },
                  { "begin": 1255, "end": 1271, "name": "POP", "source": 0 },
                  {
                    "begin": 1419,
                    "end": 1430,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 1486,
                    "end": 1487,
                    "name": "PUSH",
                    "source": 0,
                    "value": "2"
                  },
                  {
                    "begin": 1465,
                    "end": 1480,
                    "name": "TIMESTAMP",
                    "source": 0
                  },
                  {
                    "begin": 1448,
                    "end": 1481,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  { "begin": 1448, "end": 1481, "name": "MLOAD", "source": 0 },
                  {
                    "begin": 1448,
                    "end": 1481,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  { "begin": 1448, "end": 1481, "name": "ADD", "source": 0 },
                  { "begin": 1448, "end": 1481, "name": "DUP1", "source": 0 },
                  { "begin": 1448, "end": 1481, "name": "DUP3", "source": 0 },
                  { "begin": 1448, "end": 1481, "name": "DUP2", "source": 0 },
                  { "begin": 1448, "end": 1481, "name": "MSTORE", "source": 0 },
                  {
                    "begin": 1448,
                    "end": 1481,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  { "begin": 1448, "end": 1481, "name": "ADD", "source": 0 },
                  { "begin": 1448, "end": 1481, "name": "SWAP2", "source": 0 },
                  { "begin": 1448, "end": 1481, "name": "POP", "source": 0 },
                  { "begin": 1448, "end": 1481, "name": "POP", "source": 0 },
                  {
                    "begin": 1448,
                    "end": 1481,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  { "begin": 1448, "end": 1481, "name": "MLOAD", "source": 0 },
                  {
                    "begin": 1448,
                    "end": 1481,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  { "begin": 1448, "end": 1481, "name": "DUP2", "source": 0 },
                  { "begin": 1448, "end": 1481, "name": "DUP4", "source": 0 },
                  { "begin": 1448, "end": 1481, "name": "SUB", "source": 0 },
                  { "begin": 1448, "end": 1481, "name": "SUB", "source": 0 },
                  { "begin": 1448, "end": 1481, "name": "DUP2", "source": 0 },
                  { "begin": 1448, "end": 1481, "name": "MSTORE", "source": 0 },
                  { "begin": 1448, "end": 1481, "name": "SWAP1", "source": 0 },
                  {
                    "begin": 1448,
                    "end": 1481,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  { "begin": 1448, "end": 1481, "name": "MSTORE", "source": 0 },
                  { "begin": 1438, "end": 1482, "name": "DUP1", "source": 0 },
                  { "begin": 1438, "end": 1482, "name": "MLOAD", "source": 0 },
                  { "begin": 1438, "end": 1482, "name": "SWAP1", "source": 0 },
                  {
                    "begin": 1438,
                    "end": 1482,
                    "name": "PUSH",
                    "source": 0,
                    "value": "20"
                  },
                  { "begin": 1438, "end": 1482, "name": "ADD", "source": 0 },
                  {
                    "begin": 1438,
                    "end": 1482,
                    "name": "KECCAK256",
                    "source": 0
                  },
                  {
                    "begin": 1433,
                    "end": 1483,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  { "begin": 1433, "end": 1483, "name": "SHR", "source": 0 },
                  { "begin": 1433, "end": 1487, "name": "DUP2", "source": 0 },
                  {
                    "begin": 1433,
                    "end": 1487,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "15"
                  },
                  { "begin": 1433, "end": 1487, "name": "JUMPI", "source": 0 },
                  {
                    "begin": 1433,
                    "end": 1487,
                    "name": "INVALID",
                    "source": 0
                  },
                  {
                    "begin": 1433,
                    "end": 1487,
                    "name": "tag",
                    "source": 0,
                    "value": "15"
                  },
                  {
                    "begin": 1433,
                    "end": 1487,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  { "begin": 1433, "end": 1487, "name": "MOD", "source": 0 },
                  { "begin": 1419, "end": 1487, "name": "SWAP1", "source": 0 },
                  { "begin": 1419, "end": 1487, "name": "POP", "source": 0 },
                  {
                    "begin": 1574,
                    "end": 1575,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  { "begin": 1564, "end": 1570, "name": "DUP2", "source": 0 },
                  { "begin": 1564, "end": 1575, "name": "EQ", "source": 0 },
                  { "begin": 1560, "end": 1814, "name": "ISZERO", "source": 0 },
                  {
                    "begin": 1560,
                    "end": 1814,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "16"
                  },
                  { "begin": 1560, "end": 1814, "name": "JUMPI", "source": 0 },
                  {
                    "begin": 1633,
                    "end": 1637,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  { "begin": 1633, "end": 1637, "name": "DUP1", "source": 0 },
                  { "begin": 1633, "end": 1637, "name": "SLOAD", "source": 0 },
                  { "begin": 1633, "end": 1637, "name": "SWAP1", "source": 0 },
                  {
                    "begin": 1633,
                    "end": 1637,
                    "name": "PUSH",
                    "source": 0,
                    "value": "100"
                  },
                  { "begin": 1633, "end": 1637, "name": "EXP", "source": 0 },
                  { "begin": 1633, "end": 1637, "name": "SWAP1", "source": 0 },
                  { "begin": 1633, "end": 1637, "name": "DIV", "source": 0 },
                  {
                    "begin": 1633,
                    "end": 1637,
                    "name": "PUSH",
                    "source": 0,
                    "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                  },
                  { "begin": 1633, "end": 1637, "name": "AND", "source": 0 },
                  {
                    "begin": 1633,
                    "end": 1646,
                    "name": "PUSH",
                    "source": 0,
                    "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                  },
                  { "begin": 1633, "end": 1646, "name": "AND", "source": 0 },
                  {
                    "begin": 1633,
                    "end": 1658,
                    "name": "PUSH",
                    "source": 0,
                    "value": "8FC"
                  },
                  {
                    "begin": 620,
                    "end": 621,
                    "name": "PUSH",
                    "source": 0,
                    "value": "1"
                  },
                  { "begin": 1633, "end": 1658, "name": "SWAP1", "source": 0 },
                  { "begin": 1633, "end": 1658, "name": "DUP2", "source": 0 },
                  { "begin": 1633, "end": 1658, "name": "ISZERO", "source": 0 },
                  { "begin": 1633, "end": 1658, "name": "MUL", "source": 0 },
                  { "begin": 1633, "end": 1658, "name": "SWAP1", "source": 0 },
                  {
                    "begin": 1633,
                    "end": 1658,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  { "begin": 1633, "end": 1658, "name": "MLOAD", "source": 0 },
                  {
                    "begin": 1633,
                    "end": 1658,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 1633,
                    "end": 1658,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  { "begin": 1633, "end": 1658, "name": "MLOAD", "source": 0 },
                  { "begin": 1633, "end": 1658, "name": "DUP1", "source": 0 },
                  { "begin": 1633, "end": 1658, "name": "DUP4", "source": 0 },
                  { "begin": 1633, "end": 1658, "name": "SUB", "source": 0 },
                  { "begin": 1633, "end": 1658, "name": "DUP2", "source": 0 },
                  { "begin": 1633, "end": 1658, "name": "DUP6", "source": 0 },
                  { "begin": 1633, "end": 1658, "name": "DUP9", "source": 0 },
                  { "begin": 1633, "end": 1658, "name": "DUP9", "source": 0 },
                  { "begin": 1633, "end": 1658, "name": "CALL", "source": 0 },
                  { "begin": 1633, "end": 1658, "name": "SWAP4", "source": 0 },
                  { "begin": 1633, "end": 1658, "name": "POP", "source": 0 },
                  { "begin": 1633, "end": 1658, "name": "POP", "source": 0 },
                  { "begin": 1633, "end": 1658, "name": "POP", "source": 0 },
                  { "begin": 1633, "end": 1658, "name": "POP", "source": 0 },
                  { "begin": 1633, "end": 1658, "name": "ISZERO", "source": 0 },
                  { "begin": 1633, "end": 1658, "name": "DUP1", "source": 0 },
                  { "begin": 1633, "end": 1658, "name": "ISZERO", "source": 0 },
                  {
                    "begin": 1633,
                    "end": 1658,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "18"
                  },
                  { "begin": 1633, "end": 1658, "name": "JUMPI", "source": 0 },
                  {
                    "begin": 1633,
                    "end": 1658,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 1633,
                    "end": 1658,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  { "begin": 1633, "end": 1658, "name": "DUP1", "source": 0 },
                  {
                    "begin": 1633,
                    "end": 1658,
                    "name": "RETURNDATACOPY",
                    "source": 0
                  },
                  {
                    "begin": 1633,
                    "end": 1658,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 1633,
                    "end": 1658,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  { "begin": 1633, "end": 1658, "name": "REVERT", "source": 0 },
                  {
                    "begin": 1633,
                    "end": 1658,
                    "name": "tag",
                    "source": 0,
                    "value": "18"
                  },
                  {
                    "begin": 1633,
                    "end": 1658,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  { "begin": 1633, "end": 1658, "name": "POP", "source": 0 },
                  { "begin": 1712, "end": 1722, "name": "CALLER", "source": 0 },
                  {
                    "begin": 1712,
                    "end": 1731,
                    "name": "PUSH",
                    "source": 0,
                    "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                  },
                  { "begin": 1712, "end": 1731, "name": "AND", "source": 0 },
                  {
                    "begin": 1712,
                    "end": 1749,
                    "name": "PUSH",
                    "source": 0,
                    "value": "8FC"
                  },
                  {
                    "begin": 620,
                    "end": 621,
                    "name": "PUSH",
                    "source": 0,
                    "value": "1"
                  },
                  { "begin": 1732, "end": 1735, "name": "DUP1", "source": 0 },
                  { "begin": 1732, "end": 1735, "name": "SLOAD", "source": 0 },
                  { "begin": 1732, "end": 1748, "name": "SUB", "source": 0 },
                  { "begin": 1712, "end": 1749, "name": "SWAP1", "source": 0 },
                  { "begin": 1712, "end": 1749, "name": "DUP2", "source": 0 },
                  { "begin": 1712, "end": 1749, "name": "ISZERO", "source": 0 },
                  { "begin": 1712, "end": 1749, "name": "MUL", "source": 0 },
                  { "begin": 1712, "end": 1749, "name": "SWAP1", "source": 0 },
                  {
                    "begin": 1712,
                    "end": 1749,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  { "begin": 1712, "end": 1749, "name": "MLOAD", "source": 0 },
                  {
                    "begin": 1712,
                    "end": 1749,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 1712,
                    "end": 1749,
                    "name": "PUSH",
                    "source": 0,
                    "value": "40"
                  },
                  { "begin": 1712, "end": 1749, "name": "MLOAD", "source": 0 },
                  { "begin": 1712, "end": 1749, "name": "DUP1", "source": 0 },
                  { "begin": 1712, "end": 1749, "name": "DUP4", "source": 0 },
                  { "begin": 1712, "end": 1749, "name": "SUB", "source": 0 },
                  { "begin": 1712, "end": 1749, "name": "DUP2", "source": 0 },
                  { "begin": 1712, "end": 1749, "name": "DUP6", "source": 0 },
                  { "begin": 1712, "end": 1749, "name": "DUP9", "source": 0 },
                  { "begin": 1712, "end": 1749, "name": "DUP9", "source": 0 },
                  { "begin": 1712, "end": 1749, "name": "CALL", "source": 0 },
                  { "begin": 1712, "end": 1749, "name": "SWAP4", "source": 0 },
                  { "begin": 1712, "end": 1749, "name": "POP", "source": 0 },
                  { "begin": 1712, "end": 1749, "name": "POP", "source": 0 },
                  { "begin": 1712, "end": 1749, "name": "POP", "source": 0 },
                  { "begin": 1712, "end": 1749, "name": "POP", "source": 0 },
                  { "begin": 1712, "end": 1749, "name": "ISZERO", "source": 0 },
                  { "begin": 1712, "end": 1749, "name": "DUP1", "source": 0 },
                  { "begin": 1712, "end": 1749, "name": "ISZERO", "source": 0 },
                  {
                    "begin": 1712,
                    "end": 1749,
                    "name": "PUSH [tag]",
                    "source": 0,
                    "value": "20"
                  },
                  { "begin": 1712, "end": 1749, "name": "JUMPI", "source": 0 },
                  {
                    "begin": 1712,
                    "end": 1749,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 1712,
                    "end": 1749,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  { "begin": 1712, "end": 1749, "name": "DUP1", "source": 0 },
                  {
                    "begin": 1712,
                    "end": 1749,
                    "name": "RETURNDATACOPY",
                    "source": 0
                  },
                  {
                    "begin": 1712,
                    "end": 1749,
                    "name": "RETURNDATASIZE",
                    "source": 0
                  },
                  {
                    "begin": 1712,
                    "end": 1749,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  { "begin": 1712, "end": 1749, "name": "REVERT", "source": 0 },
                  {
                    "begin": 1712,
                    "end": 1749,
                    "name": "tag",
                    "source": 0,
                    "value": "20"
                  },
                  {
                    "begin": 1712,
                    "end": 1749,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  { "begin": 1712, "end": 1749, "name": "POP", "source": 0 },
                  {
                    "begin": 1802,
                    "end": 1803,
                    "name": "PUSH",
                    "source": 0,
                    "value": "0"
                  },
                  {
                    "begin": 1796,
                    "end": 1799,
                    "name": "PUSH",
                    "source": 0,
                    "value": "1"
                  },
                  { "begin": 1796, "end": 1803, "name": "DUP2", "source": 0 },
                  { "begin": 1796, "end": 1803, "name": "SWAP1", "source": 0 },
                  { "begin": 1796, "end": 1803, "name": "SSTORE", "source": 0 },
                  { "begin": 1796, "end": 1803, "name": "POP", "source": 0 },
                  {
                    "begin": 1560,
                    "end": 1814,
                    "name": "tag",
                    "source": 0,
                    "value": "16"
                  },
                  {
                    "begin": 1560,
                    "end": 1814,
                    "name": "JUMPDEST",
                    "source": 0
                  },
                  { "begin": 1046, "end": 1820, "name": "POP", "source": 0 },
                  {
                    "begin": 1046,
                    "end": 1820,
                    "name": "JUMP",
                    "source": 0,
                    "value": "[out]"
                  }
                ]
              }
            }
          },
          "methodIdentifiers": {
            "bank()": "76cdb03b",
            "play()": "93e84cd9",
            "pot()": "4ba2363a"
          }
        },
        "ewasm": { "wasm": "" },
        "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"bank\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"play\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Ethereum Lottery Game.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"compiler076/EtherLotto.sol\":\"EtherLotto\"},\"debug\":{\"revertStrings\":\"debug\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"compiler076/EtherLotto.sol\":{\"content\":\"/*\\n * @article: https://blog.positive.com/predicting-random-numbers-in-ethereum-smart-contracts-e5358c6b8620\\n * @source: https://etherscan.io/address/0xa11e4ed59dc94e69612f3111942626ed513cb172#code\\n * Upgraded from Solidity 0.4 to 0.7, vulnerability may no longer exist\\n * @vulnerable_at_lines: 45\\n * @author: -\\n */\\n\\n// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.7.0;\\n\\n/// @title Ethereum Lottery Game.\\n\\ncontract EtherLotto {\\n\\n    // Amount of ether needed for participating in the lottery.\\n    uint constant TICKET_AMOUNT = 10;\\n\\n    // Fixed amount fee for each lottery game.\\n    uint constant FEE_AMOUNT = 1;\\n\\n    // Address where fee is sent.\\n    address payable public bank;\\n\\n    // Public jackpot that each participant can win (minus fee).\\n    uint public pot;\\n\\n    // Lottery constructor sets bank account from the smart-contract owner.\\n    constructor() {\\n        bank = msg.sender;\\n    }\\n\\n    // Public function for playing lottery. Each time this function\\n    // is invoked, the sender has an oportunity for winning pot.\\n    function play() public payable {\\n\\n        // Participants must spend some fixed ether before playing lottery.\\n        assert(msg.value == TICKET_AMOUNT);\\n\\n        // Increase pot for each participant.\\n        pot += msg.value;\\n\\n        // Compute some *almost random* value for selecting winner from current transaction.\\n        // <yes> <report> TIME_MANIPULATION\\n        uint random = uint(keccak256(abi.encodePacked(block.timestamp))) % 2;\\n\\n        // Distribution: 50% of participants will be winners.\\n        if (random == 0) {\\n\\n            // Send fee to bank account.\\n            bank.transfer(FEE_AMOUNT);\\n\\n            // Send jackpot to winner.\\n            msg.sender.transfer(pot - FEE_AMOUNT);\\n\\n            // Restart jackpot.\\n            pot = 0;\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0xdb183c17ccb423756e0fd4d1cef785b40dd6e8ab332a6057a201f1f353941ef1\",\"license\":\"UNLICENSED\"}},\"version\":1}",
        "storageLayout": {
          "storage": [
            {
              "astId": 10,
              "contract": "compiler076/EtherLotto.sol:EtherLotto",
              "label": "bank",
              "offset": 0,
              "slot": "0",
              "type": "t_address_payable"
            },
            {
              "astId": 12,
              "contract": "compiler076/EtherLotto.sol:EtherLotto",
              "label": "pot",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256"
            }
          ],
          "types": {
            "t_address_payable": {
              "encoding": "inplace",
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "encoding": "inplace",
              "label": "uint256",
              "numberOfBytes": "32"
            }
          }
        },
        "userdoc": { "kind": "user", "methods": {}, "version": 1 }
      }
    }
  },
  "sources": {
    "compiler076/EtherLotto.sol": {
      "ast": {
        "absolutePath": "compiler076/EtherLotto.sol",
        "exportedSymbols": { "EtherLotto": [78] },
        "id": 79,
        "license": "UNLICENSED",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1,
            "literals": ["solidity", "^", "0.7", ".0"],
            "nodeType": "PragmaDirective",
            "src": "356:23:0"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 2,
              "nodeType": "StructuredDocumentation",
              "src": "381:34:0",
              "text": "@title Ethereum Lottery Game."
            },
            "fullyImplemented": true,
            "id": 78,
            "linearizedBaseContracts": [78],
            "name": "EtherLotto",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": true,
                "id": 5,
                "mutability": "constant",
                "name": "TICKET_AMOUNT",
                "nodeType": "VariableDeclaration",
                "scope": 78,
                "src": "507:32:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "507:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "hexValue": "3130",
                  "id": 4,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "537:2:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "visibility": "internal"
              },
              {
                "constant": true,
                "id": 8,
                "mutability": "constant",
                "name": "FEE_AMOUNT",
                "nodeType": "VariableDeclaration",
                "scope": 78,
                "src": "593:28:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "593:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "hexValue": "31",
                  "id": 7,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "620:1:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "1"
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "functionSelector": "76cdb03b",
                "id": 10,
                "mutability": "mutable",
                "name": "bank",
                "nodeType": "VariableDeclaration",
                "scope": 78,
                "src": "662:27:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 9,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "662:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "functionSelector": "4ba2363a",
                "id": 12,
                "mutability": "mutable",
                "name": "pot",
                "nodeType": "VariableDeclaration",
                "scope": 78,
                "src": "761:15:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "761:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "public"
              },
              {
                "body": {
                  "id": 20,
                  "nodeType": "Block",
                  "src": "873:34:0",
                  "statements": [
                    {
                      "expression": {
                        "id": 18,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 15,
                          "name": "bank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "883:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "expression": {
                            "id": 16,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "890:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 17,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "890:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "883:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 19,
                      "nodeType": "ExpressionStatement",
                      "src": "883:17:0"
                    }
                  ]
                },
                "id": 21,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [],
                "name": "",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 13,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "870:2:0"
                },
                "returnParameters": {
                  "id": 14,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "873:0:0"
                },
                "scope": 78,
                "src": "859:48:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 76,
                  "nodeType": "Block",
                  "src": "1077:743:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 28,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 25,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1171:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 26,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "1171:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 27,
                              "name": "TICKET_AMOUNT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5,
                              "src": "1184:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1171:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_bool", "typeString": "bool" }
                          ],
                          "id": 24,
                          "name": "assert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -3,
                          "src": "1164:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 29,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1164:34:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 30,
                      "nodeType": "ExpressionStatement",
                      "src": "1164:34:0"
                    },
                    {
                      "expression": {
                        "id": 34,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 31,
                          "name": "pot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "1255:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "expression": {
                            "id": 32,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1262:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 33,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1262:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1255:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 35,
                      "nodeType": "ExpressionStatement",
                      "src": "1255:16:0"
                    },
                    {
                      "assignments": [37],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 37,
                          "mutability": "mutable",
                          "name": "random",
                          "nodeType": "VariableDeclaration",
                          "scope": 76,
                          "src": "1419:11:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 36,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "1419:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 50,
                      "initialValue": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 43,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "1465:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 44,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "src": "1465:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 41,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "1448:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 42,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "1448:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 45,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1448:33:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 40,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "1438:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 46,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1438:44:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 39,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1433:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 38,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "1433:4:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1433:50:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 48,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1486:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "1433:54:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1419:68:0"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 51,
                          "name": "random",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "1564:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 52,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1574:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1564:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 75,
                      "nodeType": "IfStatement",
                      "src": "1560:254:0",
                      "trueBody": {
                        "id": 74,
                        "nodeType": "Block",
                        "src": "1577:237:0",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 57,
                                  "name": "FEE_AMOUNT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8,
                                  "src": "1647:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 54,
                                  "name": "bank",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10,
                                  "src": "1633:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "id": 56,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "src": "1633:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256)"
                                }
                              },
                              "id": 58,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1633:25:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 59,
                            "nodeType": "ExpressionStatement",
                            "src": "1633:25:0"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 67,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 65,
                                    "name": "pot",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12,
                                    "src": "1732:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 66,
                                    "name": "FEE_AMOUNT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8,
                                    "src": "1738:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1732:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "id": 60,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1712:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 63,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1712:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "id": 64,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "src": "1712:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256)"
                                }
                              },
                              "id": 68,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1712:37:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 69,
                            "nodeType": "ExpressionStatement",
                            "src": "1712:37:0"
                          },
                          {
                            "expression": {
                              "id": 72,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 70,
                                "name": "pot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12,
                                "src": "1796:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "30",
                                "id": 71,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1802:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1796:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 73,
                            "nodeType": "ExpressionStatement",
                            "src": "1796:7:0"
                          }
                        ]
                      }
                    }
                  ]
                },
                "functionSelector": "93e84cd9",
                "id": 77,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "play",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 22,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1059:2:0"
                },
                "returnParameters": {
                  "id": 23,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1077:0:0"
                },
                "scope": 78,
                "src": "1046:774:0",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "public"
              }
            ],
            "scope": 79,
            "src": "416:1407:0"
          }
        ],
        "src": "356:1468:0"
      },
      "id": 0,
      "legacyAST": {
        "attributes": {
          "absolutePath": "compiler076/EtherLotto.sol",
          "exportedSymbols": { "EtherLotto": [78] },
          "license": "UNLICENSED"
        },
        "children": [
          {
            "attributes": { "literals": ["solidity", "^", "0.7", ".0"] },
            "id": 1,
            "name": "PragmaDirective",
            "src": "356:23:0"
          },
          {
            "attributes": {
              "abstract": false,
              "baseContracts": [null],
              "contractDependencies": [null],
              "contractKind": "contract",
              "fullyImplemented": true,
              "linearizedBaseContracts": [78],
              "name": "EtherLotto",
              "scope": 79
            },
            "children": [
              {
                "attributes": { "text": "@title Ethereum Lottery Game." },
                "id": 2,
                "name": "StructuredDocumentation",
                "src": "381:34:0"
              },
              {
                "attributes": {
                  "constant": true,
                  "mutability": "constant",
                  "name": "TICKET_AMOUNT",
                  "scope": 78,
                  "stateVariable": true,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": { "name": "uint", "type": "uint256" },
                    "id": 3,
                    "name": "ElementaryTypeName",
                    "src": "507:4:0"
                  },
                  {
                    "attributes": {
                      "hexvalue": "3130",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "number",
                      "type": "int_const 10",
                      "value": "10"
                    },
                    "id": 4,
                    "name": "Literal",
                    "src": "537:2:0"
                  }
                ],
                "id": 5,
                "name": "VariableDeclaration",
                "src": "507:32:0"
              },
              {
                "attributes": {
                  "constant": true,
                  "mutability": "constant",
                  "name": "FEE_AMOUNT",
                  "scope": 78,
                  "stateVariable": true,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": { "name": "uint", "type": "uint256" },
                    "id": 6,
                    "name": "ElementaryTypeName",
                    "src": "593:4:0"
                  },
                  {
                    "attributes": {
                      "hexvalue": "31",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "number",
                      "type": "int_const 1",
                      "value": "1"
                    },
                    "id": 7,
                    "name": "Literal",
                    "src": "620:1:0"
                  }
                ],
                "id": 8,
                "name": "VariableDeclaration",
                "src": "593:28:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "functionSelector": "76cdb03b",
                  "mutability": "mutable",
                  "name": "bank",
                  "scope": 78,
                  "stateVariable": true,
                  "storageLocation": "default",
                  "type": "address payable",
                  "visibility": "public"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "payable",
                      "type": "address payable"
                    },
                    "id": 9,
                    "name": "ElementaryTypeName",
                    "src": "662:15:0"
                  }
                ],
                "id": 10,
                "name": "VariableDeclaration",
                "src": "662:27:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "functionSelector": "4ba2363a",
                  "mutability": "mutable",
                  "name": "pot",
                  "scope": 78,
                  "stateVariable": true,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "public"
                },
                "children": [
                  {
                    "attributes": { "name": "uint", "type": "uint256" },
                    "id": 11,
                    "name": "ElementaryTypeName",
                    "src": "761:4:0"
                  }
                ],
                "id": 12,
                "name": "VariableDeclaration",
                "src": "761:15:0"
              },
              {
                "attributes": {
                  "implemented": true,
                  "isConstructor": true,
                  "kind": "constructor",
                  "modifiers": [null],
                  "name": "",
                  "scope": 78,
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                "children": [
                  {
                    "attributes": { "parameters": [null] },
                    "children": [],
                    "id": 13,
                    "name": "ParameterList",
                    "src": "870:2:0"
                  },
                  {
                    "attributes": { "parameters": [null] },
                    "children": [],
                    "id": 14,
                    "name": "ParameterList",
                    "src": "873:0:0"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [null],
                                  "referencedDeclaration": 10,
                                  "type": "address payable",
                                  "value": "bank"
                                },
                                "id": 15,
                                "name": "Identifier",
                                "src": "883:4:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [null],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 16,
                                    "name": "Identifier",
                                    "src": "890:3:0"
                                  }
                                ],
                                "id": 17,
                                "name": "MemberAccess",
                                "src": "890:10:0"
                              }
                            ],
                            "id": 18,
                            "name": "Assignment",
                            "src": "883:17:0"
                          }
                        ],
                        "id": 19,
                        "name": "ExpressionStatement",
                        "src": "883:17:0"
                      }
                    ],
                    "id": 20,
                    "name": "Block",
                    "src": "873:34:0"
                  }
                ],
                "id": 21,
                "name": "FunctionDefinition",
                "src": "859:48:0"
              },
              {
                "attributes": {
                  "functionSelector": "93e84cd9",
                  "implemented": true,
                  "isConstructor": false,
                  "kind": "function",
                  "modifiers": [null],
                  "name": "play",
                  "scope": 78,
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                "children": [
                  {
                    "attributes": { "parameters": [null] },
                    "children": [],
                    "id": 22,
                    "name": "ParameterList",
                    "src": "1059:2:0"
                  },
                  {
                    "attributes": { "parameters": [null] },
                    "children": [],
                    "id": 23,
                    "name": "ParameterList",
                    "src": "1077:0:0"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [null],
                              "tryCall": false,
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [null],
                                  "referencedDeclaration": -3,
                                  "type": "function (bool) pure",
                                  "value": "assert"
                                },
                                "id": 24,
                                "name": "Identifier",
                                "src": "1164:6:0"
                              },
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "==",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "value",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [null],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 25,
                                        "name": "Identifier",
                                        "src": "1171:3:0"
                                      }
                                    ],
                                    "id": 26,
                                    "name": "MemberAccess",
                                    "src": "1171:9:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [null],
                                      "referencedDeclaration": 5,
                                      "type": "uint256",
                                      "value": "TICKET_AMOUNT"
                                    },
                                    "id": 27,
                                    "name": "Identifier",
                                    "src": "1184:13:0"
                                  }
                                ],
                                "id": 28,
                                "name": "BinaryOperation",
                                "src": "1171:26:0"
                              }
                            ],
                            "id": 29,
                            "name": "FunctionCall",
                            "src": "1164:34:0"
                          }
                        ],
                        "id": 30,
                        "name": "ExpressionStatement",
                        "src": "1164:34:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "+=",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [null],
                                  "referencedDeclaration": 12,
                                  "type": "uint256",
                                  "value": "pot"
                                },
                                "id": 31,
                                "name": "Identifier",
                                "src": "1255:3:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "value",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [null],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 32,
                                    "name": "Identifier",
                                    "src": "1262:3:0"
                                  }
                                ],
                                "id": 33,
                                "name": "MemberAccess",
                                "src": "1262:9:0"
                              }
                            ],
                            "id": 34,
                            "name": "Assignment",
                            "src": "1255:16:0"
                          }
                        ],
                        "id": 35,
                        "name": "ExpressionStatement",
                        "src": "1255:16:0"
                      },
                      {
                        "attributes": { "assignments": [37] },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "random",
                              "scope": 76,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 36,
                                "name": "ElementaryTypeName",
                                "src": "1419:4:0"
                              }
                            ],
                            "id": 37,
                            "name": "VariableDeclaration",
                            "src": "1419:11:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "%",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [null],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": { "name": "uint" },
                                        "id": 38,
                                        "name": "ElementaryTypeName",
                                        "src": "1433:4:0"
                                      }
                                    ],
                                    "id": 39,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1433:4:0"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [null],
                                      "tryCall": false,
                                      "type": "bytes32",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
                                          "overloadedDeclarations": [null],
                                          "referencedDeclaration": -8,
                                          "type": "function (bytes memory) pure returns (bytes32)",
                                          "value": "keccak256"
                                        },
                                        "id": 40,
                                        "name": "Identifier",
                                        "src": "1438:9:0"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [null],
                                          "tryCall": false,
                                          "type": "bytes memory",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "member_name": "encodePacked",
                                              "type": "function () pure returns (bytes memory)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": -1,
                                                  "type": "abi",
                                                  "value": "abi"
                                                },
                                                "id": 41,
                                                "name": "Identifier",
                                                "src": "1448:3:0"
                                              }
                                            ],
                                            "id": 42,
                                            "name": "MemberAccess",
                                            "src": "1448:16:0"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "timestamp",
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": -4,
                                                  "type": "block",
                                                  "value": "block"
                                                },
                                                "id": 43,
                                                "name": "Identifier",
                                                "src": "1465:5:0"
                                              }
                                            ],
                                            "id": 44,
                                            "name": "MemberAccess",
                                            "src": "1465:15:0"
                                          }
                                        ],
                                        "id": 45,
                                        "name": "FunctionCall",
                                        "src": "1448:33:0"
                                      }
                                    ],
                                    "id": 46,
                                    "name": "FunctionCall",
                                    "src": "1438:44:0"
                                  }
                                ],
                                "id": 47,
                                "name": "FunctionCall",
                                "src": "1433:50:0"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "32",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 2",
                                  "value": "2"
                                },
                                "id": 48,
                                "name": "Literal",
                                "src": "1486:1:0"
                              }
                            ],
                            "id": 49,
                            "name": "BinaryOperation",
                            "src": "1433:54:0"
                          }
                        ],
                        "id": 50,
                        "name": "VariableDeclarationStatement",
                        "src": "1419:68:0"
                      },
                      {
                        "attributes": {},
                        "children": [
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [null],
                                  "referencedDeclaration": 37,
                                  "type": "uint256",
                                  "value": "random"
                                },
                                "id": 51,
                                "name": "Identifier",
                                "src": "1564:6:0"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 52,
                                "name": "Literal",
                                "src": "1574:1:0"
                              }
                            ],
                            "id": 53,
                            "name": "BinaryOperation",
                            "src": "1564:11:0"
                          },
                          {
                            "children": [
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [null],
                                      "tryCall": false,
                                      "type": "tuple()",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "transfer",
                                          "type": "function (uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [null],
                                              "referencedDeclaration": 10,
                                              "type": "address payable",
                                              "value": "bank"
                                            },
                                            "id": 54,
                                            "name": "Identifier",
                                            "src": "1633:4:0"
                                          }
                                        ],
                                        "id": 56,
                                        "name": "MemberAccess",
                                        "src": "1633:13:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [null],
                                          "referencedDeclaration": 8,
                                          "type": "uint256",
                                          "value": "FEE_AMOUNT"
                                        },
                                        "id": 57,
                                        "name": "Identifier",
                                        "src": "1647:10:0"
                                      }
                                    ],
                                    "id": 58,
                                    "name": "FunctionCall",
                                    "src": "1633:25:0"
                                  }
                                ],
                                "id": 59,
                                "name": "ExpressionStatement",
                                "src": "1633:25:0"
                              },
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [null],
                                      "tryCall": false,
                                      "type": "tuple()",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "transfer",
                                          "type": "function (uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "sender",
                                              "type": "address payable"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": -15,
                                                  "type": "msg",
                                                  "value": "msg"
                                                },
                                                "id": 60,
                                                "name": "Identifier",
                                                "src": "1712:3:0"
                                              }
                                            ],
                                            "id": 63,
                                            "name": "MemberAccess",
                                            "src": "1712:10:0"
                                          }
                                        ],
                                        "id": 64,
                                        "name": "MemberAccess",
                                        "src": "1712:19:0"
                                      },
                                      {
                                        "attributes": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "-",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [null],
                                              "referencedDeclaration": 12,
                                              "type": "uint256",
                                              "value": "pot"
                                            },
                                            "id": 65,
                                            "name": "Identifier",
                                            "src": "1732:3:0"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [null],
                                              "referencedDeclaration": 8,
                                              "type": "uint256",
                                              "value": "FEE_AMOUNT"
                                            },
                                            "id": 66,
                                            "name": "Identifier",
                                            "src": "1738:10:0"
                                          }
                                        ],
                                        "id": 67,
                                        "name": "BinaryOperation",
                                        "src": "1732:16:0"
                                      }
                                    ],
                                    "id": 68,
                                    "name": "FunctionCall",
                                    "src": "1712:37:0"
                                  }
                                ],
                                "id": 69,
                                "name": "ExpressionStatement",
                                "src": "1712:37:0"
                              },
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "=",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [null],
                                          "referencedDeclaration": 12,
                                          "type": "uint256",
                                          "value": "pot"
                                        },
                                        "id": 70,
                                        "name": "Identifier",
                                        "src": "1796:3:0"
                                      },
                                      {
                                        "attributes": {
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 71,
                                        "name": "Literal",
                                        "src": "1802:1:0"
                                      }
                                    ],
                                    "id": 72,
                                    "name": "Assignment",
                                    "src": "1796:7:0"
                                  }
                                ],
                                "id": 73,
                                "name": "ExpressionStatement",
                                "src": "1796:7:0"
                              }
                            ],
                            "id": 74,
                            "name": "Block",
                            "src": "1577:237:0"
                          }
                        ],
                        "id": 75,
                        "name": "IfStatement",
                        "src": "1560:254:0"
                      }
                    ],
                    "id": 76,
                    "name": "Block",
                    "src": "1077:743:0"
                  }
                ],
                "id": 77,
                "name": "FunctionDefinition",
                "src": "1046:774:0"
              }
            ],
            "id": 78,
            "name": "ContractDefinition",
            "src": "416:1407:0"
          }
        ],
        "id": 79,
        "name": "SourceUnit",
        "src": "356:1468:0"
      }
    }
  }
}

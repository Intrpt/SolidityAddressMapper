{
  "language": "Solidity",
  "settings": {
    "debug": {
      "revertStrings": "debug"
    },
    "optimizer": {
      "enabled": false
    },
    "evmVersion": "istanbul",
    "metadata": {
      "bytecodeHash": "none",
      "useLiteralContent": true
    },
    "outputSelection": {
      "*": {
        "": [
          "*"
        ],
        "*": [
          "*"
        ]
      }
    }
  },
  "sources": {
    "compiler0612/contracts/MyToken.sol": {
      "content": "/*\n * @source: https://ericrafaloff.com/analyzing-the-erc20-short-address-attack/\n * Upgraded from Solidity 0.4 to 0.6, vulnerability may no longer exist\n * @author: -\n * @vulnerable_at_lines: 20\n */\n\n// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.6.0;\n\n contract MyToken {\n     mapping (address => uint) balances;\n\n     event Transfer(address indexed _from, address indexed _to, uint256 _value);\n\n     constructor() public {\n         balances[tx.origin] = 10000;\n     }\n     // <yes> <report> SHORT_ADDRESSES\n     function sendCoin(address to, uint amount) public returns(bool sufficient) {\n         if (balances[msg.sender] < amount) return false;\n         balances[msg.sender] -= amount;\n         balances[to] += amount;\n         emit Transfer(msg.sender, to, amount);\n         return true;\n     }\n\n     function getBalance(address addr) public view returns(uint) {\n         return balances[addr];\n     }\n }\n"
    }
  }
}